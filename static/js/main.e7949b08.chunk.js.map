{"version":3,"sources":["functions/fileReader.ts","stores/CompanyStore.ts","stores/RootStore.ts","hooks/useStore.tsx","components/Page.tsx","pages/BalanceSheetPage/BalanceSheetPage.tsx","components/InputField.tsx","components/StyledNavLink.tsx","functions/formatting.ts","pages/CompanyInfoPage/CompanyInfoPage.tsx","pages/FiscalYearPage/FiscalYearPage.tsx","functions/extractCompanyFromSie.ts","info/resultSectionsData.ts","functions/calculateResults.ts","components/DropArea.tsx","pages/LoadSiePage/LoadSiePage.tsx","pages/NotesPage/NotesPage.tsx","pages/ResultDispositionPage/ResultDispositionPage.tsx","components/Card.tsx","components/SingleRow.tsx","components/SubTitle.tsx","pages/ResultSheetPage/ResultSheetPage.tsx","pages/SignPage/SignPage.tsx","pages/YearStoryPage/YearStoryPage.tsx","navigation/navigation.tsx","App.tsx","index.tsx"],"names":["readFile","file","reader","FileReader","readAsArrayBuffer","Promise","resolve","onload","e","text","legacy","decode","Buffer","from","target","result","CompanyStore","rootStore","company","info","name","registrationNumber","addressInfo","street","city","zipCode","phone","fiscalYears","currentStart","currentEnd","previousStart","previousEnd","accounts","operatingIncome","current","previous","children","operatingCosts","financialPosts","yearEndDistribution","taxes","operatingProfit","financialProfit","profitBeforeTaxes","yearResult","isReady","makeObservable","this","observable","hydrate","action","runInAction","RootStore","companyStore","StoreContext","createContext","undefined","StoreProvider","Provider","value","useStore","useContext","Error","Container","styled","div","Page","BalanceSheetPage","to","type","Field","Input","Wrapper","InputField","title","StyledLink","NavLink","p","margin","disabled","StyledNavLink","formatDate","date","split","reduce","acc","i","StyledCard","Card","CompanyInfoPage","useState","amount","setAmount","handleChange","event","Typography","variant","FormControl","sx","minWidth","size","Select","onChange","MenuItem","Switch","Button","FiscalYearPage","Checkbox","splitWords","row","removeQuotes","words","replace","inQuotes","replaceAll","map","word","getCompanyName","rows","find","r","startsWith","getCompanyRegistrationNumber","getCompanyAddressInfo","zipCity","getFiscalYears","currentYearRow","previousYearRow","console","log","getAccounts","year","id","balance","balanceKey","Number","previousBalance","currentBalance","extractCompanyFromSie","sieString","resultSections","sumTitle","netSales","accountRange","rawMaterialsConsumables","otherExternalExpenses","staffCosts","writeDownsReversalOfWriteDowns","depreciationAccordingToPlan","otherOperatingExpenses","profitParticipationsGroupCompanies","profitSharesJointlyControlledCompanies","profitOtherFinancialFixedAssets","otherInterestIncomeAndSimilarItems","interestExpensesAndSimilarIncomeItems","changeInAccruals","appropriationsAllCompanyForms","taxesYearProfit","sumSection","section","Object","entries","sum","accountId","account","accountNumber","resultRow","min","max","resultRowIdentifier","resultRowReference","fromEntries","keys","sumSums","sums","calculateResults","DropArea","DropFile","observer","handleOnDrop","acceptedFiles","a","fileReader","sieText","localStorage","setItem","JSON","stringify","onDrop","getRootProps","getInputProps","LoadSie","NotesPage","ResultDispositionPage","MuiCard","padding","SingleRow","subTitle","Grid","mb","container","justifyContent","ml","xs","item","alignSelf","SubTitle","pb","direction","ResultSheetPage","formik","useFormik","initialValues","thisYear","onSubmit","values","alert","handleSubmit","TextField","fullWidth","helperText","touched","errors","SignPage","YearStoryPage","Navigation","companyInfo","parse","getItem","path","element","theme","createTheme","spacing","palette","primary","main","typography","fontFamily","fontSize","components","defaultProps","elevation","MuiButton","styleOverrides","contained","minHeight","lineHeight","App","ThemeProvider","GlobalStyles","styles","body","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7949b08.chunk.js","sourcesContent":["import legacy from 'legacy-encoding';\n\nfunction readFile(file: File): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsArrayBuffer(file);\n  return new Promise((resolve) => {\n    reader.onload = (e) => {\n      const text = legacy.decode(\n        Buffer.from(e.target.result as ArrayBuffer),\n        'cp437',\n      );\n      resolve(text);\n    };\n  });\n}\n\nexport default readFile;\n","import {\n  action, makeObservable, observable, runInAction,\n} from 'mobx';\nimport { Company } from '../functions/interfaces';\nimport type RootStore from './RootStore';\n\nclass CompanyStore {\n    company: Company = {\n      info: {\n        name: '',\n        registrationNumber: '',\n        addressInfo: {\n          name: '',\n          street: '',\n          city: '',\n          zipCode: '',\n          phone: '',\n        },\n      },\n      fiscalYears: {\n        currentStart: '',\n        currentEnd: '',\n        previousStart: '',\n        previousEnd: '',\n      },\n      accounts: {},\n      result: {\n        operatingIncome: { current: 0, previous: 0, children: {} },\n        operatingCosts: { current: 0, previous: 0, children: {} },\n        financialPosts: { current: 0, previous: 0, children: {} },\n        yearEndDistribution: { current: 0, previous: 0, children: {} },\n        taxes: { current: 0, previous: 0, children: {} },\n        operatingProfit: { current: 0, previous: 0, children: {} },\n        financialProfit: { current: 0, previous: 0, children: {} },\n        profitBeforeTaxes: { current: 0, previous: 0, children: {} },\n        yearResult: { current: 0, previous: 0, children: {} },\n      },\n    }\n\n    isReady = false;\n\n    rootStore: RootStore\n\n    constructor(rootStore: RootStore) {\n      makeObservable(this, {\n        company: observable,\n        isReady: observable,\n        hydrate: action,\n      });\n\n      this.rootStore = rootStore;\n    }\n\n    hydrate(company: Company): void {\n      runInAction(() => {\n        this.company = company;\n        this.isReady = true;\n      });\n    }\n}\n\nexport default CompanyStore;\n","import CompanyStore from './CompanyStore';\n\nclass RootStore {\n  companyStore: CompanyStore\n\n  constructor() {\n    this.companyStore = new CompanyStore(this);\n  }\n}\n\nexport default RootStore;\n","import type { ReactNode } from 'react';\nimport { createContext, useContext } from 'react';\nimport type CompanyStore from '../stores/CompanyStore';\nimport RootStore from '../stores/RootStore';\n\nlet store: RootStore;\nconst StoreContext = createContext<RootStore | undefined>(undefined);\nfunction StoreProvider({ children }: { children: ReactNode }) {\n  const rootStore = store ?? new RootStore();\n\n  return <StoreContext.Provider value={rootStore}>{children}</StoreContext.Provider>;\n}\n\nfunction useStore(): { companyStore: CompanyStore} {\n  const rootStore = useContext(StoreContext);\n  if (!rootStore) {\n    throw new Error('useStore must be used within a StoreProvider.');\n  }\n\n  return {\n    companyStore: rootStore.companyStore,\n  };\n}\n\nexport { StoreProvider };\nexport default useStore;\n","import type { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 32px;\n  box-sizing: border-box;\n`;\n\ntype Props = {\n  children: ReactNode\n}\n\nconst Page: React.FC<Props> = ({ children }) => (\n  <Container>\n    {children}\n  </Container>\n);\n\nexport default Page;\n","import { NavLink } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst BalanceSheetPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>Balansräkning</h5>\n      {companyStore.company.info.name}\n      <NavLink to=\"/result-disposition\">\n        <button type=\"button\">Fortsätt</button>\n      </NavLink>\n    </Page>\n  );\n};\n\nexport default BalanceSheetPage;\n","import styled from 'styled-components';\n\ninterface Props {\n  title:string;\n}\n\nconst Field = styled.div`\nmargin-left: 2rem;\n`;\n\nconst Input = styled.div`\ndisplay: flex;\ngap: 1rem;\nflex-direction: row;\n`;\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\nmargin: 1rem;\njustify-content: space-between;\nalign-items: center;\n`;\n\nconst InputField:React.FC<Props> = ({ title, children }) => (\n  <Wrapper>\n    <Field>{title}</Field>\n    <Input>{children}</Input>\n  </Wrapper>\n);\n\nexport default InputField;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface Props {\n  to:string\n  margin?:string\n  disabled?:boolean\n}\n\nconst StyledLink = styled(NavLink)<Props>`\n  text-decoration: none;\n  margin:${(p) => p.margin};\n  pointer-events:${(p) => p.disabled && 'none'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledNavLink:React.FC<Props> = ({\n  to, children, margin, disabled,\n}) => (\n  <StyledLink disabled={disabled} margin={margin} to={to}>\n    {children}\n  </StyledLink>\n);\n\nexport default StyledNavLink;\n","const formatCurrency = (amount: string, isShowingCurrency = false) => new Intl.NumberFormat('sv-SE', {\n  style: isShowingCurrency ? 'currency' : 'decimal',\n  currency: 'SEK',\n  minimumFractionDigits: 0,\n}).format(+amount);\n\nconst formatDate = (date: string) => date?.split('').reduce((acc: string, value: string, i: number) => acc + (i === 3 || i === 5 ? `${value}-` : value));\n\nexport { formatCurrency, formatDate };\n","import {\n  Button,\n  Card, FormControl, MenuItem, Select, SelectChangeEvent, styled, Switch, Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport InputField from '../../components/InputField';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ngap: 2rem;\nmargin-top: 2rem;\npadding:1rem;\n`;\n\nconst CompanyInfoPage = () => {\n  const { companyStore } = useStore();\n  const [amount, setAmount] = useState(0 || '');\n\n  const handleChange = (event:SelectChangeEvent) => {\n    setAmount(event.target.value);\n  };\n  return (\n    <Page>\n      <Typography variant=\"h4\">Företagsuppgifter</Typography>\n      <StyledCard>\n        <Typography variant=\"h5\">\n          Räkenskapsår\n        </Typography>\n        <InputField title=\"Aktuellt räkenskapsår\">\n          <Typography variant=\"h6\">\n            {companyStore.isReady && `${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`}\n          </Typography>\n        </InputField>\n        <InputField title=\"Antal tidigare räkenskapsår\">\n          <FormControl sx={{ minWidth: '120px' }} size=\"small\">\n\n            <Select\n              value={amount}\n              onChange={handleChange}\n            >\n              <MenuItem value={0}>0</MenuItem>\n              <MenuItem value={1}>1</MenuItem>\n              <MenuItem value={2}>2</MenuItem>\n            </Select>\n          </FormControl>\n        </InputField>\n        <Typography variant=\"h5\">\n          Övriga uppgifter\n        </Typography>\n        <InputField title=\"Koncernförhållande\">\n          <FormControl sx={{ minWidth: '120px' }} size=\"small\">\n\n            <Select\n              value={amount}\n              onChange={handleChange}\n            >\n              <MenuItem value=\"none\">Bolaget ingår i en koncern</MenuItem>\n              <MenuItem value=\"mother\">Bolaget är modern i en koncern</MenuItem>\n              <MenuItem value=\"daugther\">Bolaget är dottern i en koncern</MenuItem>\n            </Select>\n          </FormControl>\n        </InputField>\n        <Typography variant=\"h5\">\n          Revisor\n        </Typography>\n        <InputField title=\"Har bolaget revisor?\">\n          <Switch />\n        </InputField>\n        <StyledNavLink to=\"/result-sheet\">\n          <Button variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n};\n\nexport default CompanyInfoPage;\n","import {\n  Button, Card, Checkbox, styled, Typography,\n} from '@mui/material';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nflex-direction: column;\ngap: 2rem;\nmargin-top: 2rem;\npadding:1rem;\n`;\n\nconst FiscalYearPage = () => {\n  const { companyStore } = useStore();\n\n  return (\n    <Page>\n      <Typography variant=\"h4\">Välj räkenskapsår</Typography>\n      <StyledCard>\n        <Typography variant=\"h6\">\n          {companyStore.isReady && `För företaget ${companyStore.company.info.name} fanns följande räkenskapsår som kan användas i SIE-filen. Välj det år som ska lämnas in till Bolagsverket`}\n        </Typography>\n        <Typography variant=\"h5\">\n          <Checkbox />\n          {companyStore.isReady && `${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`}\n        </Typography>\n        <StyledNavLink to=\"/company-info\">\n          <Button variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n};\n\nexport default FiscalYearPage;\n","import type {\n  Company, CompanyAddressInfo, FiscalYears, Accounts,\n} from './interfaces';\n\nfunction splitWords(row: string, removeQuotes = false) {\n  const words = row\n    // Replaces all spaces within quotes with {tempSpace}\n    .replace(/\"[^\"]+\"/g, (inQuotes) => inQuotes.replaceAll(' ', '{tempSpace}'))\n    .split(' ')\n    .map((word) => word.replaceAll('{tempSpace}', ' '));\n  if (removeQuotes) return words.map((word) => word.replaceAll('\"', ''));\n  return words;\n}\n\n// E.g. '#FNAMN \"Omini AB\"'\nfunction getCompanyName(rows: string[]) {\n  const row = rows.find((r) => r.startsWith('#FNAMN'));\n  if (!row) return 'unknown';\n\n  return splitWords(row, true)[1];\n}\n\n// E.g. \"#ORGNR 559207-6037\"\nfunction getCompanyRegistrationNumber(rows: string[]) {\n  const row = rows.find((r) => r.startsWith('#ORGNR')).replace(/(\\d{6})(\\d{4})/, '$1-$2');\n\n  if (!row) return 'unknown';\n\n  return splitWords(row, true)[1];\n}\n\n// E.g. #ADRESS \"Ivar Eriksson\" \"Storgatan 2\" \"21140 Malmö\" \"0739143211\"\nfunction getCompanyAddressInfo(rows: string[]): CompanyAddressInfo {\n  const row = rows.find((r) => r.startsWith('#ADRESS'));\n  if (!row) return {} as CompanyAddressInfo;\n\n  const [, name, street, zipCity, phone] = splitWords(row, true);\n  return {\n    name,\n    street,\n    city: zipCity.split(' ')[1],\n    zipCode: zipCity.split(' ')[0],\n    phone,\n  };\n}\n\n// E.g. \"#RAR 0 20200101 20201231\", \"#RAR -1 20190101 20191231\"\nfunction getFiscalYears(rows: string[]): FiscalYears {\n  const currentYearRow = rows.find((r) => r.startsWith('#RAR 0'));\n  const previousYearRow = rows.find((r) => r.startsWith('#RAR -1'));\n  console.log(currentYearRow);\n  console.log(previousYearRow);\n\n  const [, , currentStart, currentEnd] = currentYearRow ? splitWords(currentYearRow) : [];\n  const [, , previousStart, previousEnd] = previousYearRow ? splitWords(previousYearRow) : [];\n\n  return {\n    currentStart,\n    currentEnd,\n    previousStart,\n    previousEnd,\n  };\n}\n\n// E.g. #KONTO 1039 \"Ackumulerade avskrivningar på patent\"\n// E.g. #RES 0 3041 -2258200 0\nfunction getAccounts(rows: string[]) {\n  const defaultAccount = () => ({ name: '', previousBalance: 0, currentBalance: 0 });\n  return rows.reduce((accounts, row) => {\n    // if (row.startsWith('#KONTO')) {\n    //   const [, id, name] = splitWords(row, true);\n    //   return { ...accounts, [id]: { ...accounts[id], name } };\n    // }\n\n    if (row.startsWith('#RES')) {\n      const [, year, id, balance] = splitWords(row);\n      const balanceKey = Number(year) === -1 ? 'previousBalance' : 'currentBalance';\n      if (!accounts[id]) {\n        return {\n          ...accounts,\n          [id]: {\n            ...(accounts[id] ? accounts[id] : defaultAccount()),\n            [balanceKey]: Number(balance),\n          },\n        };\n      }\n    }\n    return accounts;\n  }, {} as Accounts);\n}\n\nfunction extractCompanyFromSie(sieString: string): Company {\n  const rows = sieString\n    .replaceAll('\\r', '')\n    .split('\\n');\n\n  return {\n    info: {\n      name: getCompanyName(rows),\n      registrationNumber: getCompanyRegistrationNumber(rows),\n      addressInfo: getCompanyAddressInfo(rows),\n    },\n    fiscalYears: getFiscalYears(rows),\n    accounts: getAccounts(rows),\n  };\n}\n\nexport default extractCompanyFromSie;\n","interface ResultSectionInterface {\n  title: string\n  sumTitle: string\n  children: {\n    [resultRowIdentifier: string]: {\n      title: string\n      accountRange: [number, number]\n    }\n  }\n}\n\ninterface ResultSectionsInterface {\n  operatingIncome: ResultSectionInterface\n  operatingCosts: ResultSectionInterface\n  financialPosts: ResultSectionInterface\n  yearEndDistribution: ResultSectionInterface\n  taxes: ResultSectionInterface\n  operatingProfit: ResultSectionInterface\n  financialProfit: ResultSectionInterface\n  profitBeforeTaxes: ResultSectionInterface\n  yearResult: ResultSectionInterface\n}\n\nconst resultSections: ResultSectionsInterface = {\n  operatingIncome: {\n    title: 'Rörelsens intäkter',\n    sumTitle: 'Summa rörelseintäkter, lagerförändringar m.m.',\n    children: {\n      netSales: {\n        title: 'Nettoomsättning',\n        accountRange: [\n          3000,\n          3999,\n        ],\n      },\n    },\n  },\n  operatingCosts: {\n    title: 'Rörelsekostnader',\n    sumTitle: 'Summa rörelsekostnader',\n    children: {\n      rawMaterialsConsumables: {\n        title: 'Råvaror och förnödenheter',\n        accountRange: [\n          4000,\n          4999,\n        ],\n      },\n      otherExternalExpenses: {\n        title: 'Övriga externa kostnader',\n        accountRange: [\n          5000,\n          6999,\n        ],\n      },\n      staffCosts: {\n        title: 'Personalkostnader',\n        accountRange: [\n          7000,\n          7699,\n        ],\n      },\n      writeDownsReversalOfWriteDowns: {\n        title: 'Nedskrivningar och återföring av nedskrivningar',\n        accountRange: [\n          7700,\n          7799,\n        ],\n      },\n      depreciationAccordingToPlan: {\n        title: 'Avskrivningar enligt plan',\n        accountRange: [\n          7800,\n          7899,\n        ],\n      },\n      otherOperatingExpenses: {\n        title: 'Övriga rörelsekostnader',\n        accountRange: [\n          7900,\n          7999,\n        ],\n      },\n    },\n  },\n  financialPosts: {\n    title: 'Finansiella poster',\n    sumTitle: 'Summa finansiella poster',\n    children: {\n      profitParticipationsGroupCompanies: {\n        title: 'Resultat från andelar i koncernbolag',\n        accountRange: [\n          8000,\n          8099,\n        ],\n      },\n      profitSharesJointlyControlledCompanies: {\n        title: 'Resultat från andelar i gemensamt styrda företag',\n        accountRange: [\n          8100,\n          8199,\n        ],\n      },\n      profitOtherFinancialFixedAssets: {\n        title: 'Resultat från övriga finansiella anläggningstillgångar',\n        accountRange: [\n          8200,\n          8299,\n        ],\n      },\n      otherInterestIncomeAndSimilarItems: {\n        title: 'Övriga ränteintäkter och liknande resultatposter',\n        accountRange: [\n          8300,\n          8399,\n        ],\n      },\n      interestExpensesAndSimilarIncomeItems: {\n        title: 'Räntekostnader och liknande resultatposter',\n        accountRange: [\n          8400,\n          8499,\n        ],\n      },\n    },\n  },\n  yearEndDistribution: {\n    title: 'Bokslutsdispositioner',\n    sumTitle: 'Summa bokslutsdispositioner',\n    children: {\n      changeInAccruals: {\n        title: 'Förändring av periodiseringsfonder för juridisk person och enskild näringsidkare',\n        accountRange: [\n          8810,\n          8819,\n        ],\n      },\n      appropriationsAllCompanyForms: {\n        title: 'Bokslutsdispositioner för samtliga företagsformer',\n        accountRange: [\n          8820,\n          8899,\n        ],\n      },\n    },\n  },\n  taxes: {\n    title: 'Skatter',\n    sumTitle: '',\n    children: {\n      taxesYearProfit: {\n        title: 'Skatter på årets resultat',\n        accountRange: [\n          8910,\n          8999,\n        ],\n      },\n    },\n  },\n  operatingProfit: {\n    title: 'Rörelseresultat',\n    sumTitle: '',\n    children: {},\n  },\n  financialProfit: {\n    title: 'Resultat efter finansiella poster',\n    sumTitle: '',\n    children: {},\n  },\n  profitBeforeTaxes: {\n    title: 'Resultat före skatt',\n    sumTitle: '',\n    children: {},\n  },\n  yearResult: {\n    title: 'Årets resultat',\n    sumTitle: '',\n    children: {},\n  },\n\n};\n\nexport type { ResultSectionInterface, ResultSectionsInterface };\nexport default resultSections;\n","import resultSections, { ResultSectionsInterface } from '../info/resultSectionsData';\nimport type { Accounts, Result, Sum } from './interfaces';\n\nfunction sumSection(\n  accounts: Accounts,\n  section: keyof ResultSectionsInterface,\n): Sum {\n  return Object.entries(accounts)\n    .reduce((sum, [accountId, account]) => {\n      const accountNumber = Number(accountId);\n      const resultRow = Object.entries(resultSections[section].children)\n        .find(([, { accountRange: [min, max] }]) => {\n          if (accountNumber >= min && accountNumber <= max) return true;\n          return false;\n        });\n      if (!resultRow) return sum;\n\n      const resultRowIdentifier = resultRow[0];\n      const resultRowReference = sum.children[resultRowIdentifier];\n      return {\n        current: sum.current + account.currentBalance,\n        previous: sum.previous + account.previousBalance,\n        children: {\n          ...sum.children,\n          [resultRowIdentifier]: {\n            current: resultRowReference.current + account.currentBalance,\n            previous: resultRowReference.previous + account.previousBalance,\n          },\n        },\n      };\n    }, {\n      current: 0,\n      previous: 0,\n      children: Object.fromEntries(Object.keys(resultSections[section].children)\n        .map((title) => [title, { current: 0, previous: 0 }])),\n    });\n}\n\nfunction sumSums(sums: Sum[]): Sum {\n  return sums.reduce((sum, { current, previous }) => ({\n    current: current + sum.current,\n    previous: previous + sum.previous,\n    children: {},\n  }));\n}\n\nfunction calculateResults(accounts: Accounts): Result {\n  const operatingIncome = sumSection(accounts, 'operatingIncome');\n  const operatingCosts = sumSection(accounts, 'operatingCosts');\n  const financialPosts = sumSection(accounts, 'financialPosts');\n  const yearEndDistribution = sumSection(accounts, 'yearEndDistribution');\n  const taxes = sumSection(accounts, 'taxes');\n\n  const operatingProfit = sumSums([operatingIncome, operatingCosts]);\n  const financialProfit = sumSums([operatingProfit, financialPosts]);\n  const profitBeforeTaxes = sumSums([financialProfit, yearEndDistribution]);\n  const yearResult = sumSums([profitBeforeTaxes, taxes]);\n\n  return {\n    operatingIncome,\n    operatingCosts,\n    financialPosts,\n    yearEndDistribution,\n    taxes,\n    operatingProfit,\n    financialProfit,\n    profitBeforeTaxes,\n    yearResult,\n  };\n}\n\nexport default calculateResults;\n","import { observer } from 'mobx-react-lite';\nimport Dropzone from 'react-dropzone';\nimport styled from 'styled-components';\nimport useStore from '../hooks/useStore';\nimport fileReader from '../functions/fileReader';\nimport extractCompanyFromSie from '../functions/extractCompanyFromSie';\nimport calculateResults from '../functions/calculateResults';\n\nconst DropArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30vh;\n  text-align: center;\n  background-color:#918686;\n  border-radius: 8px;\n`;\n\nconst DropFile = observer(() => {\n  const { companyStore } = useStore();\n  const handleOnDrop = async (acceptedFiles: File[]) => {\n    const sieText = await fileReader(acceptedFiles[0]);\n    const company = extractCompanyFromSie(sieText);\n    company.result = calculateResults(company.accounts);\n    companyStore.hydrate(company);\n    localStorage.setItem('companyInfo', JSON.stringify(company));\n  };\n\n  return (\n    <Dropzone onDrop={handleOnDrop}>\n      {({ getRootProps, getInputProps }) => (\n\n        <DropArea {...getRootProps()}>\n          <input {...getInputProps()} />\n          <p>Släpp din SIE-fil här för att ladda upp filen.</p>\n        </DropArea>\n\n      )}\n    </Dropzone>\n\n  );\n});\n\nexport default DropFile;\n","import { Card, styled, Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { observer } from 'mobx-react-lite';\nimport DropArea from '../../components/DropArea';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nflex-direction: column;\ngap: 2rem;\nmargin-top: 2rem;\npadding:6rem;\n`;\n\nconst LoadSie = observer(() => {\n  const { companyStore } = useStore();\n\n  return (\n    <Page>\n      <DropArea />\n\n      <StyledCard>\n        {companyStore.isReady && (\n          <>\n            <Typography variant=\"h3\">\n              {companyStore.company.info.name}\n            </Typography>\n            <Typography variant=\"h4\">\n              {companyStore.company.info.registrationNumber}\n            </Typography>\n          </>\n        )}\n        <StyledNavLink disabled={!companyStore.isReady} to=\"/fiscal-year\">\n          <Button disabled={!companyStore.isReady} variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n});\n\nexport default LoadSie;\n","import { NavLink } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst NotesPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>Noter</h5>\n      {companyStore.company.info.registrationNumber}\n      <NavLink to=\"/year-story\">\n        <button type=\"button\">Fortsätt</button>\n      </NavLink>\n    </Page>\n  );\n};\n\nexport default NotesPage;\n","import { NavLink } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst ResultDispositionPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>Resultatdisposition</h5>\n      {companyStore.company.info.registrationNumber}\n      <NavLink to=\"/notes\">\n        <button type=\"button\">Fortsätt</button>\n      </NavLink>\n    </Page>\n  );\n};\n\nexport default ResultDispositionPage;\n","import { Card as MuiCard, CardProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst Card = styled(MuiCard)<CardProps>(() => ({\n  padding: '32px',\n}));\n\nexport default Card;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ntype Props ={\n  subTitle:string\n}\n\nconst SingleRow:React.FC<Props> = ({ subTitle, children }) => (\n  <Grid mb={12} container justifyContent=\"space-between\">\n    <Grid ml={12} xs={3} item alignSelf=\"center\">\n      <Typography>{subTitle}</Typography>\n    </Grid>\n    <Grid item xs={3}>\n      <Grid container>\n        {children}\n      </Grid>\n\n    </Grid>\n  </Grid>\n);\n\nexport default SingleRow;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ntype Props = {\n  subTitle:string\n}\n\nconst SubTitle:React.FC<Props> = ({ subTitle, children }) => (\n\n  <Grid pb={12} container justifyContent=\"space-between\" direction=\"row\">\n    <Grid item xs={3}>\n      <Typography variant=\"h5\">{subTitle}</Typography>\n    </Grid>\n    <Grid item xs={3}>\n      <Typography variant=\"h6\">{children}</Typography>\n\n    </Grid>\n  </Grid>\n);\n\nexport default SubTitle;\n","import {\n  Button, Grid, TextField, Typography,\n} from '@mui/material';\nimport { useFormik } from 'formik';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport SingleRow from '../../components/SingleRow';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst ResultSheetPage = () => {\n  const { companyStore } = useStore();\n\n  const formik = useFormik({\n    initialValues: {\n      thisYear: '700 540 kr',\n    },\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <Page>\n      <Card>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid container direction=\"column\">\n\n            <SubTitle subTitle=\"Resultaträkning\">\n              <Typography variant=\"h6\">{`${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)} `}</Typography>\n            </SubTitle>\n            <SingleRow subTitle=\"Nettoomsättning\">\n              <TextField\n                fullWidth\n                id=\"thisYear\"\n                name=\"thisYear\"\n                value={formik.values.thisYear}\n                onChange={formik.handleChange}\n                helperText={formik.touched.thisYear && formik.errors.thisYear}\n              />\n            </SingleRow>\n            <SingleRow subTitle=\"Nettoomsättning\">\n              <TextField\n                fullWidth\n                id=\"thisYear\"\n                name=\"thisYear\"\n                value={formik.values.thisYear}\n                onChange={formik.handleChange}\n                helperText={formik.touched.thisYear && formik.errors.thisYear}\n              />\n            </SingleRow>\n            <SingleRow subTitle=\"Nettoomsättning\">\n              <TextField\n                fullWidth\n                id=\"thisYear\"\n                name=\"thisYear\"\n                value={formik.values.thisYear}\n                onChange={formik.handleChange}\n                helperText={formik.touched.thisYear && formik.errors.thisYear}\n              />\n            </SingleRow>\n            <SingleRow subTitle=\"Nettoomsättning\">\n              <TextField\n                fullWidth\n                id=\"thisYear\"\n                name=\"thisYear\"\n                value={formik.values.thisYear}\n                onChange={formik.handleChange}\n                helperText={formik.touched.thisYear && formik.errors.thisYear}\n              />\n            </SingleRow>\n\n            <Grid item alignSelf=\"center\">\n              <Button type=\"submit\" variant=\"contained\">Fortsätt</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Card>\n    </Page>\n  );\n};\n\nexport default ResultSheetPage;\n","// import { NavLink } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst SignPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>Befattningshavare</h5>\n      {companyStore.company.fiscalYears.currentEnd}\n      <Button>\n        Generera PDF\n      </Button>\n    </Page>\n  );\n};\n\nexport default SignPage;\n","import { NavLink } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst YearStoryPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>YearStory</h5>\n      {companyStore.company.info.registrationNumber}\n      <NavLink to=\"/sign\">\n        <button type=\"button\">Fortsätt</button>\n      </NavLink>\n    </Page>\n  );\n};\n\nexport default YearStoryPage;\n","import { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport useStore from '../hooks/useStore';\nimport BalanceSheetPage from '../pages/BalanceSheetPage/BalanceSheetPage';\nimport CompanyInfoPage from '../pages/CompanyInfoPage/CompanyInfoPage';\nimport FiscalYearPage from '../pages/FiscalYearPage/FiscalYearPage';\nimport LoadSie from '../pages/LoadSiePage/LoadSiePage';\nimport NotesPage from '../pages/NotesPage/NotesPage';\nimport ResultDispositionPage from '../pages/ResultDispositionPage/ResultDispositionPage';\nimport ResultSheetPage from '../pages/ResultSheetPage/ResultSheetPage';\nimport SignPage from '../pages/SignPage/SignPage';\nimport YearStoryPage from '../pages/YearStoryPage/YearStoryPage';\n\nconst Navigation = () => {\n  const { companyStore } = useStore();\n  const companyInfo = JSON.parse(localStorage.getItem('companyInfo'));\n  if (companyInfo) companyStore.hydrate(companyInfo);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        {/* Siefil */}\n        <Route path=\"/Arsredovisning\" element={<LoadSie />} />\n        {/* Välj räkenskapsår */}\n        <Route path=\"/fiscal-year\" element={<FiscalYearPage />} />\n        {/* Företagsuppgifter */}\n        <Route path=\"/company-info\" element={<CompanyInfoPage />} />\n        {/* Resultaträkning */}\n        <Route path=\"/result-sheet\" element={<ResultSheetPage />} />\n        {/* Balansräkning */}\n        <Route path=\"/balance-sheet\" element={<BalanceSheetPage />} />\n        {/* Resultatdisposition */}\n        <Route path=\"/result-disposition\" element={<ResultDispositionPage />} />\n        {/* Noter */}\n        <Route path=\"/notes\" element={<NotesPage />} />\n        {/* Förvaltningsberättelse */}\n        <Route path=\"/year-story\" element={<YearStoryPage />} />\n        {/* Befattningshavare */}\n        <Route path=\"/sign\" element={<SignPage />} />\n\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Navigation;\n","import { createTheme, GlobalStyles, ThemeProvider } from '@mui/material';\nimport './App.css';\nimport { StoreProvider } from './hooks/useStore';\nimport Navigation from './navigation/navigation';\n\nconst theme = createTheme({\n  spacing: 2,\n  palette: {\n    primary: {\n      main: '#6f12cd',\n    },\n  },\n  typography: {\n    fontFamily: 'Comfortaa',\n    fontSize: 11,\n  },\n  components: {\n    MuiCard: {\n      defaultProps: {\n        elevation: 5,\n      },\n\n    },\n\n    MuiButton: {\n      styleOverrides: {\n        contained: {\n          minWidth: '64px',\n          minHeight: '36px',\n          padding: '8px 16px',\n          lineHeight: 0.5,\n        },\n      },\n    },\n  },\n});\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction App() {\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles\n          styles={{\n            body: { backgroundColor: '#dae9cc5c' },\n          }}\n        />\n        <Navigation />\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}