{"version":3,"sources":["functions/fileReader.ts","stores/CompanyStore.ts","stores/RootStore.ts","hooks/useStore.tsx","components/Page.tsx","pages/BalanceSheetPage/BalanceSheetPage.tsx","components/InputField.tsx","components/StyledNavLink.tsx","functions/formatting.ts","pages/CompanyInfoPage/CompanyInfoPage.tsx","pages/FiscalYearPage/FiscalYearPage.tsx","functions/extractCompanyFromSie.ts","info/resultSectionsData.ts","functions/calculateResults.ts","components/DropArea.tsx","pages/LoadSiePage/LoadSiePage.tsx","pages/NotesPage/NotesPage.tsx","fonts/Comfortaa-Light.ttf","fonts/Comfortaa-Bold.ttf","pages/components/Line.tsx","pages/components/resultLine.tsx","pages/Result.tsx","pages/pdf.tsx","pages/ResultDispositionPage/ResultDispositionPage.tsx","components/Card.tsx","components/SingleRow.tsx","components/SubTitle.tsx","pages/ResultSheetPage/ResultSheetPage.tsx","pages/SignPage/SignPage.tsx","pages/YearStoryPage/YearStoryPage.tsx","navigation/navigation.tsx","App.tsx","index.tsx"],"names":["readFile","file","reader","FileReader","readAsArrayBuffer","Promise","resolve","onload","e","text","legacy","decode","Buffer","from","target","result","CompanyStore","rootStore","company","info","name","registrationNumber","addressInfo","street","city","zipCode","phone","fiscalYears","currentStart","currentEnd","previousStart","previousEnd","accounts","operatingIncome","current","previous","children","operatingCosts","financialPosts","yearEndDistribution","taxes","operatingProfit","financialProfit","profitBeforeTaxes","yearResult","isReady","makeObservable","this","observable","hydrate","action","runInAction","RootStore","companyStore","StoreContext","createContext","undefined","StoreProvider","Provider","value","useStore","useContext","Error","Container","styled","div","Page","BalanceSheetPage","to","type","Field","Input","Wrapper","InputField","title","StyledLink","NavLink","p","margin","disabled","StyledNavLink","formatCurrency","amount","isShowingCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","date","split","reduce","acc","i","StyledCard","Card","CompanyInfoPage","useState","setAmount","handleChange","event","Typography","variant","FormControl","sx","minWidth","size","Select","onChange","MenuItem","Switch","Button","FiscalYearPage","Checkbox","splitWords","row","removeQuotes","words","replace","inQuotes","replaceAll","map","word","getCompanyName","rows","find","r","startsWith","getCompanyRegistrationNumber","getCompanyAddressInfo","zipCity","getFiscalYears","currentYearRow","previousYearRow","console","log","getAccounts","year","id","balance","balanceKey","Number","previousBalance","currentBalance","extractCompanyFromSie","sieString","resultSections","sumTitle","netSales","accountRange","changedInventory","otherIncomes","rawMaterialsConsumables","otherExternalExpenses","staffCosts","writeDownsReversalOfWriteDowns","depreciationAccordingToPlan","otherOperatingExpenses","profitParticipationsGroupCompanies","profitSharesJointlyControlledCompanies","profitOtherFinancialFixedAssets","otherInterestIncomeAndSimilarItems","interestExpensesAndSimilarIncomeItems","changeInAccruals","appropriationsAllCompanyForms","taxesYearProfit","sumSection","section","Object","entries","sum","accountId","account","accountNumber","resultRow","min","max","resultRowIdentifier","resultRowReference","fromEntries","keys","sumSums","sums","calculateResults","DropArea","DropFile","observer","handleOnDrop","acceptedFiles","a","fileReader","sieText","localStorage","setItem","JSON","stringify","onDrop","getRootProps","getInputProps","LoadSie","NotesPage","styles","StyleSheet","create","areaOne","textAlign","fontSize","areaTwo","width","areaThree","areaFour","areaFive","Line","border","display","flexDirection","marginTop","padding","borderBottom","fontFamily","resultLine","Result","resultSectionsData","sectionData","toFixed","Font","register","family","src","fontRegular","fontBold","page","backgroundColor","justifyContent","color","flexGrow","lineHeight","front","footer","alignSelf","height","borderTop","h1","h2","h3","h4Bold","fontWeight","h4","Pdf","language","marginBottom","break","fixed","render","pageNumber","totalPages","ResultDispositionPage","MuiCard","SingleRow","subTitle","isBold","isSum","Grid","mb","container","ml","xs","item","pt","SubTitle","pb","direction","ResultSheetPage","formik","useFormik","initialValues","netIncome","onSubmit","values","alert","handleSubmit","child","childData","TextField","fullWidth","helperText","touched","errors","SignPage","YearStoryPage","Navigation","companyInfo","parse","getItem","isGeneratePdf","setIsGeneratePdf","position","top","right","onClick","path","element","theme","createTheme","spacing","palette","primary","main","typography","components","defaultProps","elevation","MuiButton","styleOverrides","contained","minHeight","App","ThemeProvider","GlobalStyles","body","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b184714f.chunk.js","sourcesContent":["import legacy from 'legacy-encoding';\n\nfunction readFile(file: File): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsArrayBuffer(file);\n  return new Promise((resolve) => {\n    reader.onload = (e) => {\n      const text = legacy.decode(\n        Buffer.from(e.target.result as ArrayBuffer),\n        'cp437',\n      );\n      resolve(text);\n    };\n  });\n}\n\nexport default readFile;\n","import {\n  action, makeObservable, observable, runInAction,\n} from 'mobx';\nimport { Company } from '../functions/interfaces';\nimport type RootStore from './RootStore';\n\nclass CompanyStore {\n    company: Company = {\n      info: {\n        name: '',\n        registrationNumber: '',\n        addressInfo: {\n          name: '',\n          street: '',\n          city: '',\n          zipCode: '',\n          phone: '',\n        },\n      },\n      fiscalYears: {\n        currentStart: '',\n        currentEnd: '',\n        previousStart: '',\n        previousEnd: '',\n      },\n      accounts: {},\n      result: {\n        operatingIncome: { current: 0, previous: 0, children: {} },\n        operatingCosts: { current: 0, previous: 0, children: {} },\n        financialPosts: { current: 0, previous: 0, children: {} },\n        yearEndDistribution: { current: 0, previous: 0, children: {} },\n        taxes: { current: 0, previous: 0, children: {} },\n        operatingProfit: { current: 0, previous: 0, children: {} },\n        financialProfit: { current: 0, previous: 0, children: {} },\n        profitBeforeTaxes: { current: 0, previous: 0, children: {} },\n        yearResult: { current: 0, previous: 0, children: {} },\n      },\n    }\n\n    isReady = false;\n\n    rootStore: RootStore\n\n    constructor(rootStore: RootStore) {\n      makeObservable(this, {\n        company: observable,\n        isReady: observable,\n        hydrate: action,\n      });\n\n      this.rootStore = rootStore;\n    }\n\n    hydrate(company: Company): void {\n      runInAction(() => {\n        this.company = company;\n        this.isReady = true;\n      });\n    }\n}\n\nexport default CompanyStore;\n","import CompanyStore from './CompanyStore';\n\nclass RootStore {\n  companyStore: CompanyStore\n\n  constructor() {\n    this.companyStore = new CompanyStore(this);\n  }\n}\n\nexport default RootStore;\n","import type { ReactNode } from 'react';\nimport { createContext, useContext } from 'react';\nimport type CompanyStore from '../stores/CompanyStore';\nimport RootStore from '../stores/RootStore';\n\nlet store: RootStore;\nconst StoreContext = createContext<RootStore | undefined>(undefined);\nfunction StoreProvider({ children }: { children: ReactNode }) {\n  const rootStore = store ?? new RootStore();\n\n  return <StoreContext.Provider value={rootStore}>{children}</StoreContext.Provider>;\n}\n\nfunction useStore(): { companyStore: CompanyStore} {\n  const rootStore = useContext(StoreContext);\n  if (!rootStore) {\n    throw new Error('useStore must be used within a StoreProvider.');\n  }\n\n  return {\n    companyStore: rootStore.companyStore,\n  };\n}\n\nexport { StoreProvider };\nexport default useStore;\n","import type { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 32px;\n  box-sizing: border-box;\n`;\n\ntype Props = {\n  children: ReactNode\n}\n\nconst Page: React.FC<Props> = ({ children }) => (\n  <Container>\n    {children}\n  </Container>\n);\n\nexport default Page;\n","import { NavLink } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst BalanceSheetPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>Balansräkning</h5>\n      {companyStore.company.info.name}\n      <NavLink to=\"/result-disposition\">\n        <button type=\"button\">Fortsätt</button>\n      </NavLink>\n    </Page>\n  );\n};\n\nexport default BalanceSheetPage;\n","import styled from 'styled-components';\n\ninterface Props {\n  title:string;\n}\n\nconst Field = styled.div`\nmargin-left: 2rem;\n`;\n\nconst Input = styled.div`\ndisplay: flex;\ngap: 1rem;\nflex-direction: row;\n`;\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\nmargin: 1rem;\njustify-content: space-between;\nalign-items: center;\n`;\n\nconst InputField:React.FC<Props> = ({ title, children }) => (\n  <Wrapper>\n    <Field>{title}</Field>\n    <Input>{children}</Input>\n  </Wrapper>\n);\n\nexport default InputField;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface Props {\n  to:string\n  margin?:string\n  disabled?:boolean\n}\n\nconst StyledLink = styled(NavLink)<Props>`\n  text-decoration: none;\n  margin:${(p) => p.margin};\n  pointer-events:${(p) => p.disabled && 'none'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledNavLink:React.FC<Props> = ({\n  to, children, margin, disabled,\n}) => (\n  <StyledLink disabled={disabled} margin={margin} to={to}>\n    {children}\n  </StyledLink>\n);\n\nexport default StyledNavLink;\n","const formatCurrency = (amount: string, isShowingCurrency = false) => new Intl.NumberFormat('sv-SE', {\n  style: isShowingCurrency ? 'currency' : 'decimal',\n  currency: 'SEK',\n  minimumFractionDigits: 0,\n}).format(+amount);\n\nconst formatDate = (date: string) => date?.split('').reduce((acc: string, value: string, i: number) => acc + (i === 3 || i === 5 ? `${value}-` : value));\n\nexport { formatCurrency, formatDate };\n","import {\n  Button,\n  Card, FormControl, MenuItem, Select, SelectChangeEvent, styled, Switch, Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport InputField from '../../components/InputField';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ngap: 2rem;\nmargin-top: 2rem;\npadding:1rem;\n`;\n\nconst CompanyInfoPage = () => {\n  const { companyStore } = useStore();\n  const [amount, setAmount] = useState(0 || '');\n\n  const handleChange = (event:SelectChangeEvent) => {\n    setAmount(event.target.value);\n  };\n  return (\n    <Page>\n      <Typography variant=\"h4\">Företagsuppgifter</Typography>\n      <StyledCard>\n        <Typography variant=\"h5\">\n          Räkenskapsår\n        </Typography>\n        <InputField title=\"Aktuellt räkenskapsår\">\n          <Typography variant=\"h6\">\n            {companyStore.isReady && `${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`}\n          </Typography>\n        </InputField>\n        <InputField title=\"Antal tidigare räkenskapsår\">\n          <FormControl sx={{ minWidth: '120px' }} size=\"small\">\n\n            <Select\n              value={amount}\n              onChange={handleChange}\n            >\n              <MenuItem value={0}>0</MenuItem>\n              <MenuItem value={1}>1</MenuItem>\n              <MenuItem value={2}>2</MenuItem>\n            </Select>\n          </FormControl>\n        </InputField>\n        <Typography variant=\"h5\">\n          Övriga uppgifter\n        </Typography>\n        <InputField title=\"Koncernförhållande\">\n          <FormControl sx={{ minWidth: '120px' }} size=\"small\">\n\n            <Select\n              value={amount}\n              onChange={handleChange}\n            >\n              <MenuItem value=\"none\">Bolaget ingår i en koncern</MenuItem>\n              <MenuItem value=\"mother\">Bolaget är modern i en koncern</MenuItem>\n              <MenuItem value=\"daugther\">Bolaget är dottern i en koncern</MenuItem>\n            </Select>\n          </FormControl>\n        </InputField>\n        <Typography variant=\"h5\">\n          Revisor\n        </Typography>\n        <InputField title=\"Har bolaget revisor?\">\n          <Switch />\n        </InputField>\n        <StyledNavLink to=\"/result-sheet\">\n          <Button variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n};\n\nexport default CompanyInfoPage;\n","import {\n  Button, Card, Checkbox, styled, Typography,\n} from '@mui/material';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nflex-direction: column;\ngap: 2rem;\nmargin-top: 2rem;\npadding:1rem;\n`;\n\nconst FiscalYearPage = () => {\n  const { companyStore } = useStore();\n\n  return (\n    <Page>\n      <Typography variant=\"h4\">Välj räkenskapsår</Typography>\n      <StyledCard>\n        <Typography variant=\"h6\">\n          {companyStore.isReady && `För företaget ${companyStore.company.info.name} fanns följande räkenskapsår som kan användas i SIE-filen. Välj det år som ska lämnas in till Bolagsverket`}\n        </Typography>\n        <Typography variant=\"h5\">\n          <Checkbox />\n          {companyStore.isReady && `${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`}\n        </Typography>\n        <StyledNavLink to=\"/company-info\">\n          <Button variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n};\n\nexport default FiscalYearPage;\n","import type {\n  Company, CompanyAddressInfo, FiscalYears, Accounts,\n} from './interfaces';\n\nfunction splitWords(row: string, removeQuotes = false) {\n  const words = row\n    // Replaces all spaces within quotes with {tempSpace}\n    .replace(/\"[^\"]+\"/g, (inQuotes) => inQuotes.replaceAll(' ', '{tempSpace}'))\n    .split(' ')\n    .map((word) => word.replaceAll('{tempSpace}', ' '));\n  if (removeQuotes) return words.map((word) => word.replaceAll('\"', ''));\n  return words;\n}\n\n// E.g. '#FNAMN \"Omini AB\"'\nfunction getCompanyName(rows: string[]) {\n  const row = rows.find((r) => r.startsWith('#FNAMN'));\n  if (!row) return 'unknown';\n\n  return splitWords(row, true)[1];\n}\n\n// E.g. \"#ORGNR 559207-6037\"\nfunction getCompanyRegistrationNumber(rows: string[]) {\n  const row = rows.find((r) => r.startsWith('#ORGNR')).replace(/(\\d{6})(\\d{4})/, '$1-$2');\n\n  if (!row) return 'unknown';\n\n  return splitWords(row, true)[1];\n}\n\n// E.g. #ADRESS \"Ivar Eriksson\" \"Storgatan 2\" \"21140 Malmö\" \"0739143211\"\nfunction getCompanyAddressInfo(rows: string[]): CompanyAddressInfo {\n  const row = rows.find((r) => r.startsWith('#ADRESS'));\n  if (!row) return {} as CompanyAddressInfo;\n\n  const [, name, street, zipCity, phone] = splitWords(row, true);\n  return {\n    name,\n    street,\n    city: zipCity.split(' ')[1],\n    zipCode: zipCity.split(' ')[0],\n    phone,\n  };\n}\n\n// E.g. \"#RAR 0 20200101 20201231\", \"#RAR -1 20190101 20191231\"\nfunction getFiscalYears(rows: string[]): FiscalYears {\n  const currentYearRow = rows.find((r) => r.startsWith('#RAR 0'));\n  const previousYearRow = rows.find((r) => r.startsWith('#RAR -1'));\n  console.log(currentYearRow);\n  console.log(previousYearRow);\n\n  const [, , currentStart, currentEnd] = currentYearRow ? splitWords(currentYearRow) : [];\n  const [, , previousStart, previousEnd] = previousYearRow ? splitWords(previousYearRow) : [];\n\n  return {\n    currentStart,\n    currentEnd,\n    previousStart,\n    previousEnd,\n  };\n}\n\n// E.g. #KONTO 1039 \"Ackumulerade avskrivningar på patent\"\n// E.g. #RES 0 3041 -2258200 0\nfunction getAccounts(rows: string[]) {\n  const defaultAccount = () => ({ name: '', previousBalance: 0, currentBalance: 0 });\n  return rows.reduce((accounts, row) => {\n    // if (row.startsWith('#KONTO')) {\n    //   const [, id, name] = splitWords(row, true);\n    //   return { ...accounts, [id]: { ...accounts[id], name } };\n    // }\n\n    if (row.startsWith('#RES')) {\n      const [, year, id, balance] = splitWords(row);\n      const balanceKey = Number(year) === -1 ? 'previousBalance' : 'currentBalance';\n      if (!accounts[id]) {\n        return {\n          ...accounts,\n          [id]: {\n            ...(accounts[id] ? accounts[id] : defaultAccount()),\n            [balanceKey]: Number(balance),\n          },\n        };\n      }\n    }\n    return accounts;\n  }, {} as Accounts);\n}\n\nfunction extractCompanyFromSie(sieString: string): Company {\n  const rows = sieString\n    .replaceAll('\\r', '')\n    .split('\\n');\n\n  return {\n    info: {\n      name: getCompanyName(rows),\n      registrationNumber: getCompanyRegistrationNumber(rows),\n      addressInfo: getCompanyAddressInfo(rows),\n    },\n    fiscalYears: getFiscalYears(rows),\n    accounts: getAccounts(rows),\n  };\n}\n\nexport default extractCompanyFromSie;\n","interface ResultSectionInterface {\n  title: string\n  sumTitle: string\n  children: {\n    [resultRowIdentifier: string]: {\n      title: string\n      accountRange: [number, number]\n    }\n  }\n}\n\ninterface ResultSectionsInterface {\n  operatingIncome: ResultSectionInterface\n  operatingCosts: ResultSectionInterface\n  financialPosts: ResultSectionInterface\n  yearEndDistribution: ResultSectionInterface\n  taxes: ResultSectionInterface\n  operatingProfit: ResultSectionInterface\n  financialProfit: ResultSectionInterface\n  profitBeforeTaxes: ResultSectionInterface\n  yearResult: ResultSectionInterface\n}\n\nconst resultSections: ResultSectionsInterface = {\n  operatingIncome: {\n    title: 'Rörelsens intäkter',\n    sumTitle: 'Summa rörelseintäkter, lagerförändringar m.m.',\n    children: {\n      netSales: {\n        title: 'Nettoomsättning',\n        accountRange: [\n          3000,\n          3999,\n        ],\n      },\n      changedInventory: {\n        title: 'Förändring av lager',\n        accountRange: [\n          3800,\n          3899,\n        ],\n      },\n      otherIncomes: {\n        title: 'Övriga rörelseintäkter',\n        accountRange: [\n          3900,\n          3999,\n        ],\n      },\n    },\n  },\n  operatingCosts: {\n    title: 'Rörelsekostnader',\n    sumTitle: 'Summa rörelsekostnader',\n    children: {\n      rawMaterialsConsumables: {\n        title: 'Råvaror och förnödenheter',\n        accountRange: [\n          4000,\n          4999,\n        ],\n      },\n      otherExternalExpenses: {\n        title: 'Övriga externa kostnader',\n        accountRange: [\n          5000,\n          6999,\n        ],\n      },\n      staffCosts: {\n        title: 'Personalkostnader',\n        accountRange: [\n          7000,\n          7699,\n        ],\n      },\n      writeDownsReversalOfWriteDowns: {\n        title: 'Nedskrivningar och återföring av nedskrivningar',\n        accountRange: [\n          7700,\n          7799,\n        ],\n      },\n      depreciationAccordingToPlan: {\n        title: 'Avskrivningar enligt plan',\n        accountRange: [\n          7800,\n          7899,\n        ],\n      },\n      otherOperatingExpenses: {\n        title: 'Övriga rörelsekostnader',\n        accountRange: [\n          7900,\n          7999,\n        ],\n      },\n    },\n  },\n  financialPosts: {\n    title: 'Finansiella poster',\n    sumTitle: 'Summa finansiella poster',\n    children: {\n      profitParticipationsGroupCompanies: {\n        title: 'Resultat från andelar i koncernbolag',\n        accountRange: [\n          8000,\n          8099,\n        ],\n      },\n      profitSharesJointlyControlledCompanies: {\n        title: 'Resultat från andelar i gemensamt styrda företag',\n        accountRange: [\n          8100,\n          8199,\n        ],\n      },\n      profitOtherFinancialFixedAssets: {\n        title: 'Resultat från övriga finansiella anläggningstillgångar',\n        accountRange: [\n          8200,\n          8299,\n        ],\n      },\n      otherInterestIncomeAndSimilarItems: {\n        title: 'Övriga ränteintäkter och liknande resultatposter',\n        accountRange: [\n          8300,\n          8399,\n        ],\n      },\n      interestExpensesAndSimilarIncomeItems: {\n        title: 'Räntekostnader och liknande resultatposter',\n        accountRange: [\n          8400,\n          8499,\n        ],\n      },\n    },\n  },\n  yearEndDistribution: {\n    title: 'Bokslutsdispositioner',\n    sumTitle: 'Summa bokslutsdispositioner',\n    children: {\n      changeInAccruals: {\n        title: 'Förändring av periodiseringsfonder för juridisk person och enskild näringsidkare',\n        accountRange: [\n          8810,\n          8819,\n        ],\n      },\n      appropriationsAllCompanyForms: {\n        title: 'Bokslutsdispositioner för samtliga företagsformer',\n        accountRange: [\n          8820,\n          8899,\n        ],\n      },\n    },\n  },\n  taxes: {\n    title: 'Skatter',\n    sumTitle: '',\n    children: {\n      taxesYearProfit: {\n        title: 'Skatter på årets resultat',\n        accountRange: [\n          8910,\n          8999,\n        ],\n      },\n    },\n  },\n  operatingProfit: {\n    title: 'Rörelseresultat',\n    sumTitle: '',\n    children: {},\n  },\n  financialProfit: {\n    title: 'Resultat efter finansiella poster',\n    sumTitle: '',\n    children: {},\n  },\n  profitBeforeTaxes: {\n    title: 'Resultat före skatt',\n    sumTitle: '',\n    children: {},\n  },\n  yearResult: {\n    title: 'Årets resultat',\n    sumTitle: '',\n    children: {},\n  },\n\n};\n\nexport type { ResultSectionInterface, ResultSectionsInterface };\nexport default resultSections;\n","import resultSections, { ResultSectionsInterface } from '../info/resultSectionsData';\nimport type { Accounts, Result, Sum } from './interfaces';\n\nfunction sumSection(\n  accounts: Accounts,\n  section: keyof ResultSectionsInterface,\n): Sum {\n  return Object.entries(accounts)\n    .reduce((sum, [accountId, account]) => {\n      const accountNumber = Number(accountId);\n      const resultRow = Object.entries(resultSections[section].children)\n        .find(([, { accountRange: [min, max] }]) => {\n          if (accountNumber >= min && accountNumber <= max) return true;\n          return false;\n        });\n      if (!resultRow) return sum;\n\n      const resultRowIdentifier = resultRow[0];\n      const resultRowReference = sum.children[resultRowIdentifier];\n      return {\n        current: sum.current + account.currentBalance,\n        previous: sum.previous + account.previousBalance,\n        children: {\n          ...sum.children,\n          [resultRowIdentifier]: {\n            current: resultRowReference.current + account.currentBalance,\n            previous: resultRowReference.previous + account.previousBalance,\n          },\n        },\n      };\n    }, {\n      current: 0,\n      previous: 0,\n      children: Object.fromEntries(Object.keys(resultSections[section].children)\n        .map((title) => [title, { current: 0, previous: 0 }])),\n    });\n}\n\nfunction sumSums(sums: Sum[]): Sum {\n  return sums.reduce((sum, { current, previous }) => ({\n    current: current + sum.current,\n    previous: previous + sum.previous,\n    children: {},\n  }));\n}\n\nfunction calculateResults(accounts: Accounts): Result {\n  const operatingIncome = sumSection(accounts, 'operatingIncome');\n  const operatingCosts = sumSection(accounts, 'operatingCosts');\n  const financialPosts = sumSection(accounts, 'financialPosts');\n  const yearEndDistribution = sumSection(accounts, 'yearEndDistribution');\n  const taxes = sumSection(accounts, 'taxes');\n\n  const operatingProfit = sumSums([operatingIncome, operatingCosts]);\n  const financialProfit = sumSums([operatingProfit, financialPosts]);\n  const profitBeforeTaxes = sumSums([financialProfit, yearEndDistribution]);\n  const yearResult = sumSums([profitBeforeTaxes, taxes]);\n\n  return {\n    operatingIncome,\n    operatingCosts,\n    financialPosts,\n    yearEndDistribution,\n    taxes,\n    operatingProfit,\n    financialProfit,\n    profitBeforeTaxes,\n    yearResult,\n  };\n}\n\nexport default calculateResults;\n","import { observer } from 'mobx-react-lite';\nimport Dropzone from 'react-dropzone';\nimport styled from 'styled-components';\nimport useStore from '../hooks/useStore';\nimport fileReader from '../functions/fileReader';\nimport extractCompanyFromSie from '../functions/extractCompanyFromSie';\nimport calculateResults from '../functions/calculateResults';\n\nconst DropArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30vh;\n  text-align: center;\n  background-color:#918686;\n  border-radius: 8px;\n`;\n\nconst DropFile = observer(() => {\n  const { companyStore } = useStore();\n  const handleOnDrop = async (acceptedFiles: File[]) => {\n    const sieText = await fileReader(acceptedFiles[0]);\n    const company = extractCompanyFromSie(sieText);\n    company.result = calculateResults(company.accounts);\n    companyStore.hydrate(company);\n    localStorage.setItem('companyInfo', JSON.stringify(company));\n  };\n\n  return (\n    <Dropzone onDrop={handleOnDrop}>\n      {({ getRootProps, getInputProps }) => (\n\n        <DropArea {...getRootProps()}>\n          <input {...getInputProps()} />\n          <p>Släpp din SIE-fil här för att ladda upp filen.</p>\n        </DropArea>\n\n      )}\n    </Dropzone>\n\n  );\n});\n\nexport default DropFile;\n","import { Card, styled, Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { observer } from 'mobx-react-lite';\nimport DropArea from '../../components/DropArea';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nflex-direction: column;\ngap: 2rem;\nmargin-top: 2rem;\npadding:6rem;\n`;\n\nconst LoadSie = observer(() => {\n  const { companyStore } = useStore();\n\n  return (\n    <Page>\n      <DropArea />\n\n      <StyledCard>\n        {companyStore.isReady && (\n          <>\n            <Typography variant=\"h3\">\n              {companyStore.company.info.name}\n            </Typography>\n            <Typography variant=\"h4\">\n              {companyStore.company.info.registrationNumber}\n            </Typography>\n          </>\n        )}\n        <StyledNavLink disabled={!companyStore.isReady} to=\"/fiscal-year\">\n          <Button disabled={!companyStore.isReady} variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n});\n\nexport default LoadSie;\n","import { NavLink } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst NotesPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>Noter</h5>\n      {companyStore.company.info.registrationNumber}\n      <NavLink to=\"/year-story\">\n        <button type=\"button\">Fortsätt</button>\n      </NavLink>\n    </Page>\n  );\n};\n\nexport default NotesPage;\n","export default __webpack_public_path__ + \"static/media/Comfortaa-Light.a5389d8a.ttf\";","export default __webpack_public_path__ + \"static/media/Comfortaa-Bold.c7cb6106.ttf\";","import {\n  Text, StyleSheet,\n} from '@react-pdf/renderer';\n\ninterface Props {\n  areaOne?:any;\n  areaTwo?:any;\n  areaThree?:any;\n  areaFour?:any;\n  areaFive?:any;\n  border?:boolean\n}\n\nconst styles = StyleSheet.create({\n  areaOne: {\n    minWidth: '40%',\n    textAlign: 'left',\n    fontSize: '10px',\n\n  },\n  areaTwo: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaThree: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\nconst Line:React.FC<Props> = (p: Props) => {\n  const { border } = p;\n  const { areaOne } = p;\n  const { areaTwo } = p;\n  const { areaThree } = p;\n  const { areaFour } = p;\n  const { areaFive } = p;\n  return (\n    <div style={{\n      display: 'flex', flexDirection: 'row', marginTop: '8px', padding: '2px 0px', borderBottom: border && '1px black solid',\n    }}\n    >\n      <Text style={styles.areaOne}>{areaOne}</Text>\n      <Text style={styles.areaTwo}>{areaTwo}</Text>\n      <Text style={styles.areaThree}>{areaThree}</Text>\n      <Text style={styles.areaFour}>\n        {areaFour}\n      </Text>\n      <Text style={styles.areaFive}>\n        {areaFive}\n      </Text>\n    </div>\n  );\n};\n\nexport default Line;\n","import {\n  Text, StyleSheet,\n} from '@react-pdf/renderer';\n\ninterface Props {\n  areaOne?:any;\n  areaTwo?:any;\n  areaThree?:any;\n  areaFour?:any;\n  areaFive?:any;\n  border?:boolean\n}\n\nconst styles = StyleSheet.create({\n  areaOne: {\n    fontFamily: 'ComfortaaBold',\n    minWidth: '55%',\n    textAlign: 'left',\n    fontSize: '10px',\n  },\n  areaThree: {\n    width: '13%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '16%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '16%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\nconst resultLine:React.FC<Props> = (p) => (\n  <div style={{\n    display: 'flex', flexDirection: 'row', marginTop: '8px', borderBottom: p.border && '1px black solid',\n  }}\n  >\n    <Text style={styles.areaOne}>{p.areaOne}</Text>\n    <Text style={styles.areaThree}>{p.areaThree}</Text>\n    <Text style={styles.areaFour}>\n      {p.areaFour}\n    </Text>\n    <Text style={styles.areaFive}>\n      {p.areaFive}\n    </Text>\n  </div>\n);\n\nexport default resultLine;\n","import { FC, ReactElement } from 'react';\nimport { formatCurrency } from '../functions/formatting';\nimport type { Result as CompanyResult } from '../functions/interfaces';\nimport resultSectionsData from '../info/resultSectionsData';\nimport ResultLine from './components/resultLine';\n\ninterface ResultProps {\n  result: CompanyResult\n}\n\n// eslint-disable-next-line\nconst entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\nconst Result: FC<ResultProps> = ({ result }): ReactElement => (\n  <>\n    {Object.entries(resultSectionsData).map(([section, sectionData]) => (\n      <ResultLine\n        key={section}\n        areaOne={sectionData.title}\n        areaFour={formatCurrency(result[section].current.toFixed(2))}\n        areaFive={formatCurrency(result[section].previous.toFixed(2))}\n      />\n    ))}\n  </>\n);\n\nexport default Result;\n","import {\n  Page, Text, View, Document, StyleSheet, Font,\n} from '@react-pdf/renderer';\nimport { observer } from 'mobx-react-lite';\nimport * as info from '../info/info.json';\nimport fontRegular from '../fonts/Comfortaa-Light.ttf';\nimport fontBold from '../fonts/Comfortaa-Bold.ttf';\nimport type CompanyStore from '../stores/CompanyStore';\nimport Line from './components/Line';\nimport Result from './Result';\nimport { formatDate } from '../functions/formatting';\n\nFont.register({ family: 'ComfortaaRegular', src: fontRegular });\nFont.register({ family: 'ComfortaaBold', src: fontBold });\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#FFF',\n    justifyContent: 'center',\n    fontFamily: 'ComfortaaRegular',\n    color: '#191919',\n\n  },\n  section: {\n    marginTop: '10px',\n    padding: '10px 30px',\n    flexGrow: 1,\n    textAlign: 'left',\n    lineHeight: 1.4,\n  },\n  front: {\n    marginTop: '50px',\n    padding: '50px',\n    flexGrow: 1,\n    textAlign: 'center',\n    lineHeight: 1.4,\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignSelf: 'center',\n    height: '50px',\n    borderTop: '1px black solid',\n    width: '80%',\n    fontSize: '10px',\n    padding: '4px 0px',\n  },\n  h1: {\n    fontSize: '24px',\n  },\n  h2: {\n    fontSize: '18px',\n    marginTop: '18px',\n  },\n  h3: {\n    fontSize: '14px',\n    marginTop: '14px',\n  },\n  h4Bold: {\n    fontSize: '11px',\n    marginTop: '11px',\n    fontWeight: 'bolder',\n    fontFamily: 'ComfortaaBold',\n\n  },\n  h4: {\n    fontSize: '9px',\n    marginTop: '10px',\n    color: '#808080',\n  },\n\n  areaOne: {\n    minWidth: '40%',\n    textAlign: 'left',\n    fontSize: '10px',\n  },\n  areaTwo: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaThree: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\n// Create Document Component\nconst Pdf = observer(({ companyStore }: { companyStore: CompanyStore }) => {\n  const { company } = companyStore;\n\n  return (\n\n    <Document language=\"sv\">\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.front}>\n          <Text style={styles.h1}>{company.info.name}</Text>\n          <Text style={{ marginBottom: '50px', ...styles.h2 }}>{company?.info?.registrationNumber}</Text>\n          <Text style={styles.h2}>{info.fiscal_year_text}</Text>\n          <Text style={styles.h2}>{`${formatDate(company.fiscalYears.currentStart)} - ${formatDate(company.fiscalYears.currentEnd)}`}</Text>\n          <Text style={styles.h4}>{info.presentation_ceo_text}</Text>\n          <Text style={styles.h4}>{info.round_up_method}</Text>\n          <Text style={{ marginTop: '24px', ...styles.h4 }}>{info.confirmation_certificate}</Text>\n          <Text style={{ marginTop: '24px', ...styles.h4 }}>{info.director_approve_text}</Text>\n        </View>\n        <View break style={styles.section}>\n          <Text style={styles.h2}>Förvaltningsberättelse</Text>\n          <Text style={styles.h3}>Verksamheten</Text>\n          <Text style={styles.h4Bold}>Allmänt om verksamheten</Text>\n          <Text style={styles.h4}>{info.year_text}</Text>\n\n          {/* Flerårsöversikt */}\n          <Text style={styles.h3}>Flerårsöversikt</Text>\n          {/* Years */}\n          <Line\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n              -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          {/* Nettoomsättning */}\n          <Line areaOne=\"Nettoomsättning\" areaFour=\"123 123\" areaFive=\"0\" />\n\n          {/* resultat efter finansiella poster */}\n          <Line areaOne=\"Resultat efter finansiella poster\" areaFour=\"321 321\" areaFive=\"1 214\" />\n\n          {/* Soliditet */}\n          <Line areaOne=\"Soliditet (%)\" areaFour=\"38\" areaFive=\"7\" />\n\n          {/* Description changes year -1 to 0 */}\n          <Text style={styles.h4}>\n            {'Bolaget har under 2020 ingått ett uppdragsavtal avseende redovisningstjänster'\n            + 'vilket har påverkat omsättning starkt positivt.'}\n            Uppdragsavtalet motsvarar en heltidstjänst och fortlöpt under hela räkenskapsåret.\n          </Text>\n\n          {/* Förändring i egent kapital */}\n          <Text style={styles.h3}>Förändringar i eget kapital</Text>\n\n          {/* aktiekapital */}\n          <Line\n            areaTwo=\"Aktiekapital\"\n            areaThree={`Balanserat\n              resultat`}\n            areaFour={`Årets\n            resultat`}\n            areaFive=\"Totalt\"\n            border\n          />\n\n          {/* vid årets ingång */}\n          <Line\n            areaOne=\"Vid årets ingång\"\n            areaTwo=\"50 000\"\n            areaThree=\"0\"\n            areaFour=\"1 073\"\n            areaFive=\"51 073\"\n          />\n\n          {/* Balanseras i en ny räkning */}\n          <Line\n            areaOne=\"Balanseras i en ny räkning\"\n            areaThree=\"1 073\"\n            areaFour=\"-1 073\"\n            areaFive=\"0\"\n          />\n\n          {/* Årets resultat */}\n          <Line\n            areaOne=\"Årets resultat\"\n            areaFour=\"485 281\"\n            areaFive=\"485 281\"\n          />\n          {/* Vid årets utgång */}\n          <Line\n            areaOne=\"Vid årets ingång\"\n            areaTwo=\"50 000\"\n            areaThree=\"0\"\n            areaFour=\"485 281\"\n            areaFive=\"485 281\"\n          />\n\n          {/* Resultatdispotions */}\n          <Text style={styles.h3}>Resultatdispotion</Text>\n\n          {/* Stående medel */}\n          <Line\n            areaOne=\"Styrelsen och VD föreslår att till förfogande stående medel\"\n          />\n\n          {/* Balanserat resultat */}\n          <Line\n            areaOne=\"Balanserat resultat\"\n            areaFive=\"1 073\"\n          />\n\n          {/* Årets resultat */}\n          <Line\n            areaOne=\"Årets resultat\"\n            areaFive=\"485 281\"\n          />\n\n          {/* Summa */}\n          <Line\n            areaOne=\"Summa\"\n            areaFive=\"486 354\"\n          />\n\n          {/* Disponeras */}\n          <Line\n            areaOne=\"Disponeras enligt följande\"\n          />\n\n          {/* Utdelas */}\n          <Line\n            areaOne=\"Utdelas till aktieägare\"\n            areaFive=\"177 100\"\n          />\n\n          {/* Balanseras i ny räkning */}\n          <Line\n            areaOne=\"Balanseras i ny räkning\"\n            areaFive=\"309 254\"\n          />\n\n          {/* Summa */}\n          <Line\n            areaOne=\"Summa\"\n            areaFive=\"486 354\"\n          />\n\n          {/* Text regelverk */}\n          <Text style={styles.h4}>\n            Med hänvisning till ovanstående och vad som i övrigt kommit till styrelsens kännedom\n            är det styrelsens bedömning att utdelningen är försvarbar (enligt ABL 17 kap 3 §) med\n            tanke på de krav som verksamhetens art och omfattning samt risker ställer på storleken\n            av bolagets egna kapital, konsolideringsbehov, likviditet och ställning i övrigt.\n          </Text>\n\n        </View>\n        <View break style={styles.section}>\n          {/* Resultaträkning */}\n          <Text style={styles.h2}>Resultaträkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          <Result result={company.result} />\n\n        </View>\n\n        <View break style={styles.section}>\n          {/* Balansräkning */}\n          <Text style={styles.h2}>Balansräkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          {/* Tillgångar */}\n          <Line\n            areaOne=\"Tillgångar\"\n          />\n          <Line\n            areaOne=\"Anläggningstillgångar\"\n          />\n          <Line\n            areaOne=\"Finansiella anläggningstillgångar\"\n          />\n\n        </View>\n        <View break style={styles.section}>\n          {/* Balansräkning */}\n          <Text style={styles.h2}>Balansräkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          {/* Eget kapital och skulder */}\n          <Line\n            areaOne=\"Eget kapital och skulder\"\n          />\n          <Line\n            areaOne=\"Eget kapital\"\n          />\n          <Line\n            areaOne=\"Bundet eget kapital\"\n          />\n\n        </View>\n\n        <View break style={styles.section}>\n          {/* Noter */}\n          <Text style={styles.h2}>Noter</Text>\n          <Text style={styles.h3}>Not 1 - Redovisningsprinciper</Text>\n          <Text style={styles.h4}>\n            {`Årsredovisningen är upprättad i enlighet med årsredovisningslagen och Bokföringsnämndens allmänna\n            råd (BFNAR 2016:10) om årsredovisning i mindre företag.\n            Nyckeltalsdefinitioner\n            Nettoomsättning\n            Rörelsens huvudintäkter, fakturerade kostnader, sidointäkter samt intäktskorrigeringar.\n            Resultat efter finansiella poster\n            Resultat efter finansiella intäkter och kostnader men före bokslutsdispositioner och skatter.\n            Soliditet\n            Justerat eget kapital (eget kapital och obeskattade reserver med avdrag för uppskjuten skatt) i procent av balansomslutningen.`}\n          </Text>\n\n        </View>\n\n        <View break style={styles.section}>\n          {/* Underskrifter */}\n          <Text style={styles.h2}>Underskrifter</Text>\n          <Text style={styles.h4}>\n            {`\n            Årsredovisning för ${company.info.name}, ${company.info.registrationNumber}\n            Avseende räkenskapsåret ${formatDate(company.fiscalYears.currentEnd)} - ${formatDate(company.fiscalYears.currentEnd)}`}\n          </Text>\n\n        </View>\n\n        <View fixed style={styles.footer}>\n          <View style={{ display: 'flex', flexDirection: 'column' }}>\n            <Text>{company.info.name}</Text>\n            <Text>{company.info.registrationNumber}</Text>\n          </View>\n          <Text render={({ pageNumber, totalPages }) => (\n            `sida ${pageNumber} av ${totalPages}`\n          )}\n          />\n\n        </View>\n      </Page>\n    </Document>\n  );\n});\n\nexport default Pdf;\n","import { NavLink } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst ResultDispositionPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>Resultatdisposition</h5>\n      {companyStore.company.info.registrationNumber}\n      <NavLink to=\"/notes\">\n        <button type=\"button\">Fortsätt</button>\n      </NavLink>\n    </Page>\n  );\n};\n\nexport default ResultDispositionPage;\n","import { Card as MuiCard, CardProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst Card = styled(MuiCard)<CardProps>(() => ({\n  padding: '32px',\n}));\n\nexport default Card;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ntype Props ={\n  subTitle:string\n  isBold?:boolean\n  isSum?:boolean\n}\n\nconst SingleRow:React.FC<Props> = ({\n  subTitle, isBold, isSum, children,\n}) => (\n  <Grid mb={12} container justifyContent=\"space-between\">\n    <Grid ml={!isSum && 12} xs={3} item alignSelf=\"center\">\n      <Typography fontWeight={isBold && 900}>{subTitle}</Typography>\n    </Grid>\n    <Grid item xs={3}>\n      <Grid pt={12} borderTop={isSum && '1px solid gray'} container>\n        {children}\n      </Grid>\n\n    </Grid>\n  </Grid>\n);\n\nexport default SingleRow;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ntype Props = {\n  subTitle:string\n}\n\nconst SubTitle:React.FC<Props> = ({ subTitle, children }) => (\n\n  <Grid pb={12} container justifyContent=\"space-between\" direction=\"row\">\n    <Grid item xs={3}>\n      <Typography variant=\"h5\">{subTitle}</Typography>\n    </Grid>\n    <Grid item xs={3}>\n      <Typography variant=\"h6\">{children}</Typography>\n    </Grid>\n  </Grid>\n);\n\nexport default SubTitle;\n","import { FC, Fragment } from 'react';\nimport {\n  Button, Grid, TextField, Typography,\n} from '@mui/material';\nimport { useFormik } from 'formik';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport SingleRow from '../../components/SingleRow';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate, formatCurrency } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\nimport resultSectionsData from '../../info/resultSectionsData';\n\ninterface Child\n  {\n    [resultRowIdentifier: string]: {\n      title: string\n      accountRange: [number, number]\n    }\n  }\n\nconst ResultSheetPage:FC = () => {\n  const { companyStore } = useStore();\n\n  const { result } = companyStore.company;\n\n  const formik = useFormik({\n    initialValues: {\n      netIncome: companyStore.company.result.operatingIncome.children.netSales.current,\n    },\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  // eslint-disable-next-line\n  const entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\n  return (\n    <Page>\n      <Card>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid container direction=\"column\">\n\n            <SubTitle subTitle=\"Resultaträkning\">\n              <Typography variant=\"h6\">{`${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)} `}</Typography>\n            </SubTitle>\n            {Object.entries(resultSectionsData).map(([section, sectionData], i) => (\n              <Fragment key={i}>\n\n                {Object.entries(sectionData.children as Child).map(([child, childData]) => (\n                  <SingleRow subTitle={childData?.title}>\n                    <TextField\n                      fullWidth\n                      id=\"netIncome\"\n                      name=\"netIncome\"\n                      value={formatCurrency(result[section]?.children[child]?.current.toFixed(2) || '0', true)}\n                      onChange={formik.handleChange}\n                      helperText={formik.touched.netIncome && formik.errors.netIncome}\n                    />\n                  </SingleRow>\n                ))}\n\n                <SingleRow isSum isBold subTitle={sectionData.sumTitle || sectionData.title}>\n                  {formatCurrency(result[section].current.toFixed(2), true)}\n                </SingleRow>\n              </Fragment>\n            ))}\n\n            <Grid item alignSelf=\"center\">\n              <Button type=\"submit\" variant=\"contained\">Fortsätt</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Card>\n    </Page>\n  );\n};\n\nexport default ResultSheetPage;\n","// import { NavLink } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst SignPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>Befattningshavare</h5>\n      {companyStore.company.fiscalYears.currentEnd}\n      <Button>\n        Generera PDF\n      </Button>\n    </Page>\n  );\n};\n\nexport default SignPage;\n","import { NavLink } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport useStore from '../../hooks/useStore';\n\nconst YearStoryPage = () => {\n  const { companyStore } = useStore();\n  return (\n    <Page>\n      <h5>YearStory</h5>\n      {companyStore.company.info.registrationNumber}\n      <NavLink to=\"/sign\">\n        <button type=\"button\">Fortsätt</button>\n      </NavLink>\n    </Page>\n  );\n};\n\nexport default YearStoryPage;\n","import Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { useState } from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport useStore from '../hooks/useStore';\nimport BalanceSheetPage from '../pages/BalanceSheetPage/BalanceSheetPage';\nimport CompanyInfoPage from '../pages/CompanyInfoPage/CompanyInfoPage';\nimport FiscalYearPage from '../pages/FiscalYearPage/FiscalYearPage';\nimport LoadSie from '../pages/LoadSiePage/LoadSiePage';\nimport NotesPage from '../pages/NotesPage/NotesPage';\nimport Pdf from '../pages/pdf';\nimport ResultDispositionPage from '../pages/ResultDispositionPage/ResultDispositionPage';\nimport ResultSheetPage from '../pages/ResultSheetPage/ResultSheetPage';\nimport SignPage from '../pages/SignPage/SignPage';\nimport YearStoryPage from '../pages/YearStoryPage/YearStoryPage';\n\nconst Navigation = () => {\n  const { companyStore } = useStore();\n  const companyInfo = JSON.parse(localStorage.getItem('companyInfo'));\n  if (companyInfo) companyStore.hydrate(companyInfo);\n\n  const [isGeneratePdf, setIsGeneratePdf] = useState(false);\n\n  if (isGeneratePdf) {\n    return (\n      <div style={{ height: '100vh' }}>\n        <Grid\n          container\n          justifyContent=\"flex-end\"\n          position=\"absolute\"\n          top={70}\n          right={25}\n        >\n          <Button onClick={() => setIsGeneratePdf(!isGeneratePdf)} disabled={!companyStore.isReady} variant=\"contained\">Avbryt</Button>\n        </Grid>\n        <PDFViewer width=\"100%\" height=\"100%\">\n          <Pdf companyStore={companyStore} />\n        </PDFViewer>\n      </div>\n    );\n  } return (\n    <BrowserRouter>\n      <Grid\n        container\n        justifyContent=\"flex-end\"\n      >\n        <Button onClick={() => setIsGeneratePdf(!isGeneratePdf)} variant=\"contained\">Förhandsgranska</Button>\n      </Grid>\n      <Routes>\n        {/* Siefil */}\n        <Route path=\"/Arsredovisning\" element={<LoadSie />} />\n        {/* Välj räkenskapsår */}\n        <Route path=\"/fiscal-year\" element={<FiscalYearPage />} />\n        {/* Företagsuppgifter */}\n        <Route path=\"/company-info\" element={<CompanyInfoPage />} />\n        {/* Resultaträkning */}\n        <Route path=\"/result-sheet\" element={<ResultSheetPage />} />\n        {/* Balansräkning */}\n        <Route path=\"/balance-sheet\" element={<BalanceSheetPage />} />\n        {/* Resultatdisposition */}\n        <Route path=\"/result-disposition\" element={<ResultDispositionPage />} />\n        {/* Noter */}\n        <Route path=\"/notes\" element={<NotesPage />} />\n        {/* Förvaltningsberättelse */}\n        <Route path=\"/year-story\" element={<YearStoryPage />} />\n        {/* Befattningshavare */}\n        <Route path=\"/sign\" element={<SignPage />} />\n\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Navigation;\n","import { createTheme, GlobalStyles, ThemeProvider } from '@mui/material';\nimport './App.css';\nimport { StoreProvider } from './hooks/useStore';\nimport Navigation from './navigation/navigation';\n\nconst theme = createTheme({\n  spacing: 2,\n  palette: {\n    primary: {\n      main: '#6f12cd',\n    },\n  },\n  typography: {\n    fontFamily: 'Comfortaa',\n    fontSize: 11,\n  },\n  components: {\n    MuiCard: {\n      defaultProps: {\n        elevation: 5,\n      },\n\n    },\n\n    MuiButton: {\n      styleOverrides: {\n        contained: {\n          minWidth: '64px',\n          minHeight: '36px',\n          padding: '8px 16px',\n          lineHeight: 0.5,\n        },\n      },\n    },\n  },\n});\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction App() {\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles\n          styles={{\n            body: { backgroundColor: '#dae9cc5c' },\n          }}\n        />\n        <Navigation />\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}