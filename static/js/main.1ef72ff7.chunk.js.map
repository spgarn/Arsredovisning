{"version":3,"sources":["functions/fileReader.ts","stores/CompanyStore.ts","stores/RootStore.ts","hooks/useStore.tsx","components/StyledNavLink.tsx","components/TimeLine.tsx","components/InputField.tsx","components/Page.tsx","functions/formatting.ts","pages/CompanyInfoPage/CompanyInfoPage.tsx","pages/FiscalYearPage/FiscalYearPage.tsx","functions/extractCompanyFromSie.ts","info/resultSectionsData.ts","functions/calculateResults.ts","info/balanceSectionsAssetsData.ts","info/balanceSectionEquityData.ts","functions/calculateBalances.ts","components/DropArea.tsx","pages/LoadSiePage/LoadSiePage.tsx","components/Card.tsx","components/SubTitle.tsx","components/MultiRow.tsx","components/YesOrNo.tsx","pages/NotesPage/NoteContent.tsx","pages/NotesPage/NotesSelector.tsx","pages/NotesPage/NoteWrapper.tsx","pages/NotesPage/NotesPage.tsx","fonts/Comfortaa-Light.ttf","fonts/Comfortaa-Bold.ttf","pages/components/Line.tsx","pages/components/resultLine.tsx","pages/PDF/Result.tsx","pages/PDF/BalanceAssets.tsx","pages/PDF/BalanceEquity.tsx","pages/PDF/pdf.tsx","pages/ResultDispositionPage/ResultDispositionPage.tsx","functions/calculateInputResults.ts","pages/ResultSheetPage/ResultSheetPage.tsx","pages/SignPage/components/SignRow.tsx","pages/SignPage/SignPage.tsx","pages/YearStoryPage/YearStoryPage.tsx","functions/calculateInputBalance.ts","pages/BalanceSheetPage/BalanceSheetEquityPage.tsx","pages/BalanceSheetPage/BalanceSheetAssetsPage.tsx","navigation/navigation.tsx","App.tsx","index.tsx"],"names":["readFile","file","reader","FileReader","readAsArrayBuffer","Promise","resolve","onload","e","text","legacy","decode","Buffer","from","target","result","CompanyStore","rootStore","company","info","name","registrationNumber","addressInfo","street","city","zipCode","phone","fiscalYears","currentStart","currentEnd","previousStart","previousEnd","accounts","operatingIncome","current","previous","children","operatingCosts","financialPosts","yearEndDistribution","taxes","operatingProfit","financialProfit","profitBeforeTaxes","yearResult","balance","assets","ipFixedAssets","materialFixedAssets","financialFixedAssets","estimatedResult","productStock","accountsReceivable","otherShortClaims","prepaidCostsAndDelayedIncome","shortPlacements","CashAndBankBalances","fixedAssets","currentAssets","totalAssts","equity","liabilites","notes","isReady","makeObservable","this","observable","hydrate","action","savedCompany","JSON","parse","localStorage","getItem","runInAction","merge","setItem","stringify","RootStore","companyStore","StoreContext","createContext","undefined","StoreProvider","Provider","value","useStore","useContext","Error","StyledLink","styled","NavLink","p","margin","disabled","StyledNavLink","to","rest","padding","color","ColorlibConnector","StepConnector","theme","stepConnectorClasses","alternativeLabel","top","active","line","backgroundImage","completed","height","border","backgroundColor","palette","mode","grey","borderRadius","ColorlibStepIconRoot","ownerState","zIndex","width","display","justifyContent","alignItems","boxShadow","steps","title","path","ColorlibStepIcon","className","icon","Number","CustomizedSteppers","pathname","useLocation","activeStep","useMemo","step","map","indexOf","Box","mt","Stepper","connector","label","Step","StepLabel","StepIconComponent","Field","div","Input","Wrapper","InputField","Container","Page","formatCurrency","amount","isShowingCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","date","split","reduce","acc","i","StyledCard","Card","CompanyInfoPage","useState","setAmount","handleChange","event","Typography","variant","FormControl","sx","minWidth","size","Select","onChange","MenuItem","Switch","Button","FiscalYearPage","Checkbox","splitWords","row","removeQuotes","words","replace","inQuotes","replaceAll","word","getCompanyName","rows","find","r","startsWith","getCompanyRegistrationNumber","getCompanyAddressInfo","zipCity","getFiscalYears","currentYearRow","previousYearRow","getAccounts","year","id","balanceKey","previousBalance","currentBalance","extractCompanyFromSie","sieString","resultSections","sumTitle","netSales","accountRange","changedInventory","otherIncomes","rawMaterialsConsumables","otherExternalExpenses","staffCosts","writeDownsReversalOfWriteDowns","depreciationAccordingToPlan","otherOperatingExpenses","profitParticipationsGroupCompanies","profitSharesJointlyControlledCompanies","profitOtherFinancialFixedAssets","otherInterestIncomeAndSimilarItems","interestExpensesAndSimilarIncomeItems","changeInAccruals","appropriationsAllCompanyForms","taxesYearProfit","sumSection","section","Object","entries","sum","accountId","account","accountNumber","resultRow","min","max","resultRowIdentifier","resultRowReference","fromEntries","keys","sumSums","sums","calculateResults","balanceAssetsSections","patents","tenancy","goodwill","fees","prepaidPatentFees","buildingsAndProperties","costOnOthersProperty","buildingsAndProperties2","activeOrPrepaidProperties","buildingsAndProperties3","machines","inventoryAndTools","inventoryAndTools2","otherFixedAssets","groupStocks","claimGroupCompany","stockCompanyOfInterest","interetsInOtherCompanies","stocksCompanyOfInterest2","claimInteretsCompany","claimOtherCompaniesOfInterest","claimInteretsCompany2","otherLongSecurities","loanToOwner","otherLongClaims","rawMaterials","materialsUnderManufacturing","rawMaterials2","materialsUnderManufacturing2","doneMaterials","activeWorkForOthers","prepaidInvoice","otherStockAssets","claimGroupCompany2","claimCompanyOfInterest","claimCompanyOfInterest2","claimOtherCompanies","claimOtherCompanies2","claimCompanyOfInterest3","claimCompanyOfInterest4","OtherClaims","OtherClaims2","OtherClaims3","NotYetInvoiced","otherShortSecurities","stocksGroupCompany","otherShortSecurities2","cashAndBank","balanceEquitySections","ShareCapital","unRegistredShareCapital","ShareCapital2","revalueFond","reserveFond","fixedOverFond","balancedResult","balancedResult2","balancedResult3","freeUpFond","periodFond","ackumilatedWriteOffs","untaxedReserves","pensions","otherSavings","otherPensions","otherSavings2","liabilities","obligationLoan","checkCredit","otherDebtToInstitute","debtToGroupCompnay","debtToCompanyOfInterest","debtToOtherCompaniesOfInterest","debtToCompanyOfInterest2","otherDebts","otherDebtToInstitutes","prepaidCustomerInvoice","onGoingWorkForOther","accountsPayable","invoicedNotYetWorked","debtGroupCompany","debtCompanyOfInterest","debtOtherCompanyOfInterest","debtCompanyOfInterest2","checkCreditCount","otherDebt","changeDebt","otherDebt2","taxDebt","otherDebt3","otherDebt4","debtGroupCompany2","debtCompanyOfInterest3","debtOtherCompanyOfInterest2","debtCompanyOfInterest4","otherDebt5","preiodCostAndIncome","sumAssetsSection","balanceRow","balanceRowIdentifier","calculateBalanceAssets","sumEquitySection","DropArea","DropFile","observer","handleOnDrop","acceptedFiles","a","fileReader","sieText","onDrop","getRootProps","getInputProps","LoadSie","MuiCard","SubTitle","subTitle","Grid","mb","container","columnGap","pt","xs","item","alignSelf","MultiRow","isBold","isSum","isNoBorder","isBig","pl","fontWeight","borderTop","YesOrNo","field","setFieldValue","form","useEffect","useCallback","_","newValue","ToggleButtonGroup","exclusive","ToggleButton","WhiteTextField","TextField","NoteContent","noteKey","useFormikContext","NOTES","accountingPrinciples","component","averageAmountEmployees","as","renderAdditionals","TextareaAutosize","cols","minRows","minLength","NotesSelector","maxWidth","InputLabel","labelId","multiple","input","OutlinedInput","renderValue","selected","spacing","Chip","key","checked","includes","ListItemText","primary","NoteWrapper","Paper","elevation","marginTop","providedCollateral","contingentLiabilities","exceptionalIncomeExpenses","assetsProvisionsLiabilities","financialArrangements","otherComments","titleToKey","NotesPage","selectedNotes","setSelectedNotes","handleSubmit","data","console","log","onSubmit","initialValues","dirty","textAlign","type","styles","StyleSheet","create","areaOne","fontSize","areaTwo","areaThree","areaFour","areaFive","Line","flexDirection","borderBottom","fontFamily","ResultLine","props","Result","resultSectionsData","sectionData","toFixed","BalanceAssets","BalanceEquity","Font","register","family","src","fontRegular","fontBold","page","flexGrow","lineHeight","front","footer","h1","h2","h3","h4Bold","h4","Pdf","language","marginBottom","break","fixed","render","pageNumber","totalPages","ResultDispositionPage","direction","setField","fullWidth","sumAreas","ResultSheetPage","forEach","values","total","calculateInputResults","sumInputResults","child","childData","SignRow","first","second","third","fourth","fifth","gap","SignPage","Date","setValue","ml","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","minDate","renderInput","params","YearStoryPage","calculateInputBalance","BalanceSection","BalanceSheetEquityPage","filter","BalanceSheetPage","Navigation","showPdf","setShowPdf","position","right","onClick","element","BalanceSheetAssetsPage","createTheme","main","typography","components","defaultProps","MuiButton","styleOverrides","contained","minHeight","App","ThemeProvider","GlobalStyles","body","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1ef72ff7.chunk.js","sourcesContent":["import legacy from 'legacy-encoding';\n\nfunction readFile(file: File): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsArrayBuffer(file);\n  return new Promise((resolve) => {\n    reader.onload = (e) => {\n      const text = legacy.decode(\n        Buffer.from(e.target.result as ArrayBuffer),\n        'cp437'\n      );\n      resolve(text);\n    };\n  });\n}\n\nexport default readFile;\n","import { action, makeObservable, observable, runInAction } from 'mobx';\nimport merge from 'lodash.merge';\nimport { Company } from '../functions/interfaces';\nimport type RootStore from './RootStore';\n\nclass CompanyStore {\n  company: Company = {\n    info: {\n      name: '',\n      registrationNumber: '',\n      addressInfo: {\n        name: '',\n        street: '',\n        city: '',\n        zipCode: '',\n        phone: '',\n      },\n    },\n    fiscalYears: {\n      currentStart: '',\n      currentEnd: '',\n      previousStart: '',\n      previousEnd: '',\n    },\n    accounts: {},\n    result: {\n      operatingIncome: { current: 0, previous: 0, children: {} },\n      operatingCosts: { current: 0, previous: 0, children: {} },\n      financialPosts: { current: 0, previous: 0, children: {} },\n      yearEndDistribution: { current: 0, previous: 0, children: {} },\n      taxes: { current: 0, previous: 0, children: {} },\n      operatingProfit: { current: 0, previous: 0, children: {} },\n      financialProfit: { current: 0, previous: 0, children: {} },\n      profitBeforeTaxes: { current: 0, previous: 0, children: {} },\n      yearResult: { current: 0, previous: 0, children: {} },\n    },\n    balance: {\n      assets: {\n        ipFixedAssets: { current: 0, previous: 0, children: {} },\n        materialFixedAssets: { current: 0, previous: 0, children: {} },\n        financialFixedAssets: { current: 0, previous: 0, children: {} },\n        estimatedResult: { current: 0, previous: 0, children: {} },\n        productStock: { current: 0, previous: 0, children: {} },\n        accountsReceivable: { current: 0, previous: 0, children: {} },\n        otherShortClaims: { current: 0, previous: 0, children: {} },\n        prepaidCostsAndDelayedIncome: { current: 0, previous: 0, children: {} },\n        shortPlacements: { current: 0, previous: 0, children: {} },\n        CashAndBankBalances: { current: 0, previous: 0, children: {} },\n        fixedAssets: { current: 0, previous: 0, children: {} },\n        currentAssets: { current: 0, previous: 0, children: {} },\n        totalAssts: { current: 0, previous: 0, children: {} },\n      },\n      equity: {\n        liabilites: { current: 0, previous: 0, children: {} },\n        equity: { current: 0, previous: 0, children: {} },\n      },\n    },\n    notes: {},\n  };\n\n  isReady = false;\n\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    makeObservable(this, {\n      company: observable,\n      isReady: observable,\n      hydrate: action,\n    });\n\n    this.rootStore = rootStore;\n\n    const savedCompany = JSON.parse(localStorage.getItem('companyInfo'));\n    if (savedCompany) this.hydrate(savedCompany);\n  }\n\n  hydrate(company: Company): void {\n    runInAction(() => {\n      this.company = merge(this.company, company);\n      this.isReady = true;\n      localStorage.setItem('companyInfo', JSON.stringify(this.company));\n    });\n  }\n}\n\nexport default CompanyStore;\n","import CompanyStore from './CompanyStore';\n\nclass RootStore {\n  companyStore: CompanyStore;\n\n  constructor() {\n    this.companyStore = new CompanyStore(this);\n  }\n}\n\nexport default RootStore;\n","import type { ReactNode } from 'react';\nimport { createContext, useContext } from 'react';\nimport type CompanyStore from '../stores/CompanyStore';\nimport RootStore from '../stores/RootStore';\n\nlet store: RootStore;\nconst StoreContext = createContext<RootStore | undefined>(undefined);\nfunction StoreProvider({ children }: { children: ReactNode }) {\n  const rootStore = store ?? new RootStore();\n\n  return (\n    <StoreContext.Provider value={rootStore}>{children}</StoreContext.Provider>\n  );\n}\n\nfunction useStore(): { companyStore: CompanyStore } {\n  const rootStore = useContext(StoreContext);\n  if (!rootStore) {\n    throw new Error('useStore must be used within a StoreProvider.');\n  }\n\n  return {\n    companyStore: rootStore.companyStore,\n  };\n}\n\nexport { StoreProvider };\nexport default useStore;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface IProps {\n  to: string;\n  margin?: string;\n  disabled?: boolean;\n  children?: React.ReactNode;\n}\n\nconst StyledLink = styled(NavLink)<IProps>`\n  text-decoration: none;\n  margin: ${(p) => p.margin};\n  pointer-events: ${(p) => p.disabled && 'none'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: '100%';\n`;\n\nconst StyledNavLink = ({ to, children, margin, disabled, ...rest }: IProps) => (\n  <StyledLink {...rest} disabled={disabled} margin={margin} to={to}>\n    {children}\n  </StyledLink>\n);\n\nexport default StyledNavLink;\n","import { Box } from '@mui/material';\nimport Step from '@mui/material/Step';\nimport StepConnector, {\n  stepConnectorClasses,\n} from '@mui/material/StepConnector';\nimport { StepIconProps } from '@mui/material/StepIcon';\nimport StepLabel from '@mui/material/StepLabel';\nimport Stepper from '@mui/material/Stepper';\nimport { styled } from '@mui/material/styles';\nimport { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport StyledNavLink from './StyledNavLink';\n\nconst NavLink = styled(StyledNavLink)({\n  padding: '20px',\n  color: 'white',\n});\n\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 22,\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(111, 18, 205) 0%,rgb(111, 80, 206) 50%,rgb(111, 153, 206) 100%)',\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(111, 18, 205) 0%,rgb(111, 80, 206) 50%,rgb(111, 153, 206) 100%)',\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    height: 3,\n    border: 0,\n    backgroundColor:\n      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n    borderRadius: 1,\n  },\n}));\n\nconst ColorlibStepIconRoot = styled('div')<{\n  ownerState: { completed?: boolean; active?: boolean };\n}>(({ theme, ownerState }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n  zIndex: 1,\n  color: '#fff',\n  width: 50,\n  height: 50,\n  display: 'flex',\n  borderRadius: '50%',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...(ownerState.active && {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(111, 18, 205) 0%, rgb(111, 80, 206) 50%, rgb(111, 153, 206) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  }),\n  ...(ownerState.completed && {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(111, 18, 205) 0%, rgb(111, 80, 206) 50%, rgb(111, 153, 206) 100%)',\n  }),\n}));\n\nconst steps = [\n  { title: 'Sie-fil', path: '/arsredovisning' },\n  { title: 'Företagsuppgifter', path: '/company-info' },\n  { title: 'Resultaträkning', path: '/result-sheet' },\n  { title: 'Tillgångar', path: '/balance-sheet-assets' },\n  { title: 'Balansräkning', path: '/balance-sheet-equity' },\n  { title: 'Resultatdisposition', path: '/result-disposition' },\n  { title: 'Noter', path: '/notes' },\n  { title: 'Förvaltningsberättelse', path: '/year-story' },\n  { title: 'Befattningshavare', path: '/sign' },\n];\n\nconst ColorlibStepIcon = ({\n  active,\n  completed,\n  className,\n  icon,\n}: StepIconProps) => (\n  <ColorlibStepIconRoot\n    ownerState={{ completed, active }}\n    className={className}\n  >\n    <NavLink to={steps[Number(icon) - 1].path}>{icon}</NavLink>\n  </ColorlibStepIconRoot>\n);\n\nexport default function CustomizedSteppers() {\n  const { pathname } = useLocation();\n\n  const activeStep = useMemo(() => {\n    const step = steps.map(({ path }) => path).indexOf(pathname);\n    return step === -1 ? 0 : step;\n  }, [pathname]);\n\n  return (\n    <Box width=\"100%\" mt={18}>\n      <Stepper\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map((label) => (\n          <Step key={label.title}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>\n              {label.title}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Box>\n  );\n}\n","import styled from 'styled-components';\n\ninterface IProps {\n  title: string;\n  children?: React.ReactNode;\n}\n\nconst Field = styled.div`\n  margin-left: 2rem;\n`;\n\nconst Input = styled.div`\n  display: flex;\n  gap: 1rem;\n  flex-direction: row;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 1rem;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst InputField = ({ title, children }: IProps) => (\n  <Wrapper>\n    <Field>{title}</Field>\n    <Input>{children}</Input>\n  </Wrapper>\n);\n\nexport default InputField;\n","import type { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 32px;\n  box-sizing: border-box;\n`;\n\ninterface IProps {\n  children: ReactNode;\n}\n\nconst Page = ({ children }: IProps) => <Container>{children}</Container>;\n\nexport default Page;\n","const formatCurrency = (amount: string | number, isShowingCurrency = false) =>\n  new Intl.NumberFormat('sv-SE', {\n    style: isShowingCurrency ? 'currency' : 'decimal',\n    currency: 'SEK',\n    minimumFractionDigits: 0,\n  }).format(+amount);\n\nconst formatDate = (date: string) =>\n  date\n    ?.split('')\n    .reduce(\n      (acc: string, value: string, i: number) =>\n        acc + (i === 3 || i === 5 ? `${value}-` : value),\n      ''\n    );\n\nexport { formatCurrency, formatDate };\n","import {\n  Button,\n  Card,\n  FormControl,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Switch,\n  Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport InputField from '../../components/InputField';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\n  gap: 2rem;\n  margin-top: 2rem;\n  padding: 1rem;\n`;\n\nconst CompanyInfoPage = () => {\n  const { companyStore } = useStore();\n  const [amount, setAmount] = useState(0 || '');\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setAmount(event.target.value);\n  };\n  return (\n    <Page>\n      <Typography variant=\"h4\">Företagsuppgifter</Typography>\n      <StyledCard>\n        <Typography variant=\"h5\">Räkenskapsår</Typography>\n        <InputField title=\"Aktuellt räkenskapsår\">\n          <Typography variant=\"h6\">\n            {companyStore.isReady &&\n              `${formatDate(\n                companyStore.company.fiscalYears.currentStart\n              )} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`}\n          </Typography>\n        </InputField>\n        <InputField title=\"Antal tidigare räkenskapsår\">\n          <FormControl sx={{ minWidth: '120px' }} size=\"small\">\n            <Select value={amount} onChange={handleChange}>\n              <MenuItem value={0}>0</MenuItem>\n              <MenuItem value={1}>1</MenuItem>\n              <MenuItem value={2}>2</MenuItem>\n            </Select>\n          </FormControl>\n        </InputField>\n        <Typography variant=\"h5\">Övriga uppgifter</Typography>\n        <InputField title=\"Koncernförhållande\">\n          <FormControl sx={{ minWidth: '120px' }} size=\"small\">\n            <Select value={amount} onChange={handleChange}>\n              <MenuItem value=\"none\">Bolaget ingår i en koncern</MenuItem>\n              <MenuItem value=\"mother\">Bolaget är modern i en koncern</MenuItem>\n              <MenuItem value=\"daugther\">\n                Bolaget är dottern i en koncern\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </InputField>\n        <Typography variant=\"h5\">Revisor</Typography>\n        <InputField title=\"Har bolaget revisor?\">\n          <Switch />\n        </InputField>\n        <StyledNavLink to=\"/result-sheet\">\n          <Button variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n};\n\nexport default CompanyInfoPage;\n","import { Button, Card, Checkbox, styled, Typography } from '@mui/material';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n  gap: 2rem;\n  margin-top: 2rem;\n  padding: 1rem;\n`;\n\nconst FiscalYearPage = () => {\n  const { companyStore } = useStore();\n\n  return (\n    <Page>\n      <Typography variant=\"h4\">Välj räkenskapsår</Typography>\n      <StyledCard>\n        <Typography variant=\"h6\">\n          {companyStore.isReady &&\n            // eslint-disable-next-line max-len\n            `För företaget ${companyStore.company.info.name}fanns följande räkenskapsår som kan användas i SIE-filen. Välj det år som ska lämnas in till Bolagsverket`}\n        </Typography>\n        <Typography variant=\"h5\">\n          <Checkbox />\n          {companyStore.isReady &&\n            `${formatDate(\n              companyStore.company.fiscalYears.currentStart\n            )} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`}\n        </Typography>\n        <StyledNavLink to=\"/company-info\">\n          <Button variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n};\n\nexport default FiscalYearPage;\n","import type {\n  Company,\n  CompanyAddressInfo,\n  FiscalYears,\n  Accounts,\n} from './interfaces';\n\nfunction splitWords(row: string, removeQuotes = false) {\n  const words = row\n    // Replaces all spaces within quotes with {tempSpace}\n    .replace(/\"[^\"]+\"/g, (inQuotes) => inQuotes.replaceAll(' ', '{tempSpace}'))\n    .split(' ')\n    .map((word) => word.replaceAll('{tempSpace}', ' '));\n  if (removeQuotes) return words.map((word) => word.replaceAll('\"', ''));\n  return words;\n}\n\n// E.g. '#FNAMN \"Omini AB\"'\nfunction getCompanyName(rows: string[]) {\n  const row = rows.find((r) => r.startsWith('#FNAMN'));\n  if (!row) return 'unknown';\n\n  return splitWords(row, true)[1];\n}\n\n// E.g. \"#ORGNR 559207-6037\"\nfunction getCompanyRegistrationNumber(rows: string[]) {\n  const row = rows\n    .find((r) => r.startsWith('#ORGNR'))\n    .replace(/(\\d{6})(\\d{4})/, '$1-$2');\n\n  if (!row) return 'unknown';\n\n  return splitWords(row, true)[1];\n}\n\n// E.g. #ADRESS \"Ivar Eriksson\" \"Storgatan 2\" \"21140 Malmö\" \"0739143211\"\nfunction getCompanyAddressInfo(rows: string[]): CompanyAddressInfo {\n  const row = rows.find((r) => r.startsWith('#ADRESS'));\n  if (!row) return {} as CompanyAddressInfo;\n\n  const [, name, street, zipCity, phone] = splitWords(row, true);\n  return {\n    name,\n    street,\n    city: zipCity.split(' ')[1],\n    zipCode: zipCity.split(' ')[0],\n    phone,\n  };\n}\n\n// E.g. \"#RAR 0 20200101 20201231\", \"#RAR -1 20190101 20191231\"\nfunction getFiscalYears(rows: string[]): FiscalYears {\n  const currentYearRow = rows.find((r) => r.startsWith('#RAR 0'));\n  const previousYearRow = rows.find((r) => r.startsWith('#RAR -1'));\n\n  const [, , currentStart, currentEnd] = currentYearRow\n    ? splitWords(currentYearRow)\n    : [];\n  const [, , previousStart, previousEnd] = previousYearRow\n    ? splitWords(previousYearRow)\n    : [];\n\n  return {\n    currentStart,\n    currentEnd,\n    previousStart,\n    previousEnd,\n  };\n}\n\n// E.g. #KONTO 1039 \"Ackumulerade avskrivningar på patent\"\n// E.g. #RES 0 3041 -2258200 0\n// E.g. #UB 0 1930 150000 0\nfunction getAccounts(rows: string[]) {\n  const defaultAccount = () => ({\n    name: '',\n    previousBalance: 0,\n    currentBalance: 0,\n  });\n  return rows.reduce((accounts, row) => {\n    // if (row.startsWith('#KONTO')) {\n    //   const [, id, name] = splitWords(row, true);\n    //   return { ...accounts, [id]: { ...accounts[id], name } };\n    // }\n\n    if (row.startsWith('#UB')) {\n      const [, year, id, balance] = splitWords(row);\n      const balanceKey =\n        Number(year) === -1 ? 'previousBalance' : 'currentBalance';\n      const r = {\n        ...accounts,\n        [id]: {\n          ...(accounts[id] ? accounts[id] : defaultAccount()),\n          [balanceKey]: Number(balance),\n        },\n      };\n      return r;\n    }\n\n    if (row.startsWith('#RES')) {\n      const [, year, id, balance] = splitWords(row);\n      const balanceKey =\n        Number(year) === -1 ? 'previousBalance' : 'currentBalance';\n      return {\n        ...accounts,\n        [id]: {\n          ...(accounts[id] ? accounts[id] : defaultAccount()),\n          [balanceKey]: Number(balance),\n        },\n      };\n    }\n    return accounts;\n  }, {} as Accounts);\n}\n\nfunction extractCompanyFromSie(sieString: string): Company {\n  const rows = sieString.replaceAll('\\r', '').split('\\n');\n\n  return {\n    info: {\n      name: getCompanyName(rows),\n      registrationNumber: getCompanyRegistrationNumber(rows),\n      addressInfo: getCompanyAddressInfo(rows),\n    },\n    fiscalYears: getFiscalYears(rows),\n    accounts: getAccounts(rows),\n    balance: { assets: {}, equity: {} },\n    notes: {},\n  };\n}\n\nexport default extractCompanyFromSie;\n","interface ResultSectionInterface {\n  title: string;\n  sumTitle: string;\n  children: {\n    [resultRowIdentifier: string]: {\n      title: string;\n      accountRange: [number, number];\n    };\n  };\n}\n\ninterface ResultSectionsInterface {\n  operatingIncome: ResultSectionInterface;\n  operatingCosts: ResultSectionInterface;\n  financialPosts: ResultSectionInterface;\n  yearEndDistribution: ResultSectionInterface;\n  taxes: ResultSectionInterface;\n  operatingProfit: ResultSectionInterface;\n  financialProfit: ResultSectionInterface;\n  profitBeforeTaxes: ResultSectionInterface;\n  yearResult: ResultSectionInterface;\n}\n\nconst resultSections: ResultSectionsInterface = {\n  operatingIncome: {\n    title: 'Rörelsens intäkter',\n    sumTitle: 'Summa rörelseintäkter, lagerförändringar m.m.',\n    children: {\n      netSales: {\n        title: 'Nettoomsättning',\n        accountRange: [3000, 3799],\n      },\n      changedInventory: {\n        title: 'Förändring av lager',\n        accountRange: [3800, 3899],\n      },\n      otherIncomes: {\n        title: 'Övriga rörelseintäkter',\n        accountRange: [3900, 3999],\n      },\n    },\n  },\n  operatingCosts: {\n    title: 'Rörelsekostnader',\n    sumTitle: 'Summa rörelsekostnader',\n    children: {\n      rawMaterialsConsumables: {\n        title: 'Råvaror och förnödenheter',\n        accountRange: [4000, 4999],\n      },\n      otherExternalExpenses: {\n        title: 'Övriga externa kostnader',\n        accountRange: [5000, 6999],\n      },\n      staffCosts: {\n        title: 'Personalkostnader',\n        accountRange: [7000, 7699],\n      },\n      writeDownsReversalOfWriteDowns: {\n        title: 'Nedskrivningar och återföring av nedskrivningar',\n        accountRange: [7700, 7799],\n      },\n      depreciationAccordingToPlan: {\n        title: 'Avskrivningar enligt plan',\n        accountRange: [7800, 7899],\n      },\n      otherOperatingExpenses: {\n        title: 'Övriga rörelsekostnader',\n        accountRange: [7900, 7999],\n      },\n    },\n  },\n  financialPosts: {\n    title: 'Finansiella poster',\n    sumTitle: 'Summa finansiella poster',\n    children: {\n      profitParticipationsGroupCompanies: {\n        title: 'Resultat från andelar i koncernbolag',\n        accountRange: [8000, 8099],\n      },\n      profitSharesJointlyControlledCompanies: {\n        title: 'Resultat från andelar i gemensamt styrda företag',\n        accountRange: [8100, 8199],\n      },\n      profitOtherFinancialFixedAssets: {\n        title: 'Resultat från övriga finansiella anläggningstillgångar',\n        accountRange: [8200, 8299],\n      },\n      otherInterestIncomeAndSimilarItems: {\n        title: 'Övriga ränteintäkter och liknande resultatposter',\n        accountRange: [8300, 8399],\n      },\n      interestExpensesAndSimilarIncomeItems: {\n        title: 'Räntekostnader och liknande resultatposter',\n        accountRange: [8400, 8499],\n      },\n    },\n  },\n  yearEndDistribution: {\n    title: 'Bokslutsdispositioner',\n    sumTitle: 'Summa bokslutsdispositioner',\n    children: {\n      changeInAccruals: {\n        title:\n          'Förändring av periodiseringsfonder för juridisk person och enskild näringsidkare',\n        accountRange: [8810, 8819],\n      },\n      appropriationsAllCompanyForms: {\n        title: 'Bokslutsdispositioner för samtliga företagsformer',\n        accountRange: [8820, 8899],\n      },\n    },\n  },\n  taxes: {\n    title: 'Skatter',\n    sumTitle: '',\n    children: {\n      taxesYearProfit: {\n        title: 'Skatter på årets resultat',\n        accountRange: [8910, 8999],\n      },\n    },\n  },\n  operatingProfit: {\n    title: 'Rörelseresultat',\n    sumTitle: '',\n    children: {},\n  },\n  financialProfit: {\n    title: 'Resultat efter finansiella poster',\n    sumTitle: '',\n    children: {},\n  },\n  profitBeforeTaxes: {\n    title: 'Resultat före skatt',\n    sumTitle: '',\n    children: {},\n  },\n  yearResult: {\n    title: 'Årets resultat',\n    sumTitle: '',\n    children: {},\n  },\n};\n\nexport type { ResultSectionInterface, ResultSectionsInterface };\nexport default resultSections;\n","import resultSections, {\n  ResultSectionsInterface,\n} from '../info/resultSectionsData';\nimport type { Accounts, Result, Sum } from './interfaces';\n\nfunction sumSection(\n  accounts: Accounts,\n  section: keyof ResultSectionsInterface\n): Sum {\n  return Object.entries(accounts).reduce(\n    (sum, [accountId, account]) => {\n      const accountNumber = Number(accountId);\n      const resultRow = Object.entries(resultSections[section].children).find(\n        ([\n          ,\n          {\n            accountRange: [min, max],\n          },\n        ]) => {\n          if (accountNumber >= min && accountNumber <= max) return true;\n          return false;\n        }\n      );\n      if (!resultRow) return sum;\n\n      const resultRowIdentifier = resultRow[0];\n      const resultRowReference = sum.children[resultRowIdentifier];\n      return {\n        current: sum.current + account.currentBalance,\n        previous: sum.previous + account.previousBalance,\n        children: {\n          ...sum.children,\n          [resultRowIdentifier]: {\n            current: resultRowReference.current + account.currentBalance,\n            previous: resultRowReference.previous + account.previousBalance,\n          },\n        },\n      };\n    },\n    {\n      current: 0,\n      previous: 0,\n      children: Object.fromEntries(\n        Object.keys(resultSections[section].children).map((title) => [\n          title,\n          { current: 0, previous: 0 },\n        ])\n      ),\n    }\n  );\n}\n\nfunction sumSums(sums: Sum[]): Sum {\n  return sums.reduce((sum, { current, previous }) => ({\n    current: current + sum.current,\n    previous: previous + sum.previous,\n    children: {},\n  }));\n}\n\nfunction calculateResults(accounts: Accounts): Result {\n  const operatingIncome = sumSection(accounts, 'operatingIncome');\n  const operatingCosts = sumSection(accounts, 'operatingCosts');\n  const financialPosts = sumSection(accounts, 'financialPosts');\n  const yearEndDistribution = sumSection(accounts, 'yearEndDistribution');\n  const taxes = sumSection(accounts, 'taxes');\n\n  const operatingProfit = sumSums([operatingIncome, operatingCosts]);\n  const financialProfit = sumSums([operatingProfit, financialPosts]);\n  const profitBeforeTaxes = sumSums([financialProfit, yearEndDistribution]);\n  const yearResult = sumSums([profitBeforeTaxes, taxes]);\n\n  return {\n    operatingIncome,\n    operatingCosts,\n    financialPosts,\n    yearEndDistribution,\n    taxes,\n    operatingProfit,\n    financialProfit,\n    profitBeforeTaxes,\n    yearResult,\n  };\n}\n\nexport default calculateResults;\n","interface BalanceSectionInterface {\n  title: string;\n  sumTitle: string;\n  children: {\n    [resultRowIdentifier: string]: {\n      title: string;\n      accountRange: [number, number];\n    };\n  };\n}\n\ninterface BalanceAssetsSectionsInterface {\n  ipFixedAssets: BalanceSectionInterface;\n  materialFixedAssets: BalanceSectionInterface;\n  financialFixedAssets: BalanceSectionInterface;\n  productStock: BalanceSectionInterface;\n  accountsReceivable: BalanceSectionInterface;\n  otherShortClaims: BalanceSectionInterface;\n  prepaidCostsAndDelayedIncome: BalanceSectionInterface;\n  shortPlacements: BalanceSectionInterface;\n  CashAndBankBalances: BalanceSectionInterface;\n  fixedAssets: BalanceSectionInterface;\n  currentAssets: BalanceSectionInterface;\n  totalAssts: BalanceSectionInterface;\n}\n\nconst balanceAssetsSections: BalanceAssetsSectionsInterface = {\n  ipFixedAssets: {\n    title: 'Immateriella Anläggningstillgångar',\n    sumTitle: 'Summa Immateriella Anläggningstillgångar',\n    children: {\n      patents: {\n        title: 'Patent och Licenser',\n        accountRange: [1020, 1059],\n      },\n      tenancy: {\n        title: 'Hyresrätt och liknande rättigheter',\n        accountRange: [1060, 1069],\n      },\n      goodwill: {\n        title: 'Hyresrätt och liknande rättigheter',\n        accountRange: [1070, 1079],\n      },\n      fees: {\n        title: 'Patent och Licenser',\n        accountRange: [1080, 1087],\n      },\n      prepaidPatentFees: {\n        title: 'Förskott avseende immateriella anläggningstillgångar',\n        accountRange: [1088, 1088],\n      },\n    },\n  },\n  materialFixedAssets: {\n    title: 'Materiella Anläggningstillgångar',\n    sumTitle: 'Summa Materiella Anläggningstillgångar',\n    children: {\n      buildingsAndProperties: {\n        title: 'Byggnader och mark',\n        accountRange: [1100, 1119],\n      },\n      costOnOthersProperty: {\n        title: 'Förbättringsutgifter på annans fastighet',\n        accountRange: [1120, 1129],\n      },\n      buildingsAndProperties2: {\n        title: 'Byggnader och mark',\n        accountRange: [1130, 1179],\n      },\n      activeOrPrepaidProperties: {\n        title:\n          'Pågående nyanläggningar och förskott avseende materiella anläggningstillgångar',\n        accountRange: [1180, 1189],\n      },\n      buildingsAndProperties3: {\n        title: 'Byggnader och mark',\n        accountRange: [1190, 1199],\n      },\n      machines: {\n        title: 'Maskiner och andra tekniska anläggningar',\n        accountRange: [1210, 1219],\n      },\n      inventoryAndTools: {\n        title: 'Inventarier, verktyg och installationer',\n        accountRange: [1220, 1259],\n      },\n      inventoryAndTools2: {\n        title: 'Inventarier, verktyg och installationer',\n        accountRange: [1261, 1279],\n      },\n      otherFixedAssets: {\n        title: 'Övriga materiella anläggningstillgångar',\n        accountRange: [1290, 1299],\n      },\n    },\n  },\n  financialFixedAssets: {\n    title: 'Finansiella Anläggningstillgångar',\n    sumTitle: 'Summa Finansiella Anläggningstillgångar',\n    children: {\n      groupStocks: {\n        title: 'Andelar i koncernföretag',\n        accountRange: [1310, 1319],\n      },\n      claimGroupCompany: {\n        title: 'Fordringar hos koncernföretag',\n        accountRange: [1320, 1329],\n      },\n      stockCompanyOfInterest: {\n        title: 'Andelar i intresseföretag och gemensamt styrda företag',\n        accountRange: [1330, 1335],\n      },\n      interetsInOtherCompanies: {\n        title: 'Ägarintressen i övriga företag',\n        accountRange: [1336, 1337],\n      },\n      stocksCompanyOfInterest2: {\n        title: 'Andelar i intresseföretag och gemensamt styrda företag',\n        accountRange: [1338, 1339],\n      },\n      claimInteretsCompany: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [1340, 1345],\n      },\n      claimOtherCompaniesOfInterest: {\n        title: 'Fordringar hos övriga företag som det finns ett ägarintresse',\n        accountRange: [1346, 1347],\n      },\n      claimInteretsCompany2: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [1348, 1349],\n      },\n      otherLongSecurities: {\n        title: 'Andra långfristiga värdepappersinnehav',\n        accountRange: [1350, 1359],\n      },\n      loanToOwner: {\n        title: 'Lån till delägare eller närstående',\n        accountRange: [1360, 1369],\n      },\n      otherLongClaims: {\n        title: 'Andra långfristiga fordringar',\n        accountRange: [1380, 1389],\n      },\n    },\n  },\n  fixedAssets: {\n    title: undefined,\n    sumTitle: 'Totalt anläggningstillgångar',\n    children: {},\n  },\n  productStock: {\n    title: 'Lager, produkter i arbete och pågående arbeten',\n    sumTitle: 'Summa tillgångar, lagerförändringar m.m.',\n    children: {\n      rawMaterials: {\n        title: 'Råvaror och förnödenheter',\n        accountRange: [1410, 1431],\n      },\n      materialsUnderManufacturing: {\n        title: 'Varor under tillverkning',\n        accountRange: [1432, 1437],\n      },\n      rawMaterials2: {\n        title: 'Råvaror och förnödenheter',\n        accountRange: [1438, 1438],\n      },\n      materialsUnderManufacturing2: {\n        title: 'Varor under tillverkning',\n        accountRange: [1439, 1449],\n      },\n      doneMaterials: {\n        title: 'Färdiga varor och handelsvaror',\n        accountRange: [1450, 1469],\n      },\n      activeWorkForOthers: {\n        title: 'Pågående arbete för annans räkning',\n        accountRange: [1470, 1479],\n      },\n      prepaidInvoice: {\n        title: 'Förskott till leverantörer',\n        accountRange: [1480, 1489],\n      },\n      otherStockAssets: {\n        title: 'Övriga lagertillgångar',\n        accountRange: [1490, 1499],\n      },\n    },\n  },\n\n  accountsReceivable: {\n    title: 'Kundfordringar',\n    sumTitle: 'Summa kundfordringar',\n    children: {\n      accountsReceivable: {\n        title: 'Kundfordringar',\n        accountRange: [1500, 1559],\n      },\n      claimGroupCompany: {\n        title: 'Fordringar hos koncernföretag',\n        accountRange: [1560, 1569],\n      },\n      claimGroupCompany2: {\n        title: 'Fordringar hos koncernföretag',\n        accountRange: [1660, 1669],\n      },\n      claimCompanyOfInterest: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [1570, 1572],\n      },\n      claimCompanyOfInterest2: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [1670, 1672],\n      },\n      claimOtherCompanies: {\n        title: 'Fordringar hos övriga företag som det finns ett ägarintresse i',\n        accountRange: [1573, 1573],\n      },\n      claimOtherCompanies2: {\n        title: 'Fordringar hos övriga företag som det finns ett ägarintresse i',\n        accountRange: [1673, 1673],\n      },\n      claimCompanyOfInterest3: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [1574, 1579],\n      },\n      claimCompanyOfInterest4: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [1674, 1679],\n      },\n      OtherClaims: {\n        title: 'Övriga fordringar',\n        accountRange: [1590, 1619],\n      },\n      OtherClaims2: {\n        title: 'Övriga fordringar',\n        accountRange: [1630, 1659],\n      },\n      OtherClaims3: {\n        title: 'Övriga fordringar',\n        accountRange: [1680, 1689],\n      },\n    },\n  },\n  otherShortClaims: {\n    title: 'Förutbetalda kostnader och upplupna intäkter',\n    sumTitle: 'Summa Förutbetalda kostnader och upplupna intäkter',\n    children: {\n      NotYetInvoiced: {\n        title: 'Upparbetad men ej fakturerad intäkt',\n        accountRange: [1620, 1629],\n      },\n      tenancy: {\n        title: 'Tecknat men ej inbetalat kapital',\n        accountRange: [1690, 1699],\n      },\n    },\n  },\n  prepaidCostsAndDelayedIncome: {\n    title: 'Övriga kortfristiga fordringar',\n    sumTitle: 'Summa Övriga kortfristiga fordringar',\n    children: {\n      prepaidCostsAndDelayedIncome: {\n        title: 'Förutbetalda kostnader och upplupna intäkter',\n        accountRange: [1700, 1799],\n      },\n    },\n  },\n  shortPlacements: {\n    title: 'Kortfristiga placeringar',\n    sumTitle: 'Summa Kortfristiga placeringar',\n    children: {\n      otherShortSecurities: {\n        title: 'Övriga kortfristiga placeringar',\n        accountRange: [1800, 1859],\n      },\n      stocksGroupCompany: {\n        title: 'Andelar i koncernföretag',\n        accountRange: [1860, 1869],\n      },\n      otherShortSecurities2: {\n        title: 'Övriga kortfristiga placeringar',\n        accountRange: [1870, 1899],\n      },\n    },\n  },\n  CashAndBankBalances: {\n    title: 'Kassa och bank',\n    sumTitle: 'Summa Kassa och bank',\n    children: {\n      cashAndBank: {\n        title: 'Kassa och bank',\n        accountRange: [1900, 1989],\n      },\n      tenancy: {\n        title: 'Redovisningsmedel',\n        accountRange: [1990, 1999],\n      },\n    },\n  },\n  currentAssets: {\n    title: undefined,\n    sumTitle: 'Totalt Omsättningstillgångar',\n    children: {},\n  },\n  totalAssts: {\n    title: undefined,\n    sumTitle: 'Totalt tillgångar',\n    children: {},\n  },\n};\n\nexport type { BalanceSectionInterface, BalanceAssetsSectionsInterface };\n\nexport default balanceAssetsSections;\n","interface BalanceSectionInterface {\n  title: string;\n  sumTitle: string;\n  children: {\n    [resultRowIdentifier: string]: {\n      title: string;\n      accountRange: [number, number];\n    };\n  };\n}\n\ninterface BalanceSectionsEquityInterface {\n  equity: BalanceSectionInterface;\n  liabilities: BalanceSectionInterface;\n  // estimatedResult: BalanceSectionInterface\n}\n\nconst balanceEquitySections: BalanceSectionsEquityInterface = {\n  equity: {\n    title: 'Eget kapital',\n    sumTitle: 'Summa eget kapital',\n    children: {\n      ShareCapital: {\n        title: 'Aktiekapital',\n        accountRange: [2081, 2081],\n      },\n      unRegistredShareCapital: {\n        title: 'Ej registrerat aktiekapital',\n        accountRange: [2082, 2082],\n      },\n      ShareCapital2: {\n        title: 'Aktiekapital',\n        accountRange: [2083, 2084],\n      },\n      revalueFond: {\n        title: 'Uppskrivningsfond',\n        accountRange: [2085, 2085],\n      },\n      reserveFond: {\n        title: 'Reservfond',\n        accountRange: [2086, 2086],\n      },\n      fixedOverFond: {\n        title: 'Bunden överkursfond',\n        accountRange: [2087, 2087],\n      },\n      balancedResult: {\n        title: 'Balanserat resultat',\n        accountRange: [2090, 2091],\n      },\n      balancedResult2: {\n        title: 'Balanserat resultat',\n        accountRange: [2093, 2095],\n      },\n      balancedResult3: {\n        title: 'Balanserat resultat',\n        accountRange: [2098, 2098],\n      },\n      freeUpFond: {\n        title: 'Balanserat resultat',\n        accountRange: [2097, 2097],\n      },\n      periodFond: {\n        title: 'Periodiseringsfonder',\n        accountRange: [2110, 2149],\n      },\n      ackumilatedWriteOffs: {\n        title: 'Ackumulerade överavskrivningar',\n        accountRange: [2150, 2159],\n      },\n      untaxedReserves: {\n        title: 'Övriga obeskattade reserver',\n        accountRange: [2160, 2199],\n      },\n      pensions: {\n        title:\n          'Avsättningar för pensioner och liknande förpliktelser enligt lagen (1967:531) om tryggande av pensionsutfästelse m.m.',\n        accountRange: [2210, 2219],\n      },\n      otherSavings: {\n        title: 'Övriga avsättningar',\n        accountRange: [2220, 2229],\n      },\n      otherPensions: {\n        title: 'Övriga avsättningar för pensioner och liknande förpliktelser',\n        accountRange: [2220, 2229],\n      },\n      otherSavings2: {\n        title: 'Övriga avsättningar',\n        accountRange: [2230, 2239],\n      },\n    },\n  },\n  liabilities: {\n    title: 'Skulder',\n    sumTitle: 'Summa skulder',\n    children: {\n      obligationLoan: {\n        title: 'Obligationslån',\n        accountRange: [2310, 2329],\n      },\n      checkCredit: {\n        title: 'Checkräkningskredit',\n        accountRange: [2330, 2339],\n      },\n      otherDebtToInstitute: {\n        title: 'Övriga skulder till kreditinstitut',\n        accountRange: [2340, 2359],\n      },\n      debtToGroupCompnay: {\n        title: 'Skulder till koncernföretag',\n        accountRange: [2360, 2369],\n      },\n      debtToCompanyOfInterest: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [2370, 2372],\n      },\n      debtToOtherCompaniesOfInterest: {\n        title: 'Skulder till övriga företag som det finns ett ägarintresse i',\n        accountRange: [2373, 2373],\n      },\n      debtToCompanyOfInterest2: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [2374, 2379],\n      },\n      otherDebts: {\n        title: 'Övriga skulder',\n        accountRange: [2390, 2399],\n      },\n      otherDebtToInstitutes: {\n        title: 'Övriga skulder till kreditinstitut',\n        accountRange: [2410, 2419],\n      },\n      prepaidCustomerInvoice: {\n        title: 'Förskott från kunder',\n        accountRange: [2420, 2429],\n      },\n      onGoingWorkForOther: {\n        title: 'Pågående arbete för annans räkning',\n        accountRange: [2430, 2439],\n      },\n      accountsPayable: {\n        title: 'Leverantörsskulder',\n        accountRange: [2440, 2449],\n      },\n      invoicedNotYetWorked: {\n        title: 'Fakturerad men ej upparbetad intäkt',\n        accountRange: [2450, 2459],\n      },\n      debtGroupCompany: {\n        title: 'Skulder till koncernföretag',\n        accountRange: [2460, 2469],\n      },\n      debtCompanyOfInterest: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [2470, 2472],\n      },\n      debtOtherCompanyOfInterest: {\n        title: 'Skulder till övriga företag som det finns ett ägarintresse i',\n        accountRange: [2473, 2473],\n      },\n      debtCompanyOfInterest2: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [2474, 2479],\n      },\n      checkCreditCount: {\n        title: 'Checkräkningskredit',\n        accountRange: [2480, 2489],\n      },\n      otherDebt: {\n        title: 'Övriga skulder',\n        accountRange: [2490, 2491],\n      },\n      changeDebt: {\n        title: 'Växelskulder',\n        accountRange: [2492, 2492],\n      },\n      otherDebt2: {\n        title: 'Övriga skulder',\n        accountRange: [2493, 2499],\n      },\n      taxDebt: {\n        title: 'Skatteskulder',\n        accountRange: [2500, 2599],\n      },\n      otherDebt3: {\n        title: 'Övriga skulder',\n        accountRange: [2600, 2799],\n      },\n      otherDebt4: {\n        title: 'Övriga skulder',\n        accountRange: [2810, 2859],\n      },\n      debtGroupCompany2: {\n        title: 'Skulder till koncernföretag',\n        accountRange: [2860, 2869],\n      },\n      debtCompanyOfInterest3: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [2870, 2872],\n      },\n      debtOtherCompanyOfInterest2: {\n        title: 'Skulder till övriga företag som det finns ett ägarintresse i',\n        accountRange: [2873, 2873],\n      },\n      debtCompanyOfInterest4: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [2874, 2879],\n      },\n      otherDebt5: {\n        title: 'Övriga skulder',\n        accountRange: [2880, 2899],\n      },\n      preiodCostAndIncome: {\n        title: 'Upplupna kostnader och förutbetalda intäkter',\n        accountRange: [2900, 2999],\n      },\n    },\n  },\n  // estimatedResult: {\n  //   title: undefined,\n  //   sumTitle: 'Beräknat resultat',\n  //   children: {},\n  // },\n};\n\nexport type { BalanceSectionInterface, BalanceSectionsEquityInterface };\n\nexport default balanceEquitySections;\n","import balanceAssetsSections, {\n  BalanceAssetsSectionsInterface,\n} from '../info/balanceSectionsAssetsData';\nimport balanceEquitySections, {\n  BalanceSectionsEquityInterface,\n} from '../info/balanceSectionEquityData';\nimport type { Accounts, Result, Sum } from './interfaces';\n\nfunction sumAssetsSection(\n  accounts: Accounts,\n  section: keyof BalanceAssetsSectionsInterface\n): Sum {\n  return Object.entries(accounts).reduce(\n    (sum, [accountId, account]) => {\n      const accountNumber = Number(accountId);\n      const balanceRow = Object.entries(\n        balanceAssetsSections[section].children\n      ).find(\n        ([\n          ,\n          {\n            accountRange: [min, max],\n          },\n        ]) => {\n          if (accountNumber >= min && accountNumber <= max) return true;\n          return false;\n        }\n      );\n      if (!balanceRow) return sum;\n\n      const balanceRowIdentifier = balanceRow[0];\n      const resultRowReference = sum.children[balanceRowIdentifier];\n      return {\n        current: sum.current + account.currentBalance,\n        previous: sum.previous + account.previousBalance,\n        children: {\n          ...sum.children,\n          [balanceRowIdentifier]: {\n            current: resultRowReference.current + account.currentBalance,\n            previous: resultRowReference.previous + account.previousBalance,\n          },\n        },\n      };\n    },\n    {\n      current: 0,\n      previous: 0,\n      children: Object.fromEntries(\n        Object.keys(balanceAssetsSections[section].children).map((title) => [\n          title,\n          { current: 0, previous: 0 },\n        ])\n      ),\n    }\n  );\n}\n\nfunction sumSums(sums: Sum[]): Sum {\n  return sums.reduce((sum, { current, previous }) => ({\n    current: current + sum.current,\n    previous: previous + sum.previous,\n    children: {},\n  }));\n}\n\nfunction calculateBalanceAssets(accounts: Accounts): Result {\n  const CashAndBankBalances = sumAssetsSection(accounts, 'CashAndBankBalances');\n  const accountsReceivable = sumAssetsSection(accounts, 'accountsReceivable');\n  const financialFixedAssets = sumAssetsSection(\n    accounts,\n    'financialFixedAssets'\n  );\n  const ipFixedAssets = sumAssetsSection(accounts, 'ipFixedAssets');\n  const materialFixedAssets = sumAssetsSection(accounts, 'materialFixedAssets');\n  const otherShortClaims = sumAssetsSection(accounts, 'otherShortClaims');\n  const prepaidCostsAndDelayedIncome = sumAssetsSection(\n    accounts,\n    'prepaidCostsAndDelayedIncome'\n  );\n  const productStock = sumAssetsSection(accounts, 'productStock');\n  const shortPlacements = sumAssetsSection(accounts, 'shortPlacements');\n\n  const fixedAssets = sumSums([\n    financialFixedAssets,\n    ipFixedAssets,\n    materialFixedAssets,\n  ]);\n\n  const currentAssets = sumSums([\n    CashAndBankBalances,\n    accountsReceivable,\n    otherShortClaims,\n    prepaidCostsAndDelayedIncome,\n    productStock,\n    shortPlacements,\n  ]);\n\n  const totalAssts = sumSums([fixedAssets, currentAssets]);\n\n  return {\n    fixedAssets,\n    currentAssets,\n    shortPlacements,\n    productStock,\n    prepaidCostsAndDelayedIncome,\n    otherShortClaims,\n    materialFixedAssets,\n    ipFixedAssets,\n    financialFixedAssets,\n    accountsReceivable,\n    CashAndBankBalances,\n    totalAssts,\n  };\n}\n\nfunction sumEquitySection(\n  accounts: Accounts,\n  section: keyof BalanceSectionsEquityInterface\n): Sum {\n  return Object.entries(accounts).reduce(\n    (sum, [accountId, account]) => {\n      const accountNumber = Number(accountId);\n      const balanceRow = Object.entries(\n        balanceEquitySections[section].children\n      ).find(\n        ([\n          ,\n          {\n            accountRange: [min, max],\n          },\n        ]) => {\n          if (accountNumber >= min && accountNumber <= max) return true;\n          return false;\n        }\n      );\n      if (!balanceRow) return sum;\n\n      const balanceRowIdentifier = balanceRow[0];\n      const resultRowReference = sum.children[balanceRowIdentifier];\n      return {\n        current: sum.current + account.currentBalance,\n        previous: sum.previous + account.previousBalance,\n        children: {\n          ...sum.children,\n          [balanceRowIdentifier]: {\n            current: resultRowReference.current + account.currentBalance,\n            previous: resultRowReference.previous + account.previousBalance,\n          },\n        },\n      };\n    },\n    {\n      current: 0,\n      previous: 0,\n      children: Object.fromEntries(\n        Object.keys(balanceEquitySections[section].children).map((title) => [\n          title,\n          { current: 0, previous: 0 },\n        ])\n      ),\n    }\n  );\n}\n\nfunction calculateBalanceEquity(accounts: Accounts): Result {\n  const liabilities = sumEquitySection(accounts, 'liabilities');\n  const equity = sumEquitySection(accounts, 'equity');\n\n  return {\n    liabilities,\n    equity,\n  };\n}\n\nexport { calculateBalanceEquity, calculateBalanceAssets as default };\n","import { observer } from 'mobx-react-lite';\nimport Dropzone from 'react-dropzone';\nimport styled from 'styled-components';\nimport useStore from '../hooks/useStore';\nimport fileReader from '../functions/fileReader';\nimport extractCompanyFromSie from '../functions/extractCompanyFromSie';\nimport calculateResults from '../functions/calculateResults';\nimport calculateBalanceAssets, {\n  calculateBalanceEquity,\n} from '../functions/calculateBalances';\n\nconst DropArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30vh;\n  text-align: center;\n  background-color: #918686;\n  border-radius: 8px;\n`;\n\nconst DropFile = observer(() => {\n  const { companyStore } = useStore();\n  const handleOnDrop = async (acceptedFiles: File[]) => {\n    const sieText = await fileReader(acceptedFiles[0]);\n    const company = extractCompanyFromSie(sieText);\n    company.result = calculateResults(company.accounts);\n    company.balance.assets = calculateBalanceAssets(company.accounts);\n    company.balance.equity = calculateBalanceEquity(company.accounts);\n    companyStore.hydrate(company);\n    localStorage.setItem('companyInfo', JSON.stringify(company));\n  };\n\n  return (\n    <Dropzone onDrop={handleOnDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <DropArea {...getRootProps()}>\n          <input {...getInputProps()} />\n          <p>Släpp din SIE-fil här för att ladda upp filen.</p>\n        </DropArea>\n      )}\n    </Dropzone>\n  );\n});\n\nexport default DropFile;\n","import { Card, styled, Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { observer } from 'mobx-react-lite';\nimport DropArea from '../../components/DropArea';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n  gap: 2rem;\n  margin-top: 2rem;\n  padding: 6rem;\n`;\n\nconst LoadSie = observer(() => {\n  const { companyStore } = useStore();\n\n  return (\n    <Page>\n      <DropArea />\n\n      <StyledCard>\n        {companyStore.isReady && (\n          <>\n            <Typography variant=\"h3\">\n              {companyStore.company.info.name}\n            </Typography>\n            <Typography variant=\"h4\">\n              {companyStore.company.info.registrationNumber}\n            </Typography>\n          </>\n        )}\n        <StyledNavLink disabled={!companyStore.isReady} to=\"/fiscal-year\">\n          <Button disabled={!companyStore.isReady} variant=\"contained\">\n            Fortsätt\n          </Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n});\n\nexport default LoadSie;\n","import { Card as MuiCard, CardProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst Card = styled(MuiCard)<CardProps>(() => ({\n  padding: '32px',\n}));\n\nexport default Card;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ninterface IProps {\n  subTitle: string;\n  current?: string;\n  previous?: string;\n  children?: React.ReactNode;\n}\n\nconst SubTitle = ({ subTitle, children, current, previous }: IProps) => (\n  <Grid mb={12} container columnGap={50}>\n    <Grid pt={12} xs={3} item alignSelf=\"center\">\n      <Typography variant=\"h4\">{subTitle}</Typography>\n    </Grid>\n    <Grid pt={12} item xs={3} container>\n      <Typography variant=\"h5\">{current || children}</Typography>\n    </Grid>\n    {previous && (\n      <Grid pt={12} item xs={3} container>\n        <Typography variant=\"h5\">{previous}</Typography>\n      </Grid>\n    )}\n  </Grid>\n);\n\nexport default SubTitle;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ntype Props = {\n  subTitle?: string;\n  isBold?: boolean;\n  isSum?: boolean;\n  isBig?: boolean;\n  isNoBorder?: boolean;\n  current?: React.ReactNode;\n  previous?: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nconst MultiRow = ({\n  subTitle,\n  isBold,\n  isSum,\n  isNoBorder,\n  current,\n  previous,\n  isBig,\n  children,\n}: Props) => (\n  <Grid mb={12} container columnGap={50}>\n    <Grid pt={4} pl={!isSum && 12} xs={3} item alignSelf=\"center\">\n      {isBig ? (\n        <Typography variant=\"h6\" alignSelf=\"center\" fontWeight={isBold && 900}>\n          {subTitle}\n        </Typography>\n      ) : (\n        subTitle && (\n          <Typography alignSelf=\"center\" fontWeight={isBold && 900}>\n            {subTitle}\n          </Typography>\n        )\n      )}\n    </Grid>\n\n    <Grid\n      pt={8}\n      alignSelf=\"center\"\n      item\n      xs={3}\n      borderTop={isSum && !isNoBorder && '1px solid gray'}\n      container\n    >\n      {current || children}\n    </Grid>\n    {previous && (\n      <Grid\n        pt={8}\n        item\n        xs={3}\n        borderTop={isSum && !isNoBorder && '1px solid gray'}\n        container\n      >\n        {previous}\n      </Grid>\n    )}\n  </Grid>\n);\n\nexport default MultiRow;\n","import { ToggleButton, ToggleButtonGroup } from '@mui/material';\nimport { FieldProps } from 'formik';\nimport { useCallback, useEffect, useState } from 'react';\n\nconst YES = 'Ja';\nconst NO = 'Nej';\n\ninterface IProps {\n  field: FieldProps;\n  initialValue?: string;\n}\n\nexport const YesOrNo = ({\n  field: { name, value = false },\n  form: { setFieldValue },\n}: FieldProps) => {\n  useEffect(() => {\n    setFieldValue(name, value);\n  }, []);\n\n  const handleChange = useCallback((_, newValue) => {\n    if (typeof newValue !== 'boolean') return;\n    setFieldValue(name, newValue);\n  }, []);\n\n  return (\n    <ToggleButtonGroup\n      color=\"primary\"\n      value={value}\n      exclusive\n      onChange={handleChange}\n    >\n      <ToggleButton value={true}>{YES}</ToggleButton>\n      <ToggleButton value={false}>{NO}</ToggleButton>\n    </ToggleButtonGroup>\n  );\n};\n","import { styled, TextareaAutosize, TextField } from '@mui/material';\nimport { Field, useFormikContext } from 'formik';\nimport { useEffect } from 'react';\nimport MultiRow from '../../components/MultiRow';\nimport { YesOrNo } from '../../components/YesOrNo';\nimport { NOTES } from './NotesPage';\n\ninterface IProps {\n  title: string;\n  children?: React.ReactNode;\n  noteKey: string;\n}\n\nconst WhiteTextField = styled(TextField)({\n  backgroundColor: 'white',\n});\n\nexport const NoteContent = ({ noteKey, title }: IProps) => {\n  const { setFieldValue } = useFormikContext();\n  useEffect(() => {\n    return () => {\n      setFieldValue(noteKey, undefined);\n    };\n  }, []);\n\n  const renderAdditionals = () => {\n    switch (title) {\n      case NOTES.accountingPrinciples.title:\n        return (\n          <>\n            <MultiRow\n              isBig\n              isBold\n              isSum\n              isNoBorder\n              subTitle=\"Tjänste- och entreprenaduppdrag\"\n            />\n            <MultiRow\n              isBig\n              isSum\n              isNoBorder\n              subTitle=\"Utför företaget tjänste- och/eller entreprenaduppdrag till fast pris?\"\n              current={\n                <Field\n                  name={`${noteKey}.hasFixedPriceAssignments`}\n                  component={YesOrNo}\n                />\n              }\n            />\n            <MultiRow\n              isBig\n              isBold\n              isSum\n              isNoBorder\n              subTitle=\"Egentillverkade varor\"\n            />\n            <MultiRow\n              isBig\n              isSum\n              isNoBorder\n              subTitle=\"Tillverkar företaget egna varor?\"\n              current={\n                <Field\n                  name={`${noteKey}.hasSelfMadeGoods`}\n                  component={YesOrNo}\n                />\n              }\n            />\n          </>\n        );\n      case NOTES.averageAmountEmployees.title:\n        return (\n          <MultiRow\n            isBig\n            isSum\n            isNoBorder\n            subTitle=\"Medelantal anställda under året *\"\n            current={<Field name={`${noteKey}.amount`} as={WhiteTextField} />}\n          />\n        );\n    }\n  };\n\n  return (\n    <>\n      {renderAdditionals()}\n      <MultiRow isSum isNoBorder isBig subTitle=\"Kommentarer\">\n        <Field\n          name={`${noteKey}.comment`}\n          as={TextareaAutosize}\n          cols={50}\n          minRows={5}\n          minLength={200}\n        />\n      </MultiRow>\n    </>\n  );\n};\n","import {\n  Checkbox,\n  Chip,\n  FormControl,\n  Grid,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  SelectChangeEvent,\n} from '@mui/material';\nimport { NOTES } from './NotesPage';\n\ninterface IProps {\n  value: string[];\n  onChange: (event: SelectChangeEvent<string[]>) => void;\n}\n\nexport const NotesSelector = ({ value, onChange }: IProps) => {\n  return (\n    <FormControl sx={{ minWidth: '250px', maxWidth: '50%' }}>\n      <InputLabel id=\"notes-selector\">Välj noter</InputLabel>\n      <Select\n        labelId=\"notes-selector\"\n        multiple\n        input={<OutlinedInput label=\"Välj noter\" />}\n        value={value}\n        onChange={onChange}\n        renderValue={(selected) => (\n          <Grid container spacing={6}>\n            {selected.map((value) => (\n              <Grid item key={value}>\n                <Chip label={value} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      >\n        {Object.entries(NOTES).map(([key, { title }]) => (\n          <MenuItem key={key} value={title}>\n            <Checkbox checked={value.includes(title)} />\n            <ListItemText primary={title} />\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import { Grid, Paper, Typography } from '@mui/material';\n\ninterface IProps {\n  title: string;\n  children?: React.ReactNode;\n}\n\nexport const NoteWrapper = ({ title, children }: IProps) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{ padding: '24px', backgroundColor: '#f3f0f0', marginTop: '24px' }}\n    >\n      <>\n        <Grid container spacing={75}>\n          <Grid item>\n            <Typography variant=\"h5\" component=\"span\">\n              {title}\n            </Typography>\n          </Grid>\n        </Grid>\n        {children}\n      </>\n    </Paper>\n  );\n};\n","import { Box, Button, SelectChangeEvent } from '@mui/material';\nimport { Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport { useCallback, useState } from 'react';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport SubTitle from '../../components/SubTitle';\nimport { Notes } from '../../functions/interfaces';\nimport useStore from '../../hooks/useStore';\nimport { NoteContent } from './NoteContent';\nimport { NotesSelector } from './NotesSelector';\nimport { NoteWrapper } from './NoteWrapper';\n\nexport const NOTES: Record<keyof Notes, { title: string }> = {\n  accountingPrinciples: {\n    title: 'Redovisningsprinciper',\n  },\n  averageAmountEmployees: {\n    title: 'Medelantal anställda',\n  },\n  providedCollateral: {\n    title: 'Ställda säkerheter',\n  },\n  contingentLiabilities: {\n    title: 'Eventualförpliktelser',\n  },\n  exceptionalIncomeExpenses: {\n    title: 'Exceptionella intäkter och kostnader',\n  },\n  assetsProvisionsLiabilities: {\n    title: 'Tillgångar, avsättningar och skulder som avser flera poster',\n  },\n  financialArrangements: {\n    title: 'Ekonomiska arrangemang som inte redovisas i balansräkningen',\n  },\n  otherComments: {\n    title: 'Övriga kommentarer',\n  },\n};\n\nconst titleToKey = Object.entries(NOTES).reduce(\n  (acc, [key, { title }]) => ({\n    ...acc,\n    [title]: key,\n  }),\n  {}\n);\n\nconst NotesPage = observer(() => {\n  const { companyStore } = useStore();\n  const [selectedNotes, setSelectedNotes] = useState<string[]>([]);\n\n  const handleChange = useCallback(\n    ({ target: { value } }: SelectChangeEvent<typeof selectedNotes>) => {\n      setSelectedNotes(typeof value === 'string' ? value.split(',') : value);\n    },\n    []\n  );\n\n  const handleSubmit = useCallback((data) => {\n    console.log({ data });\n  }, []);\n\n  return (\n    <>\n      <Page>\n        <Card>\n          <SubTitle subTitle=\"Noter\" />\n\n          <NotesSelector value={selectedNotes} onChange={handleChange} />\n\n          <Formik\n            onSubmit={handleSubmit}\n            initialValues={{ ...companyStore.company.notes }}\n          >\n            {({ dirty }) => (\n              <Form>\n                {selectedNotes.map((title) => (\n                  <NoteWrapper key={titleToKey[title]} title={title}>\n                    <NoteContent noteKey={titleToKey[title]} title={title} />\n                  </NoteWrapper>\n                ))}\n\n                <Box mt={12} textAlign=\"center\">\n                  <Button disabled={!dirty} type=\"submit\" variant=\"contained\">\n                    spara\n                  </Button>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n        </Card>\n      </Page>\n\n      <StyledNavLink to=\"/year-story\">\n        <Button variant=\"contained\">Fortsätt</Button>\n      </StyledNavLink>\n    </>\n  );\n});\nexport default NotesPage;\n","export default __webpack_public_path__ + \"static/media/Comfortaa-Light.a5389d8a.ttf\";","export default __webpack_public_path__ + \"static/media/Comfortaa-Bold.c7cb6106.ttf\";","import { Text, StyleSheet } from '@react-pdf/renderer';\n\ninterface IProps {\n  areaOne?: React.ReactNode;\n  areaTwo?: React.ReactNode;\n  areaThree?: React.ReactNode;\n  areaFour?: React.ReactNode;\n  areaFive?: React.ReactNode;\n  border?: boolean;\n}\n\nconst styles = StyleSheet.create({\n  areaOne: {\n    minWidth: '40%',\n    textAlign: 'left',\n    fontSize: '10px',\n  },\n  areaTwo: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaThree: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\nconst Line = ({\n  border,\n  areaOne,\n  areaTwo,\n  areaThree,\n  areaFour,\n  areaFive,\n}: IProps) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '8px',\n        padding: '2px 0px',\n        borderBottom: border && '1px black solid',\n      }}\n    >\n      <Text style={styles.areaOne}>{areaOne}</Text>\n      <Text style={styles.areaTwo}>{areaTwo}</Text>\n      <Text style={styles.areaThree}>{areaThree}</Text>\n      <Text style={styles.areaFour}>{areaFour}</Text>\n      <Text style={styles.areaFive}>{areaFive}</Text>\n    </div>\n  );\n};\n\nexport default Line;\n","import { Text, StyleSheet } from '@react-pdf/renderer';\n\ninterface IProps {\n  areaOne?: React.ReactNode;\n  areaTwo?: React.ReactNode;\n  areaThree?: React.ReactNode;\n  areaFour?: React.ReactNode;\n  areaFive?: React.ReactNode;\n  border?: boolean;\n}\n\nconst styles = StyleSheet.create({\n  areaOne: {\n    fontFamily: 'ComfortaaBold',\n    minWidth: '55%',\n    textAlign: 'left',\n    fontSize: '10px',\n  },\n  areaThree: {\n    width: '13%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '16%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '16%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\nconst ResultLine = (props: IProps) => (\n  <div\n    style={{\n      display: 'flex',\n      flexDirection: 'row',\n      marginTop: '8px',\n      borderBottom: props.border && '1px black solid',\n    }}\n  >\n    <Text style={styles.areaOne}>{props.areaOne}</Text>\n    <Text style={styles.areaThree}>{props.areaThree}</Text>\n    <Text style={styles.areaFour}>{props.areaFour}</Text>\n    <Text style={styles.areaFive}>{props.areaFive}</Text>\n  </div>\n);\n\nexport default ResultLine;\n","import { formatCurrency } from '../../functions/formatting';\nimport type { Result as CompanyResult } from '../../functions/interfaces';\nimport resultSectionsData from '../../info/resultSectionsData';\nimport ResultLine from '../components/resultLine';\n\ninterface IProps {\n  result: CompanyResult;\n}\n\n// eslint-disable-next-line\nconst entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\nconst Result = ({ result }: IProps) => (\n  <>\n    {Object.entries(resultSectionsData).map(([section, sectionData]) => (\n      <ResultLine\n        key={section}\n        areaOne={sectionData.title}\n        areaFour={formatCurrency(result[section].current.toFixed(2))}\n        areaFive={formatCurrency(result[section].previous.toFixed(2))}\n      />\n    ))}\n  </>\n);\n\nexport default Result;\n","import { formatCurrency } from '../../functions/formatting';\nimport type { Balance as CompanyBalance } from '../../functions/interfaces';\nimport balanceAssetsSections from '../../info/balanceSectionsAssetsData';\nimport ResultLine from '../components/resultLine';\n\ninterface IProps {\n  balance: CompanyBalance;\n}\n\n// eslint-disable-next-line\nconst entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\nconst BalanceAssets = ({ balance }: IProps) => (\n  <>\n    {Object.entries(balanceAssetsSections).map(([section, sectionData]) =>\n      balance[section]?.current || balance[section]?.previous ? (\n        <ResultLine\n          border\n          key={section}\n          areaOne={sectionData.title || sectionData.sumTitle}\n          areaFour={formatCurrency(balance[section]?.current?.toFixed(2))}\n          areaFive={formatCurrency(balance[section]?.previous?.toFixed(2))}\n        />\n      ) : null\n    )}\n  </>\n);\nexport default BalanceAssets;\n","import { formatCurrency } from '../../functions/formatting';\nimport type { Balance as CompanyBalance } from '../../functions/interfaces';\nimport balanceEquitySections from '../../info/balanceSectionEquityData';\nimport ResultLine from '../components/resultLine';\n\ninterface IProps {\n  balance: CompanyBalance;\n}\n\n// eslint-disable-next-line\nconst entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\nconst BalanceEquity = ({ balance }: IProps) => (\n  <>\n    {Object.entries(balanceEquitySections).map(([section, sectionData]) =>\n      balance[section]?.current || balance[section]?.previous ? (\n        <ResultLine\n          border\n          key={section}\n          areaOne={sectionData.title || sectionData.sumTitle}\n          areaFour={formatCurrency(balance[section]?.current?.toFixed(2))}\n          areaFive={formatCurrency(balance[section]?.previous?.toFixed(2))}\n        />\n      ) : null\n    )}\n  </>\n);\nexport default BalanceEquity;\n","import {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Font,\n} from '@react-pdf/renderer';\nimport { observer } from 'mobx-react-lite';\nimport * as info from '../../info/info.json';\nimport fontRegular from '../../fonts/Comfortaa-Light.ttf';\nimport fontBold from '../../fonts/Comfortaa-Bold.ttf';\nimport type CompanyStore from '../../stores/CompanyStore';\nimport Line from '../components/Line';\nimport Result from './Result';\nimport { formatDate } from '../../functions/formatting';\nimport BalanceAssets from './BalanceAssets';\nimport BalanceEquity from './BalanceEquity';\n\nFont.register({ family: 'ComfortaaRegular', src: fontRegular });\nFont.register({ family: 'ComfortaaBold', src: fontBold });\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#FFF',\n    justifyContent: 'center',\n    fontFamily: 'ComfortaaRegular',\n    color: '#191919',\n  },\n  section: {\n    marginTop: '10px',\n    padding: '10px 30px',\n    flexGrow: 1,\n    textAlign: 'left',\n    lineHeight: 1.4,\n  },\n  front: {\n    marginTop: '50px',\n    padding: '50px',\n    flexGrow: 1,\n    textAlign: 'center',\n    lineHeight: 1.4,\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignSelf: 'center',\n    height: '50px',\n    borderTop: '1px black solid',\n    width: '80%',\n    fontSize: '10px',\n    padding: '4px 0px',\n  },\n  h1: {\n    fontSize: '24px',\n  },\n  h2: {\n    fontSize: '18px',\n    marginTop: '18px',\n  },\n  h3: {\n    fontSize: '14px',\n    marginTop: '14px',\n  },\n  h4Bold: {\n    fontSize: '11px',\n    marginTop: '11px',\n    fontWeight: 'bolder',\n    fontFamily: 'ComfortaaBold',\n  },\n  h4: {\n    fontSize: '9px',\n    marginTop: '10px',\n    color: '#808080',\n  },\n\n  areaOne: {\n    minWidth: '40%',\n    textAlign: 'left',\n    fontSize: '10px',\n  },\n  areaTwo: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaThree: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\n// Create Document Component\nconst Pdf = observer(({ companyStore }: { companyStore: CompanyStore }) => {\n  const { company } = companyStore;\n\n  return (\n    <Document language=\"sv\">\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.front}>\n          <Text style={styles.h1}>{company.info.name}</Text>\n          <Text style={{ marginBottom: '50px', ...styles.h2 }}>\n            {company?.info?.registrationNumber}\n          </Text>\n          <Text style={styles.h2}>{info.fiscal_year_text}</Text>\n          <Text style={styles.h2}>{`${formatDate(\n            company.fiscalYears.currentStart\n          )} - ${formatDate(company.fiscalYears.currentEnd)}`}</Text>\n          <Text style={styles.h4}>{info.presentation_ceo_text}</Text>\n          <Text style={styles.h4}>{info.round_up_method}</Text>\n          <Text style={{ marginTop: '24px', ...styles.h4 }}>\n            {info.confirmation_certificate}\n          </Text>\n          <Text style={{ marginTop: '24px', ...styles.h4 }}>\n            {info.director_approve_text}\n          </Text>\n        </View>\n        <View break style={styles.section}>\n          <Text style={styles.h2}>Förvaltningsberättelse</Text>\n          <Text style={styles.h3}>Verksamheten</Text>\n          <Text style={styles.h4Bold}>Allmänt om verksamheten</Text>\n          <Text style={styles.h4}>{info.year_text}</Text>\n\n          {/* Flerårsöversikt */}\n          <Text style={styles.h3}>Flerårsöversikt</Text>\n          {/* Years */}\n          <Line\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n              -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          {/* Nettoomsättning */}\n          <Line areaOne=\"Nettoomsättning\" areaFour=\"123 123\" areaFive=\"0\" />\n\n          {/* resultat efter finansiella poster */}\n          <Line\n            areaOne=\"Resultat efter finansiella poster\"\n            areaFour=\"321 321\"\n            areaFive=\"1 214\"\n          />\n\n          {/* Soliditet */}\n          <Line areaOne=\"Soliditet (%)\" areaFour=\"38\" areaFive=\"7\" />\n\n          {/* Description changes year -1 to 0 */}\n          <Text style={styles.h4}>\n            {'Bolaget har under 2020 ingått ett uppdragsavtal avseende redovisningstjänster' +\n              'vilket har påverkat omsättning starkt positivt.'}\n            Uppdragsavtalet motsvarar en heltidstjänst och fortlöpt under hela\n            räkenskapsåret.\n          </Text>\n\n          {/* Förändring i egent kapital */}\n          <Text style={styles.h3}>Förändringar i eget kapital</Text>\n\n          {/* aktiekapital */}\n          <Line\n            areaTwo=\"Aktiekapital\"\n            areaThree={`Balanserat\n              resultat`}\n            areaFour={`Årets\n            resultat`}\n            areaFive=\"Totalt\"\n            border\n          />\n\n          {/* vid årets ingång */}\n          <Line\n            areaOne=\"Vid årets ingång\"\n            areaTwo=\"50 000\"\n            areaThree=\"0\"\n            areaFour=\"1 073\"\n            areaFive=\"51 073\"\n          />\n\n          {/* Balanseras i en ny räkning */}\n          <Line\n            areaOne=\"Balanseras i en ny räkning\"\n            areaThree=\"1 073\"\n            areaFour=\"-1 073\"\n            areaFive=\"0\"\n          />\n\n          {/* Årets resultat */}\n          <Line\n            areaOne=\"Årets resultat\"\n            areaFour=\"485 281\"\n            areaFive=\"485 281\"\n          />\n          {/* Vid årets utgång */}\n          <Line\n            areaOne=\"Vid årets ingång\"\n            areaTwo=\"50 000\"\n            areaThree=\"0\"\n            areaFour=\"485 281\"\n            areaFive=\"485 281\"\n          />\n\n          {/* Resultatdispotions */}\n          <Text style={styles.h3}>Resultatdispotion</Text>\n\n          {/* Stående medel */}\n          <Line areaOne=\"Styrelsen och VD föreslår att till förfogande stående medel\" />\n\n          {/* Balanserat resultat */}\n          <Line areaOne=\"Balanserat resultat\" areaFive=\"1 073\" />\n\n          {/* Årets resultat */}\n          <Line areaOne=\"Årets resultat\" areaFive=\"485 281\" />\n\n          {/* Summa */}\n          <Line areaOne=\"Summa\" areaFive=\"486 354\" />\n\n          {/* Disponeras */}\n          <Line areaOne=\"Disponeras enligt följande\" />\n\n          {/* Utdelas */}\n          <Line areaOne=\"Utdelas till aktieägare\" areaFive=\"177 100\" />\n\n          {/* Balanseras i ny räkning */}\n          <Line areaOne=\"Balanseras i ny räkning\" areaFive=\"309 254\" />\n\n          {/* Summa */}\n          <Line areaOne=\"Summa\" areaFive=\"486 354\" />\n\n          {/* Text regelverk */}\n          <Text style={styles.h4}>\n            Med hänvisning till ovanstående och vad som i övrigt kommit till\n            styrelsens kännedom är det styrelsens bedömning att utdelningen är\n            försvarbar (enligt ABL 17 kap 3 §) med tanke på de krav som\n            verksamhetens art och omfattning samt risker ställer på storleken av\n            bolagets egna kapital, konsolideringsbehov, likviditet och ställning\n            i övrigt.\n          </Text>\n        </View>\n        <View break style={styles.section}>\n          {/* Resultaträkning */}\n          <Text style={styles.h2}>Resultaträkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          <Result result={company.result} />\n        </View>\n\n        <View break style={styles.section}>\n          {/* Balansräkning */}\n          <Text style={styles.h2}>Balansräkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          <BalanceAssets balance={company.balance?.assets} />\n        </View>\n        <View break style={styles.section}>\n          {/* Balansräkning */}\n          <Text style={styles.h2}>Balansräkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          {/* Eget kapital och skulder */}\n          <BalanceEquity balance={company.balance?.equity} />\n        </View>\n\n        <View break style={styles.section}>\n          {/* Noter */}\n          <Text style={styles.h2}>Noter</Text>\n          <Text style={styles.h3}>Not 1 - Redovisningsprinciper</Text>\n          <Text style={styles.h4}>\n            {`Årsredovisningen är upprättad i enlighet med årsredovisningslagen och Bokföringsnämndens allmänna\n            råd (BFNAR 2016:10) om årsredovisning i mindre företag.\n            Nyckeltalsdefinitioner\n            Nettoomsättning\n            Rörelsens huvudintäkter, fakturerade kostnader, sidointäkter samt intäktskorrigeringar.\n            Resultat efter finansiella poster\n            Resultat efter finansiella intäkter och kostnader men före bokslutsdispositioner och skatter.\n            Soliditet\n            Justerat eget kapital (eget kapital och obeskattade reserver med avdrag för uppskjuten skatt) i procent av balansomslutningen.`}\n          </Text>\n        </View>\n\n        <View break style={styles.section}>\n          {/* Underskrifter */}\n          <Text style={styles.h2}>Underskrifter</Text>\n          <Text style={styles.h4}>\n            {`\n            Årsredovisning för ${company.info.name}, ${\n              company.info.registrationNumber\n            }\n            Avseende räkenskapsåret ${formatDate(\n              company.fiscalYears.currentEnd\n            )} - ${formatDate(company.fiscalYears.currentEnd)}`}\n          </Text>\n        </View>\n\n        <View fixed style={styles.footer}>\n          <View style={{ display: 'flex', flexDirection: 'column' }}>\n            <Text>{company.info.name}</Text>\n            <Text>{company.info.registrationNumber}</Text>\n          </View>\n          <Text\n            render={({ pageNumber, totalPages }) =>\n              `sida ${pageNumber} av ${totalPages}`\n            }\n          />\n        </View>\n      </Page>\n    </Document>\n  );\n});\n\nexport default Pdf;\n","import { Button, Grid, Switch, TextField } from '@mui/material';\nimport { Field, Form, Formik } from 'formik';\nimport Card from '../../components/Card';\nimport MultiRow from '../../components/MultiRow';\nimport Page from '../../components/Page';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate } from '../../functions/formatting';\nimport { Company } from '../../functions/interfaces';\nimport useStore from '../../hooks/useStore';\n\nconst ResultDispositionPage = (): JSX.Element => {\n  const { companyStore } = useStore();\n\n  const handleSubmit = (e: Company) => {\n    console.log(e);\n  };\n  return (\n    <Formik\n      onSubmit={(e) => handleSubmit(e)}\n      initialValues={companyStore.company}\n    >\n      {() => (\n        <Form>\n          <Page>\n            <Card>\n              <Grid container direction=\"column\">\n                <SubTitle\n                  current={`${formatDate(\n                    companyStore.company.fiscalYears.currentStart\n                  )} - ${formatDate(\n                    companyStore.company.fiscalYears.currentEnd\n                  )} `}\n                  previous={\n                    companyStore.company.fiscalYears.previousStart &&\n                    `${formatDate(\n                      companyStore.company.fiscalYears.previousStart\n                    )} - ${formatDate(\n                      companyStore.company.fiscalYears.previousEnd\n                    )}`\n                  }\n                  subTitle=\"Resultatdisposition\"\n                />\n                <MultiRow isNoBorder isSum isBold subTitle=\"Förfogade medel\" />\n                <MultiRow\n                  current={\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n                  }\n                  previous={\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n                  }\n                  subTitle=\"Balanserat resultat\"\n                />\n                <MultiRow\n                  current={\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n                  }\n                  previous={\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n                  }\n                  subTitle=\"Årest resultat\"\n                />\n                <MultiRow\n                  isSum\n                  isBold\n                  subTitle=\"Summa\"\n                  current=\"100kr\"\n                  previous=\"100kr\"\n                />\n                <MultiRow\n                  isNoBorder\n                  isSum\n                  isBold\n                  subTitle=\"Förslag till årstämma\"\n                />\n                <MultiRow\n                  subTitle=\"Utdelas till aktieägare\"\n                  current={\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n                  }\n                  previous={\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n                  }\n                />\n                <MultiRow\n                  subTitle=\"Återbetalning av aktieägartillskott\"\n                  current={\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n                  }\n                  previous={\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n                  }\n                />\n                <MultiRow\n                  subTitle=\"Balanseras i en ny räkning\"\n                  current=\"100kr\"\n                  previous=\"100kr\"\n                  isSum\n                  isBold\n                />\n\n                <MultiRow\n                  subTitle=\"Förändringar i eget kapital\"\n                  isSum\n                  isBold\n                  isNoBorder\n                  current=\"Lämna kommentar om förändring av kapital?\"\n                  previous={<Switch />}\n                />\n\n                <Grid item alignSelf=\"center\">\n                  <Button type=\"submit\" variant=\"contained\">\n                    Fortsätt\n                  </Button>\n                </Grid>\n              </Grid>\n            </Card>\n          </Page>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ResultDispositionPage;\n","import { Company } from './interfaces';\n\nconst sumAreas = [\n  'operatingProfit',\n  'profitBeforeTaxes',\n  'yearResult',\n  'financialProfit',\n];\n// reCalculate sections from inputs. Exlude sums.\nfunction calculateInputResults(company: Company): void {\n  return Object.entries(company.result).forEach(([section, data]) => {\n    if (sumAreas.includes(section)) return;\n    // eslint-disable-next-line no-param-reassign\n    company.result[section].current = Object.values(data.children).reduce(\n      (total, { current }) => total + current,\n      0\n    );\n    // eslint-disable-next-line no-param-reassign\n    company.result[section].previous = Object.values(data.children).reduce(\n      (total, { previous }) => total + previous,\n      0\n    );\n  });\n}\n// Just put in subSummed values to the sums.\nfunction sumInputResults(company: Company): void {\n  // eslint-disable-next-line no-param-reassign\n  company.result.operatingProfit.current =\n    company.result.operatingIncome.current +\n    company.result.operatingCosts.current;\n  // eslint-disable-next-line no-param-reassign\n  company.result.financialProfit.current =\n    company.result.operatingProfit.current +\n    company.result.financialPosts.current;\n  // eslint-disable-next-line no-param-reassign\n  company.result.profitBeforeTaxes.current =\n    company.result.financialProfit.current +\n    company.result.yearEndDistribution.current;\n  // eslint-disable-next-line no-param-reassign\n  company.result.yearResult.current =\n    company.result.profitBeforeTaxes.current + company.result.taxes.current;\n  // eslint-disable-next-line no-param-reassign\n  company.result.operatingProfit.previous =\n    company.result.operatingIncome.previous +\n    company.result.operatingCosts.previous;\n  // eslint-disable-next-line no-param-reassign\n  company.result.financialProfit.previous =\n    company.result.operatingProfit.previous +\n    company.result.financialPosts.previous;\n  // eslint-disable-next-line no-param-reassign\n  company.result.profitBeforeTaxes.previous =\n    company.result.financialProfit.previous +\n    company.result.yearEndDistribution.previous;\n  // eslint-disable-next-line no-param-reassign\n  company.result.yearResult.previous =\n    company.result.profitBeforeTaxes.previous + company.result.taxes.previous;\n}\n\nexport { calculateInputResults as default, sumInputResults };\n","import { FC, Fragment } from 'react';\nimport { Button, Grid, TextField } from '@mui/material';\nimport { observer } from 'mobx-react-lite';\nimport { FastField, Form, Formik } from 'formik';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport MultiRow from '../../components/MultiRow';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate, formatCurrency } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\nimport resultSectionsData from '../../info/resultSectionsData';\nimport { Company } from '../../functions/interfaces';\nimport calculateInputResults, {\n  sumInputResults,\n} from '../../functions/calculateInputResults';\nimport StyledNavLink from '../../components/StyledNavLink';\n\ninterface Child {\n  [resultRowIdentifier: string]: {\n    title: string;\n    accountRange: [number, number];\n  };\n}\n\nconst ResultSheetPage: FC = observer(() => {\n  const { companyStore } = useStore();\n\n  const { result } = companyStore.company;\n\n  // eslint-disable-next-line\n  const entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\n  const handleSubmit = (company: Company) => {\n    calculateInputResults(company);\n    sumInputResults(company);\n    companyStore.hydrate(company);\n  };\n\n  return (\n    <>\n      <Formik\n        onSubmit={(e) => handleSubmit(e)}\n        initialValues={companyStore.company}\n      >\n        {() => (\n          <Form>\n            <Page>\n              <Card>\n                <Grid container direction=\"column\">\n                  <SubTitle\n                    current={`${formatDate(\n                      companyStore.company.fiscalYears.currentStart\n                    )} - ${formatDate(\n                      companyStore.company.fiscalYears.currentEnd\n                    )} `}\n                    previous={\n                      companyStore.company.fiscalYears.previousStart &&\n                      `${formatDate(\n                        companyStore.company.fiscalYears.previousStart\n                      )} - ${formatDate(\n                        companyStore.company.fiscalYears.previousEnd\n                      )}`\n                    }\n                    subTitle=\"Resultaträkning\"\n                  />\n                  {Object.entries(resultSectionsData).map(\n                    ([section, sectionData], i) => (\n                      <Fragment key={i}>\n                        {Object.entries(sectionData.children as Child).map(\n                          ([child, childData], id) => (\n                            <MultiRow\n                              current={\n                                <FastField\n                                  type=\"number\"\n                                  label={childData?.title}\n                                  name={`result.${[section]}.children.${[\n                                    child,\n                                  ]}.current`}\n                                  as={TextField}\n                                  setField\n                                  fullWidth\n                                />\n                              }\n                              previous={\n                                companyStore.company.fiscalYears\n                                  .previousStart && (\n                                  <FastField\n                                    type=\"number\"\n                                    label={childData?.title}\n                                    name={`result.${[section]}.children.${[\n                                      child,\n                                    ]}.previous`}\n                                    as={TextField}\n                                    setField\n                                    fullWidth\n                                  />\n                                )\n                              }\n                              key={id}\n                              subTitle={childData?.title}\n                            />\n                          )\n                        )}\n\n                        <MultiRow\n                          current={formatCurrency(\n                            result[section]?.current?.toFixed(2),\n                            true\n                          )}\n                          previous={\n                            companyStore.company.fiscalYears.previousStart &&\n                            formatCurrency(\n                              result[section]?.previous?.toFixed(2),\n                              true\n                            )\n                          }\n                          isSum\n                          isBold\n                          subTitle={sectionData.sumTitle || sectionData.title}\n                        />\n                      </Fragment>\n                    )\n                  )}\n\n                  <Grid item alignSelf=\"center\">\n                    <Button type=\"submit\" variant=\"contained\">\n                      spara\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Page>\n          </Form>\n        )}\n      </Formik>\n      <StyledNavLink disabled={!companyStore.isReady} to=\"/balance-sheet\">\n        <Button disabled={!companyStore.isReady} variant=\"contained\">\n          Fortsätt\n        </Button>\n      </StyledNavLink>\n    </>\n  );\n});\n\nexport default ResultSheetPage;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ntype Props = {\n  first?: string;\n  second?: React.ReactNode;\n  third?: React.ReactNode;\n  fourth?: React.ReactNode;\n  fifth?: React.ReactNode;\n};\n\nconst SignRow = ({ first, second, third, fourth, fifth }: Props) => (\n  <Grid xs={12} mb={12} flexDirection=\"row\" container gap={50}>\n    <Typography alignSelf=\"center\" variant=\"h6\">\n      {first}\n    </Typography>\n    {second}\n    {third}\n    {fourth}\n    {fifth}\n  </Grid>\n);\n\nexport default SignRow;\n","// import { NavLink } from 'react-router-dom';\nimport { Grid, TextField, Typography } from '@mui/material';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { useState } from 'react';\nimport Card from '../../components/Card';\nimport MultiRow from '../../components/MultiRow';\nimport Page from '../../components/Page';\nimport SubTitle from '../../components/SubTitle';\nimport SignRow from './components/SignRow';\n\nconst SignPage = () => {\n  const [value, setValue] = useState<Date | null>(new Date());\n  return (\n    <Page>\n      <Card>\n        <SubTitle subTitle=\"Befattningshavare\" />\n        <Typography variant=\"h5\">Styrelseledamöter och vd</Typography>\n        <Typography>\n          <p style={{ marginTop: 8, marginBottom: 1 }}>\n            Observera att endast ordinarie styrelseledamöter ska anges\n            tillsammans med en eventuell VD.\n          </p>\n          <p style={{ marginTop: 1, marginBottom: 1 }}>\n            Suppleanter ska bara tas med om de ska ersätta en ordinarie ledamot\n            vid underskrift av årsredovisning.\n          </p>\n          <p style={{ marginTop: 1, marginBottom: 1 }}>\n            Om du vill ha en annan rollbeskrivning än någon av de förvalda går\n            det att skriva en egen beskrivning direkt i fältet.\n          </p>\n        </Typography>\n        <Grid xs={12} container flexDirection=\"row\" mt={12} ml={105} gap={50}>\n          <Typography width=\"172px\">Förnman</Typography>\n          <Typography width=\"172px\">Efternamn</Typography>\n          <Typography width=\"172px\">Personnummer</Typography>\n          <Typography width=\"172px\">Roll</Typography>\n        </Grid>\n        <SignRow\n          first=\"Företrädare 1\"\n          second={<TextField name=\"\" />}\n          third={<TextField name=\"\" />}\n          fourth={<TextField name=\"\" />}\n          fifth={<TextField name=\"\" />}\n        />\n\n        <Typography variant=\"h5\">\n          Ort och datum för underskrift av årsredovisning\n        </Typography>\n        <Typography mb={12}>\n          <p style={{ marginTop: 8, marginBottom: 1 }}>\n            Här kan du fylla i när och var årsredovisningen skrivs under och då\n            fylls det i automatiskt i årsredovisningen.\n          </p>\n        </Typography>\n        <MultiRow\n          isBold\n          subTitle=\"Datum då årsredovisningen skrivs under\"\n          current={\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DesktopDatePicker\n                label=\"For desktop\"\n                value={value}\n                minDate={new Date()}\n                onChange={(newValue) => {\n                  setValue(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider>\n          }\n        />\n        <MultiRow\n          isBold\n          subTitle=\"Ort där årsredovisningen skrivs under\"\n          current={<TextField name=\"\" />}\n        />\n      </Card>\n    </Page>\n  );\n};\n\nexport default SignPage;\n","import { Button, TextareaAutosize, Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport SubTitle from '../../components/SubTitle';\n\nconst YearStoryPage = () => (\n  <Page>\n    <Card>\n      <SubTitle subTitle=\"Förvaltningsberättelse\" />\n      <Typography mb={12} variant=\"h5\">\n        {' '}\n        Allmänt om verksamheten\n      </Typography>\n      <TextareaAutosize cols={100} minRows={20} />\n      <Typography mb={12} mt={12} variant=\"h5\">\n        {' '}\n        Väsentliga händelser under räkenskapsårets\n      </Typography>\n      <TextareaAutosize cols={100} minRows={20} />\n      <Typography mb={12} mt={12} variant=\"h5\">\n        {' '}\n        Väsentliga händelser efter räkenskapsårets slut\n      </Typography>\n      <TextareaAutosize cols={100} minRows={20} />\n    </Card>\n    <NavLink to=\"/sign\">\n      <div style={{ display: 'grid', justifyContent: 'center', marginTop: 12 }}>\n        <Button variant=\"contained\">Fortsätt</Button>\n      </div>\n    </NavLink>\n  </Page>\n);\nexport default YearStoryPage;\n","import { Balance } from './interfaces';\n\nconst sumAreas = [\n  'operatingProfit',\n  'profitBeforeTaxes',\n  'yearResult',\n  'financialProfit',\n];\n// reCalculate sections from inputs. Exlude sums.\nfunction calculateInputBalance(BalanceSection: Balance): void {\n  return Object.entries(BalanceSection).forEach(([section, data]) => {\n    if (sumAreas.includes(section)) return;\n    // eslint-disable-next-line no-param-reassign\n    BalanceSection[section].current = Object.values(data.children).reduce(\n      (total, { current }) => total + current,\n      0\n    );\n    // eslint-disable-next-line no-param-reassign\n    BalanceSection[section].previous = Object.values(data.children).reduce(\n      (total, { previous }) => total + previous,\n      0\n    );\n  });\n}\n// Just put in subSummed values to the sums.\n// function sumInputResults(company: Company): void {\n//   // eslint-disable-next-line no-param-reassign\n//   company.balance.operatingProfit.current = company.balance.operatingIncome.current\n//     + company.balance.operatingCosts.current;\n//   // eslint-disable-next-line no-param-reassign\n//   company.balance.financialProfit.current = company.balance.operatingProfit.current\n//     + company.balance.financialPosts.current;\n//   // eslint-disable-next-line no-param-reassign\n//   company.balance.profitBeforeTaxes.current = company.balance.financialProfit.current\n//     + company.balance.yearEndDistribution.current;\n//   // eslint-disable-next-line no-param-reassign\n//   company.balance.yearResult.current = company.balance.profitBeforeTaxes.current\n//     + company.balance.taxes.current;\n//   // eslint-disable-next-line no-param-reassign\n//   company.balance.operatingProfit.previous = company.balance.operatingIncome.previous\n//     + company.balance.operatingCosts.previous;\n//   // eslint-disable-next-line no-param-reassign\n//   company.balance.financialProfit.previous = company.balance.operatingProfit.previous\n//     + company.balance.financialPosts.previous;\n//   // eslint-disable-next-line no-param-reassign\n//   company.balance.profitBeforeTaxes.previous = company.balance.financialProfit.previous\n//     + company.balance.yearEndDistribution.previous;\n//   // eslint-disable-next-line no-param-reassign\n//   company.balance.yearResult.previous = company.balance.profitBeforeTaxes.previous\n//     + company.balance.taxes.previous;\n// }\n\nexport { calculateInputBalance as default };\n","import { FC, Fragment } from 'react';\nimport { Button, Grid, TextField } from '@mui/material';\nimport { FastField, Form, Formik } from 'formik';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport MultiRow from '../../components/MultiRow';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate, formatCurrency } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\nimport { Balance } from '../../functions/interfaces';\nimport calculateInputBalance from '../../functions/calculateInputBalance';\nimport balanceEquitySections from '../../info/balanceSectionEquityData';\n\ninterface Child {\n  [resultRowIdentifier: string]: {\n    title: string;\n    accountRange: [number, number];\n    current?: number;\n    previous?: number;\n  };\n}\n\nconst BalanceSheetEquityPage: FC = () => {\n  const { companyStore } = useStore();\n\n  const { balance } = companyStore.company;\n\n  // eslint-disable-next-line\n  const entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\n  const handleSubmit = (equity: Balance) => {\n    calculateInputBalance(equity);\n    balance.equity = equity;\n  };\n\n  return (\n    <Formik\n      onSubmit={(e) => handleSubmit(e)}\n      initialValues={companyStore?.company?.balance?.equity}\n    >\n      {() => (\n        <Form>\n          <Page>\n            <Card>\n              <Grid container direction=\"column\">\n                <SubTitle\n                  current={`${formatDate(\n                    companyStore.company.fiscalYears.currentStart\n                  )} - ${formatDate(\n                    companyStore.company.fiscalYears.currentEnd\n                  )} `}\n                  previous={\n                    companyStore.company.fiscalYears.previousStart &&\n                    `${formatDate(\n                      companyStore.company.fiscalYears.previousStart\n                    )} - ${formatDate(\n                      companyStore.company.fiscalYears.previousEnd\n                    )}`\n                  }\n                  subTitle=\"Balansräkning\"\n                />\n                {Object.entries(balanceEquitySections)?.map(\n                  ([section, sectionData], i) => (\n                    <Fragment key={i}>\n                      {sectionData.title && (\n                        <MultiRow\n                          isNoBorder\n                          isSum\n                          isBold\n                          subTitle={sectionData?.title}\n                        />\n                      )}\n                      {Object.entries(sectionData.children as Child)\n                        .filter(\n                          ([child]) =>\n                            balance?.equity[section]?.children[child]?.current >\n                              0 ||\n                            balance?.equity[section]?.children[child]\n                              ?.previous > 0\n                        )\n                        .map(([child, childData], id) => (\n                          <MultiRow\n                            current={\n                              <FastField\n                                type=\"number\"\n                                label={childData?.title}\n                                name={`${[section]}.children.${[\n                                  child,\n                                ]}.current`}\n                                as={TextField}\n                                setField\n                                fullWidth\n                              />\n                            }\n                            previous={\n                              companyStore.company.fiscalYears\n                                .previousStart && (\n                                <FastField\n                                  type=\"number\"\n                                  label={childData?.title}\n                                  name={`${[section]}.children.${[\n                                    child,\n                                  ]}.previous`}\n                                  as={TextField}\n                                  setField\n                                  fullWidth\n                                />\n                              )\n                            }\n                            key={id}\n                            subTitle={childData?.title}\n                          />\n                        ))}\n\n                      <MultiRow\n                        current={formatCurrency(\n                          balance.equity[section]?.current?.toFixed(2),\n                          true\n                        )}\n                        previous={\n                          companyStore.company.fiscalYears.previousStart &&\n                          formatCurrency(\n                            balance.equity[section]?.previous?.toFixed(2),\n                            true\n                          )\n                        }\n                        isSum\n                        isBold\n                        subTitle={sectionData.sumTitle || sectionData.title}\n                      />\n                    </Fragment>\n                  )\n                )}\n\n                <Grid item alignSelf=\"center\">\n                  <Button type=\"submit\" variant=\"contained\">\n                    Fortsätt\n                  </Button>\n                </Grid>\n              </Grid>\n            </Card>\n          </Page>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default BalanceSheetEquityPage;\n","import { Button, Grid, TextField } from '@mui/material';\nimport { FastField, Form, Formik } from 'formik';\nimport { Fragment } from 'react';\nimport Card from '../../components/Card';\nimport MultiRow from '../../components/MultiRow';\nimport Page from '../../components/Page';\nimport SubTitle from '../../components/SubTitle';\nimport calculateInputBalance from '../../functions/calculateInputBalance';\nimport { formatCurrency, formatDate } from '../../functions/formatting';\nimport { Balance } from '../../functions/interfaces';\nimport useStore from '../../hooks/useStore';\nimport balanceAssetsSections from '../../info/balanceSectionsAssetsData';\n\ninterface Children {\n  [resultRowIdentifier: string]: {\n    title: string;\n    accountRange: [number, number];\n    current?: number;\n    previous?: number;\n  };\n}\n\nconst BalanceSheetPage = () => {\n  const { companyStore } = useStore();\n\n  const { balance } = companyStore.company;\n\n  // eslint-disable-next-line\n  const entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\n  const handleSubmit = (assets: Balance) => {\n    calculateInputBalance(assets);\n    balance.assets = assets;\n  };\n\n  return (\n    <Formik\n      onSubmit={(e) => handleSubmit(e)}\n      initialValues={companyStore?.company?.balance?.assets}\n    >\n      {() => (\n        <Form>\n          <Page>\n            <Card>\n              <Grid container direction=\"column\">\n                <SubTitle\n                  current={`${formatDate(\n                    companyStore.company.fiscalYears.currentStart\n                  )} - ${formatDate(\n                    companyStore.company.fiscalYears.currentEnd\n                  )} `}\n                  previous={\n                    companyStore.company.fiscalYears.previousStart &&\n                    `${formatDate(\n                      companyStore.company.fiscalYears.previousStart\n                    )} - ${formatDate(\n                      companyStore.company.fiscalYears.previousEnd\n                    )}`\n                  }\n                  subTitle=\"Balansräkning\"\n                />\n                {Object.entries(balanceAssetsSections)?.map(\n                  ([section, sectionData], i) => (\n                    <Fragment key={i}>\n                      {sectionData.title && (\n                        <MultiRow\n                          isNoBorder\n                          isSum\n                          isBold\n                          subTitle={sectionData?.title}\n                        />\n                      )}\n                      {Object.entries(sectionData.children as Children)\n                        .filter(\n                          ([child]) =>\n                            balance?.assets?.[section]?.children[child]\n                              ?.current > 0 ||\n                            balance?.assets?.[section]?.children[child]\n                              ?.previous > 0\n                        )\n                        .map(([child, childData], id) => (\n                          <MultiRow\n                            current={\n                              <FastField\n                                type=\"number\"\n                                label={childData?.title}\n                                name={`${[section]}.children.${[\n                                  child,\n                                ]}.current`}\n                                as={TextField}\n                                setField\n                                fullWidth\n                              />\n                            }\n                            previous={\n                              companyStore.company.fiscalYears\n                                .previousStart && (\n                                <FastField\n                                  type=\"number\"\n                                  label={childData?.title}\n                                  name={`${[section]}.children.${[\n                                    child,\n                                  ]}.previous`}\n                                  as={TextField}\n                                  setField\n                                  fullWidth\n                                />\n                              )\n                            }\n                            key={id}\n                            subTitle={childData?.title}\n                          />\n                        ))}\n                      {Object.entries(sectionData.children as Children)\n                        .filter(\n                          ([child]) =>\n                            balance[section]?.children[child].current > 0 ||\n                            balance[section]?.children[child].previous > 0\n                        )\n                        .map(([child, childData], id) => (\n                          <MultiRow\n                            current={\n                              <FastField\n                                type=\"number\"\n                                label={childData?.title}\n                                name={`balance.${[section]}.children.${[\n                                  child,\n                                ]}.current`}\n                                as={TextField}\n                                setField\n                                fullWidth\n                              />\n                            }\n                            previous={\n                              companyStore.company.fiscalYears\n                                .previousStart && (\n                                <FastField\n                                  type=\"number\"\n                                  label={childData?.title}\n                                  name={`balance.${[section]}.children.${[\n                                    child,\n                                  ]}.previous`}\n                                  as={TextField}\n                                  setField\n                                  fullWidth\n                                />\n                              )\n                            }\n                            key={id}\n                            subTitle={childData?.title}\n                          />\n                        ))}\n\n                      <MultiRow\n                        current={formatCurrency(\n                          balance.assets[section]?.current?.toFixed(2),\n                          true\n                        )}\n                        previous={\n                          companyStore.company.fiscalYears.previousStart &&\n                          formatCurrency(\n                            balance.assets[section]?.previous?.toFixed(2),\n                            true\n                          )\n                        }\n                        isSum\n                        isBold\n                        subTitle={sectionData.sumTitle || sectionData.title}\n                      />\n                    </Fragment>\n                  )\n                )}\n\n                <Grid item alignSelf=\"center\">\n                  <Button type=\"submit\" variant=\"contained\">\n                    Fortsätt\n                  </Button>\n                </Grid>\n              </Grid>\n            </Card>\n          </Page>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default BalanceSheetPage;\n","import Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { useState } from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport { Box } from '@mui/material';\nimport TimeLine from '../components/TimeLine';\nimport useStore from '../hooks/useStore';\nimport CompanyInfoPage from '../pages/CompanyInfoPage/CompanyInfoPage';\nimport FiscalYearPage from '../pages/FiscalYearPage/FiscalYearPage';\nimport LoadSie from '../pages/LoadSiePage/LoadSiePage';\nimport NotesPage from '../pages/NotesPage/NotesPage';\nimport Pdf from '../pages/PDF/pdf';\nimport ResultDispositionPage from '../pages/ResultDispositionPage/ResultDispositionPage';\nimport ResultSheetPage from '../pages/ResultSheetPage/ResultSheetPage';\nimport SignPage from '../pages/SignPage/SignPage';\nimport YearStoryPage from '../pages/YearStoryPage/YearStoryPage';\nimport BalanceSheetEquityPage from '../pages/BalanceSheetPage/BalanceSheetEquityPage';\nimport BalanceSheetAssetsPage from '../pages/BalanceSheetPage/BalanceSheetAssetsPage';\n\nconst Navigation = () => {\n  const { companyStore } = useStore();\n  const [showPdf, setShowPdf] = useState(false);\n\n  if (showPdf) {\n    return (\n      <div style={{ height: '100vh' }}>\n        <Box position=\"absolute\" top={12} right={160}>\n          <Button\n            onClick={() => setShowPdf(!showPdf)}\n            disabled={!companyStore.isReady}\n            variant=\"contained\"\n          >\n            Avbryt\n          </Button>\n        </Box>\n        <PDFViewer width=\"100%\" height=\"100%\">\n          <Pdf companyStore={companyStore} />\n        </PDFViewer>\n      </div>\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <Grid container justifyContent=\"flex-end\">\n        <Grid item>\n          <Button onClick={() => setShowPdf(!showPdf)} variant=\"contained\">\n            Förhandsgranska\n          </Button>\n        </Grid>\n      </Grid>\n      <TimeLine />\n      <Routes>\n        {/* Siefil */}\n        <Route path=\"/Arsredovisning\" element={<LoadSie />} />\n        {/* Välj räkenskapsår */}\n        <Route path=\"/fiscal-year\" element={<FiscalYearPage />} />\n        {/* Företagsuppgifter */}\n        <Route path=\"/company-info\" element={<CompanyInfoPage />} />\n        {/* Resultaträkning */}\n        <Route path=\"/result-sheet\" element={<ResultSheetPage />} />\n        {/* Balansräkning */}\n        <Route\n          path=\"/balance-sheet-assets\"\n          element={<BalanceSheetAssetsPage />}\n        />\n        <Route\n          path=\"/balance-sheet-equity\"\n          element={<BalanceSheetEquityPage />}\n        />\n        {/* Resultatdisposition */}\n        <Route path=\"/result-disposition\" element={<ResultDispositionPage />} />\n        {/* Noter */}\n        <Route path=\"/notes\" element={<NotesPage />} />\n        {/* Förvaltningsberättelse */}\n        <Route path=\"/year-story\" element={<YearStoryPage />} />\n        {/* Befattningshavare */}\n        <Route path=\"/sign\" element={<SignPage />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Navigation;\n","import { createTheme, GlobalStyles, ThemeProvider } from '@mui/material';\nimport './App.css';\nimport { StoreProvider } from './hooks/useStore';\nimport Navigation from './navigation/navigation';\n\nconst theme = createTheme({\n  spacing: 2,\n  palette: {\n    primary: {\n      main: '#6f12cd',\n    },\n  },\n  typography: {\n    fontFamily: 'Comfortaa',\n    fontSize: 11,\n  },\n  components: {\n    MuiCard: {\n      defaultProps: {\n        elevation: 5,\n      },\n    },\n\n    MuiButton: {\n      styleOverrides: {\n        contained: {\n          minWidth: '64px',\n          minHeight: '36px',\n          padding: '8px 16px',\n          lineHeight: 0.5,\n        },\n      },\n    },\n  },\n});\n\nfunction App(): JSX.Element {\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles\n          styles={{\n            body: { backgroundColor: '#dae9cc5c' },\n          }}\n        />\n        <Navigation />\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}