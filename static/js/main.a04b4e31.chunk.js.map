{"version":3,"sources":["functions/fileReader.ts","stores/CompanyStore.ts","stores/RootStore.ts","hooks/useStore.tsx","components/StyledNavLink.tsx","components/TimeLine.tsx","components/InputField.tsx","components/Page.tsx","functions/formatting.ts","pages/CompanyInfoPage/CompanyInfoPage.tsx","pages/FiscalYearPage/FiscalYearPage.tsx","functions/extractCompanyFromSie.ts","info/resultSectionsData.ts","functions/calculateResults.ts","info/balanceSectionsData.ts","functions/calculateBalances.ts","components/DropArea.tsx","pages/LoadSiePage/LoadSiePage.tsx","components/Card.tsx","components/MultiRow.tsx","components/Notes.tsx","components/SubTitle.tsx","pages/NotesPage/NotesPage.tsx","fonts/Comfortaa-Light.ttf","fonts/Comfortaa-Bold.ttf","pages/components/Line.tsx","pages/components/resultLine.tsx","pages/PDF/Result.tsx","pages/PDF/Balance.tsx","pages/PDF/pdf.tsx","pages/ResultDispositionPage/ResultDispositionPage.tsx","functions/calculateInputResults.ts","pages/ResultSheetPage/ResultSheetPage.tsx","pages/SignPage/components/SignRow.tsx","pages/SignPage/SignPage.tsx","pages/YearStoryPage/YearStoryPage.tsx","pages/BalanceSheetPage/BalanceSheetPage.tsx","navigation/navigation.tsx","App.tsx","index.tsx"],"names":["readFile","file","reader","FileReader","readAsArrayBuffer","Promise","resolve","onload","e","text","legacy","decode","Buffer","from","target","result","CompanyStore","rootStore","company","info","name","registrationNumber","addressInfo","street","city","zipCode","phone","fiscalYears","currentStart","currentEnd","previousStart","previousEnd","accounts","operatingIncome","current","previous","children","operatingCosts","financialPosts","yearEndDistribution","taxes","operatingProfit","financialProfit","profitBeforeTaxes","yearResult","balance","assets","ipFixedAssets","materialFixedAssets","financialFixedAssets","estimatedResult","productStock","accountsReceivable","otherShortClaims","prepaidCostsAndDelayedIncome","shortPlacements","CashAndBankBalances","fixedAssets","currentAssets","totalAssts","equity","liabilites","isReady","makeObservable","this","observable","hydrate","action","runInAction","merge","localStorage","setItem","JSON","stringify","RootStore","companyStore","StoreContext","createContext","undefined","StoreProvider","Provider","value","useStore","useContext","Error","StyledLink","styled","NavLink","p","margin","disabled","StyledNavLink","to","rest","padding","color","ColorlibConnector","StepConnector","theme","stepConnectorClasses","alternativeLabel","top","active","line","backgroundImage","completed","height","border","backgroundColor","palette","mode","grey","borderRadius","ColorlibStepIconRoot","ownerState","zIndex","width","display","justifyContent","alignItems","boxShadow","ColorlibStepIcon","props","className","icon","icons","1","2","3","4","5","6","7","8","String","steps","CustomizedSteppers","area","activeArea","useLocation","Stack","sx","mt","spacing","Stepper","activeStep","pathname","connector","map","label","Step","StepLabel","StepIconComponent","Field","div","Input","Wrapper","InputField","title","Container","Page","formatCurrency","amount","isShowingCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","date","split","reduce","acc","i","StyledCard","Card","CompanyInfoPage","useState","setAmount","handleChange","event","Typography","variant","FormControl","minWidth","size","Select","onChange","MenuItem","Switch","Button","FiscalYearPage","Checkbox","splitWords","row","removeQuotes","words","replace","inQuotes","replaceAll","word","getCompanyName","rows","find","r","startsWith","getCompanyRegistrationNumber","getCompanyAddressInfo","zipCity","getFiscalYears","currentYearRow","previousYearRow","getAccounts","year","id","balanceKey","Number","previousBalance","currentBalance","extractCompanyFromSie","sieString","resultSections","sumTitle","netSales","accountRange","changedInventory","otherIncomes","rawMaterialsConsumables","otherExternalExpenses","staffCosts","writeDownsReversalOfWriteDowns","depreciationAccordingToPlan","otherOperatingExpenses","profitParticipationsGroupCompanies","profitSharesJointlyControlledCompanies","profitOtherFinancialFixedAssets","otherInterestIncomeAndSimilarItems","interestExpensesAndSimilarIncomeItems","changeInAccruals","appropriationsAllCompanyForms","taxesYearProfit","sumSection","section","Object","entries","sum","accountId","account","accountNumber","resultRow","min","max","resultRowIdentifier","resultRowReference","fromEntries","keys","sumSums","sums","calculateResults","balanceSections","patents","tenancy","goodwill","fees","prepaidPatentFees","buildingsAndProperties","costOnOthersProperty","buildingsAndProperties2","activeOrPrepaidProperties","buildingsAndProperties3","machines","inventoryAndTools","inventoryAndTools2","otherFixedAssets","groupStocks","claimGroupCompany","stockCompanyOfInterest","interetsInOtherCompanies","stocksCompanyOfInterest2","claimInteretsCompany","claimOtherCompaniesOfInterest","claimInteretsCompany2","otherLongSecurities","loanToOwner","otherLongClaims","rawMaterials","materialsUnderManufacturing","rawMaterials2","materialsUnderManufacturing2","doneMaterials","activeWorkForOthers","prepaidInvoice","otherStockAssets","claimGroupCompany2","claimCompanyOfInterest","claimCompanyOfInterest2","claimOtherCompanies","claimOtherCompanies2","claimCompanyOfInterest3","claimCompanyOfInterest4","OtherClaims","OtherClaims2","OtherClaims3","NotYetInvoiced","otherShortSecurities","stocksGroupCompany","otherShortSecurities2","cashAndBank","ShareCapital","unRegistredShareCapital","ShareCapital2","revalueFond","reserveFond","fixedOverFond","balancedResult","balancedResult2","balancedResult3","freeUpFond","periodFond","ackumilatedWriteOffs","untaxedReserves","pensions","otherSavings","otherPensions","otherSavings2","liabilities","obligationLoan","checkCredit","otherDebtToInstitute","debtToGroupCompnay","debtToCompanyOfInterest","debtToOtherCompaniesOfInterest","debtToCompanyOfInterest2","otherDebts","otherDebtToInstitutes","prepaidCustomerInvoice","onGoingWorkForOther","accountsPayable","invoicedNotYetWorked","debtGroupCompany","debtCompanyOfInterest","debtOtherCompanyOfInterest","debtCompanyOfInterest2","checkCreditCount","otherDebt","changeDebt","otherDebt2","taxDebt","otherDebt3","otherDebt4","debtGroupCompany2","debtCompanyOfInterest3","debtOtherCompanyOfInterest2","debtCompanyOfInterest4","otherDebt5","preiodCostAndIncome","balanceRow","balanceRowIdentifier","calculateBalanceAssets","DropArea","DropFile","observer","handleOnDrop","acceptedFiles","a","fileReader","sieText","onDrop","getRootProps","getInputProps","LoadSie","MuiCard","MultiRow","subTitle","isBold","isSum","isNoBorder","isBig","Grid","mb","container","columnGap","pt","pl","xs","item","alignSelf","fontWeight","borderTop","Note","isActive","onClick","Paper","elevation","marginTop","gap","SubTitle","NotesPage","Set","activeNotes","setActiveNotes","previousState","TextareaAutosize","cols","minRows","minLength","TextField","has","styles","StyleSheet","create","areaOne","textAlign","fontSize","areaTwo","areaThree","areaFour","areaFive","Line","flexDirection","borderBottom","fontFamily","resultLine","Result","resultSectionsData","sectionData","toFixed","Balance","balanceSectionsData","Font","register","family","src","fontRegular","fontBold","page","flexGrow","lineHeight","front","footer","h1","h2","h3","h4Bold","h4","Pdf","language","marginBottom","break","fixed","render","pageNumber","totalPages","ResultDispositionPage","onSubmit","console","log","handleSubmit","initialValues","direction","type","as","setField","fullWidth","sumAreas","calculateInputResults","forEach","data","includes","values","total","ResultSheetPage","sumInputResults","child","childData","SignRow","first","second","third","fourth","fifth","SignPage","Date","setValue","ml","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","minDate","newValue","renderInput","params","YearStoryPage","BalanceSheetPage","filter","Navigation","companyInfo","parse","getItem","isGeneratePdf","setIsGeneratePdf","position","right","path","element","createTheme","primary","main","typography","components","defaultProps","MuiButton","styleOverrides","contained","minHeight","App","ThemeProvider","GlobalStyles","body","ReactDOM","document","getElementById"],"mappings":"mHAAA,kCAgBeA,IAdf,SAAkBC,GAChB,IAAMC,EAAS,IAAIC,WAEnB,OADAD,EAAOE,kBAAkBH,GAClB,IAAII,SAAQ,SAACC,GAClBJ,EAAOK,OAAS,SAACC,GACf,IAAMC,EAAOC,IAAOC,OAClBC,EAAOC,KAAKL,EAAEM,OAAOC,QACrB,SAEFT,EAAQG,U,gTCyECO,E,WAtBb,WAAYC,GAAuB,yBAtDnCC,QAAmB,CACjBC,KAAM,CACJC,KAAM,GACNC,mBAAoB,GACpBC,YAAa,CACXF,KAAM,GACNG,OAAQ,GACRC,KAAM,GACNC,QAAS,GACTC,MAAO,KAGXC,YAAa,CACXC,aAAc,GACdC,WAAY,GACZC,cAAe,GACfC,YAAa,IAEfC,SAAU,GACVjB,OAAQ,CACNkB,gBAAiB,CAAEC,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACtDC,eAAgB,CAAEH,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACrDE,eAAgB,CAAEJ,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACrDG,oBAAqB,CAAEL,QAAS,EAAGC,SAAU,EAAGC,SAAU,IAC1DI,MAAO,CAAEN,QAAS,EAAGC,SAAU,EAAGC,SAAU,IAC5CK,gBAAiB,CAAEP,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACtDM,gBAAiB,CAAER,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACtDO,kBAAmB,CAAET,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACxDQ,WAAY,CAAEV,QAAS,EAAGC,SAAU,EAAGC,SAAU,KAEnDS,QAAS,CACPC,OAAQ,CACNC,cAAe,CAAEb,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACpDY,oBAAqB,CAAEd,QAAS,EAAGC,SAAU,EAAGC,SAAU,IAC1Da,qBAAsB,CAAEf,QAAS,EAAGC,SAAU,EAAGC,SAAU,IAC3Dc,gBAAiB,CAAEhB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACtDe,aAAc,CAAEjB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACnDgB,mBAAoB,CAAElB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACzDiB,iBAAkB,CAAEnB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACvDkB,6BAA8B,CAAEpB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACnEmB,gBAAiB,CAAErB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACtDoB,oBAAqB,CAAEtB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IAC1DqB,YAAa,CAAEvB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IAClDsB,cAAe,CAAExB,QAAS,EAAGC,SAAU,EAAGC,SAAU,IACpDuB,WAAY,CAAEzB,QAAS,EAAGC,SAAU,EAAGC,SAAU,KAEnDwB,OAAQ,CAAEC,WAAY,CAAE3B,QAAS,EAAGC,SAAU,EAAGC,SAAU,IAAMwB,OAAQ,CAAE1B,QAAS,EAAGC,SAAU,EAAGC,SAAU,OAQhF,KAJlC0B,SAAU,EAIwB,KAFlC7C,eAEkC,EAChC8C,YAAeC,KAAM,CACnB9C,QAAS+C,IACTH,QAASG,IACTC,QAASC,MAGXH,KAAK/C,UAAYA,E,2CAGnB,SAAQC,GAAyB,IAAD,OAC9BkD,aAAY,WACV,EAAKlD,QAAU,CACbC,KAAM,GAAIQ,YAAa,GAAIkB,QAAS,GAAI9B,OAAQ,GAAIiB,SAAU,IAEhE,EAAKd,QAAUmD,IAAM,EAAKnD,QAASA,GACnC,EAAK4C,SAAU,EACfQ,aAAaC,QAAQ,cAAeC,KAAKC,UAAU,EAAKvD,iB,KCrE/CwD,EALb,aAAe,yBAFfC,kBAEc,EACZX,KAAKW,aAAe,IAAI3D,EAAagD,O,OCAnCY,EAAeC,6BAAqCC,GAC1D,SAASC,EAAT,GAA+D,IAAtC3C,EAAqC,EAArCA,SACjBnB,EAAqB,IAAIyD,EAE/B,OAAO,cAACE,EAAaI,SAAd,CAAuBC,MAAOhE,EAA9B,SAA0CmB,IAepC8C,I,EAAAA,EAZf,WACE,IAAMjE,EAAYkE,qBAAWP,GAC7B,IAAK3D,EACH,MAAM,IAAImE,MAAM,iDAGlB,MAAO,CACLT,aAAc1D,EAAU0D,e,uJCXtBU,EAAaC,YAAOC,IAAPD,CAAH,mLAEL,SAACE,GAAD,OAAOA,EAAEC,UACD,SAACD,GAAD,OAAOA,EAAEE,UAAY,UAezBC,EARuB,SAAC,GAAD,IACpCC,EADoC,EACpCA,GAAIxD,EADgC,EAChCA,SAAUqD,EADsB,EACtBA,OAAQC,EADc,EACdA,SAAaG,EADC,4DAGpC,cAACR,EAAD,2BAAgBQ,GAAhB,IAAsBH,SAAUA,EAAUD,OAAQA,EAAQG,GAAIA,EAA9D,SACGxD,MCbCmD,EAAUD,YAAOK,EAAPL,CAAsB,CACpCQ,QAAS,OACTC,MAAO,UAGHC,EAAoBV,YAAOW,IAAPX,EAAsB,kBAAGY,EAAH,EAAGA,MAAH,sCACxCC,IAAqBC,kBAAqB,CAC9CC,IAAK,KAFuC,0BAIxCF,IAAqBG,QAJmB,4BAKrCH,IAAqBI,MAAS,CACnCC,gBACE,gGAPwC,0BAUxCL,IAAqBM,WAVmB,4BAWrCN,IAAqBI,MAAS,CACnCC,gBACE,gGAbwC,2BAgBvCL,IAAqBI,MAAS,CACnCG,OAAQ,EACRC,OAAQ,EACRC,gBACyB,SAAvBV,EAAMW,QAAQC,KAAkBZ,EAAMW,QAAQE,KAAK,KAAO,UAC5DC,aAAc,IArB8B,KAyB1CC,EAAuB3B,YAAO,MAAPA,EAE1B,gBAAGY,EAAH,EAAGA,MAAOgB,EAAV,EAAUA,WAAV,mBAAC,aACFN,gBAAwC,SAAvBV,EAAMW,QAAQC,KAAkBZ,EAAMW,QAAQE,KAAK,KAAO,OAC3EI,OAAQ,EACRpB,MAAO,OACPqB,MAAO,GACPV,OAAQ,GACRW,QAAS,OACTL,aAAc,MACdM,eAAgB,SAChBC,WAAY,UACRL,EAAWZ,QAAU,CACvBE,gBACE,iGACFgB,UAAW,iCAETN,EAAWT,WAAa,CAC1BD,gBACE,sGAeN,SAASiB,EAAiBC,GACxB,IACEpB,EACEoB,EADFpB,OAAQG,EACNiB,EADMjB,UAAWkB,EACjBD,EADiBC,UAAWC,EAC5BF,EAD4BE,KAG1BC,EAAiD,CACrDC,EAAG,cAACvC,EAAD,CAASK,GAAG,kBAAZ,eACHmC,EAAG,cAACxC,EAAD,CAASK,GAAG,gBAAZ,eACHoC,EAAG,cAACzC,EAAD,CAASK,GAAG,gBAAZ,eACHqC,EAAG,cAAC1C,EAAD,CAASK,GAAG,iBAAZ,eACHsC,EAAG,cAAC3C,EAAD,CAASK,GAAG,sBAAZ,eACHuC,EAAG,cAAC5C,EAAD,CAASK,GAAG,SAAZ,eACHwC,EAAG,cAAC7C,EAAD,CAASK,GAAG,cAAZ,eACHyC,EAAG,cAAC9C,EAAD,CAASK,GAAG,QAAZ,gBAIL,OACE,cAACqB,EAAD,CAAsBC,WAAY,CAAET,YAAWH,UAAUqB,UAAWA,EAApE,SACGE,EAAMS,OAAOV,MAKpB,IAAMW,EAAQ,CAAC,UAAW,uBAAqB,qBAAmB,mBAAiB,sBAAuB,QAAS,+BAA0B,qBAE9H,SAASC,IACtB,IAtCkBC,EAsCZC,EAAaC,cACnB,OACE,cAACC,EAAA,EAAD,CAAOC,GAAI,CAAEzB,MAAO,QAAU0B,GAAI,GAAIC,QAAS,EAA/C,SACE,cAACC,EAAA,EAAD,CACE5C,kBAAgB,EAChB6C,YA3CYR,EA2CWC,EAAWQ,SA1C3B,kBAATT,EAAiC,EACxB,kBAATA,EAAiC,EACxB,mBAATA,EAAkC,EACzB,wBAATA,EAAuC,EAC9B,WAATA,EAA0B,EACjB,gBAATA,EAA+B,EACtB,UAATA,EAAyB,EACtB,GAoCDU,UAAW,cAACnD,EAAD,IAHb,SAKGuC,EAAMa,KAAI,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,kBAAmB/B,EAA9B,SAAiD4B,KADxCA,U,2ECxGfI,GAAQnE,IAAOoE,IAAV,gDAILC,GAAQrE,IAAOoE,IAAV,8EAMLE,GAAUtE,IAAOoE,IAAV,wIAeEG,GAPoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAO1H,EAAV,EAAUA,SAAV,OACjC,eAACwH,GAAD,WACE,cAACH,GAAD,UAAQK,IACR,cAACH,GAAD,UAAQvH,QCxBN2H,GAAYzE,IAAOoE,IAAV,0GAiBAM,GANe,SAAC,GAAD,IAAG5H,EAAH,EAAGA,SAAH,OAC5B,cAAC2H,GAAD,UACG3H,KChBC6H,GAAiB,SAACC,GAAD,IAA0BC,EAA1B,+DAAwD,IAAIC,KAAKC,aAAa,QAAS,CAC5GC,MAAOH,EAAoB,WAAa,UACxCI,SAAU,MACVC,sBAAuB,IACtBC,QAAQP,IAELQ,GAAa,SAACC,GAAD,cAAkBA,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMC,MAAM,IAAIC,QAAO,SAACC,EAAa7F,EAAe8F,GAA7B,OAA2CD,GAAa,IAANC,GAAiB,IAANA,EAAX,UAAwB9F,EAAxB,KAAmCA,KAAQ,KCKnJ+F,GAAa1F,YAAO2F,IAAP3F,CAAH,0EAoED4F,GA9DS,WACtB,IAAQvG,EAAiBO,IAAjBP,aACR,EAA4BwG,mBAAc,IAA1C,mBAAOjB,EAAP,KAAekB,EAAf,KAEMC,EAAe,SAACC,GACpBF,EAAUE,EAAMxK,OAAOmE,QAEzB,OACE,eAAC,GAAD,WACE,cAACsG,GAAA,EAAD,CAAYC,QAAQ,KAApB,kCACA,eAACR,GAAD,WACE,cAACO,GAAA,EAAD,CAAYC,QAAQ,KAApB,gCAGA,cAAC,GAAD,CAAY1B,MAAM,8BAAlB,SACE,cAACyB,GAAA,EAAD,CAAYC,QAAQ,KAApB,SACG7G,EAAab,SAAb,UAA2B4G,GAAW/F,EAAazD,QAAQS,YAAYC,cAAvE,cAA0F8I,GAAW/F,EAAazD,QAAQS,YAAYE,iBAG3I,cAAC,GAAD,CAAYiI,MAAM,oCAAlB,SACE,cAAC2B,GAAA,EAAD,CAAa5C,GAAI,CAAE6C,SAAU,SAAWC,KAAK,QAA7C,SAEE,eAACC,GAAA,EAAD,CACE3G,MAAOiF,EACP2B,SAAUR,EAFZ,UAIE,cAACS,GAAA,EAAD,CAAU7G,MAAO,EAAjB,eACA,cAAC6G,GAAA,EAAD,CAAU7G,MAAO,EAAjB,eACA,cAAC6G,GAAA,EAAD,CAAU7G,MAAO,EAAjB,sBAIN,cAACsG,GAAA,EAAD,CAAYC,QAAQ,KAApB,iCAGA,cAAC,GAAD,CAAY1B,MAAM,2BAAlB,SACE,cAAC2B,GAAA,EAAD,CAAa5C,GAAI,CAAE6C,SAAU,SAAWC,KAAK,QAA7C,SAEE,eAACC,GAAA,EAAD,CACE3G,MAAOiF,EACP2B,SAAUR,EAFZ,UAIE,cAACS,GAAA,EAAD,CAAU7G,MAAM,OAAhB,2CACA,cAAC6G,GAAA,EAAD,CAAU7G,MAAM,SAAhB,+CACA,cAAC6G,GAAA,EAAD,CAAU7G,MAAM,WAAhB,uDAIN,cAACsG,GAAA,EAAD,CAAYC,QAAQ,KAApB,qBAGA,cAAC,GAAD,CAAY1B,MAAM,uBAAlB,SACE,cAACiC,GAAA,EAAD,MAEF,cAAC,EAAD,CAAenG,GAAG,gBAAlB,SACE,cAACoG,EAAA,EAAD,CAAQR,QAAQ,YAAhB,kC,UChEJR,GAAa1F,YAAO2F,IAAP3F,CAAH,wLAiCD2G,GAtBQ,WACrB,IAAQtH,EAAiBO,IAAjBP,aAER,OACE,eAAC,GAAD,WACE,cAAC4G,GAAA,EAAD,CAAYC,QAAQ,KAApB,wCACA,eAAC,GAAD,WACE,cAACD,GAAA,EAAD,CAAYC,QAAQ,KAApB,SACG7G,EAAab,SAAb,8BAAyCa,EAAazD,QAAQC,KAAKC,KAAnE,qIAEH,eAACmK,GAAA,EAAD,CAAYC,QAAQ,KAApB,UACE,cAACU,GAAA,EAAD,IACCvH,EAAab,SAAb,UAA2B4G,GAAW/F,EAAazD,QAAQS,YAAYC,cAAvE,cAA0F8I,GAAW/F,EAAazD,QAAQS,YAAYE,gBAEzI,cAAC,EAAD,CAAe+D,GAAG,gBAAlB,SACE,cAACoG,EAAA,EAAD,CAAQR,QAAQ,YAAhB,kC,4DC9BV,SAASW,GAAWC,GAAoC,IAAvBC,EAAsB,wDAC/CC,EAAQF,EAEXG,QAAQ,YAAY,SAACC,GAAD,OAAcA,EAASC,WAAW,IAAK,kBAC3D7B,MAAM,KACNxB,KAAI,SAACsD,GAAD,OAAUA,EAAKD,WAAW,cAAe,QAChD,OAAIJ,EAAqBC,EAAMlD,KAAI,SAACsD,GAAD,OAAUA,EAAKD,WAAW,IAAK,OAC3DH,EAIT,SAASK,GAAeC,GACtB,IAAMR,EAAMQ,EAAKC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAAW,aAC1C,OAAKX,EAEED,GAAWC,GAAK,GAAM,GAFZ,UAMnB,SAASY,GAA6BJ,GACpC,IAAMR,EAAMQ,EAAKC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAAW,aAAWR,QAAQ,iBAAkB,SAE/E,OAAKH,EAEED,GAAWC,GAAK,GAAM,GAFZ,UAMnB,SAASa,GAAsBL,GAC7B,IAAMR,EAAMQ,EAAKC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAAW,cAC1C,IAAKX,EAAK,MAAO,GAEjB,MAAyCD,GAAWC,GAAK,GAAzD,mBAAShL,EAAT,KAAeG,EAAf,KAAuB2L,EAAvB,KAAgCxL,EAAhC,KACA,MAAO,CACLN,OACAG,SACAC,KAAM0L,EAAQtC,MAAM,KAAK,GACzBnJ,QAASyL,EAAQtC,MAAM,KAAK,GAC5BlJ,SAKJ,SAASyL,GAAeP,GACtB,IAAMQ,EAAiBR,EAAKC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAAW,aAC/CM,EAAkBT,EAAKC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAAW,cAEtD,EAAuCK,EAAiBjB,GAAWiB,GAAkB,GAArF,mBAAWxL,EAAX,KAAyBC,EAAzB,KACA,EAAyCwL,EAAkBlB,GAAWkB,GAAmB,GAAzF,mBAEA,MAAO,CACLzL,eACAC,aACAC,cALF,KAMEC,YANF,MAaF,SAASuL,GAAYV,GAEnB,OAAOA,EAAK/B,QAAO,SAAC7I,EAAUoK,GAM5B,GAAIA,EAAIW,WAAW,OAAQ,CACzB,MAA8BZ,GAAWC,GAAzC,mBAASmB,EAAT,KAAeC,EAAf,KAAmB3K,EAAnB,KACM4K,GAA+B,IAAlBC,OAAOH,GAAe,kBAAoB,iBAQ7D,OAPO,2BACFvL,GADE,kBAEJwL,EAFI,2BAGCxL,EAASwL,GAAMxL,EAASwL,GAbN,CAAEpM,KAAM,GAAIuM,gBAAiB,EAAGC,eAAgB,IAUnE,kBAIFH,EAAaC,OAAO7K,OAM3B,GAAIuJ,EAAIW,WAAW,QAAS,CAC1B,MAA8BZ,GAAWC,GAAzC,mBAASmB,EAAT,KAAeC,EAAf,KAAmB3K,EAAnB,KACM4K,GAA+B,IAAlBC,OAAOH,GAAe,kBAAoB,iBAC7D,OAAO,2BACFvL,GADL,kBAEGwL,EAFH,2BAGQxL,EAASwL,GAAMxL,EAASwL,GA1BN,CAAEpM,KAAM,GAAIuM,gBAAiB,EAAGC,eAAgB,IAuB1E,kBAIKH,EAAaC,OAAO7K,OAK3B,OAAOb,IACN,IAoBU6L,OAjBf,SAA+BC,GAC7B,IAAMlB,EAAOkB,EACVrB,WAAW,KAAM,IACjB7B,MAAM,MAET,MAAO,CACLzJ,KAAM,CACJC,KAAMuL,GAAeC,GACrBvL,mBAAoB2L,GAA6BJ,GACjDtL,YAAa2L,GAAsBL,IAErCjL,YAAawL,GAAeP,GAC5B5K,SAAUsL,GAAYV,GACtB/J,QAAS,CAAEC,OAAQ,GAAIc,OAAQ,MCkFpBmK,GA9KiC,CAC9C9L,gBAAiB,CACf6H,MAAO,2BACPkE,SAAU,4DACV5L,SAAU,CACR6L,SAAU,CACRnE,MAAO,qBACPoE,aAAc,CACZ,IACA,OAGJC,iBAAkB,CAChBrE,MAAO,4BACPoE,aAAc,CACZ,KACA,OAGJE,aAAc,CACZtE,MAAO,kCACPoE,aAAc,CACZ,KACA,SAKR7L,eAAgB,CACdyH,MAAO,sBACPkE,SAAU,4BACV5L,SAAU,CACRiM,wBAAyB,CACvBvE,MAAO,qCACPoE,aAAc,CACZ,IACA,OAGJI,sBAAuB,CACrBxE,MAAO,8BACPoE,aAAc,CACZ,IACA,OAGJK,WAAY,CACVzE,MAAO,oBACPoE,aAAc,CACZ,IACA,OAGJM,+BAAgC,CAC9B1E,MAAO,wDACPoE,aAAc,CACZ,KACA,OAGJO,4BAA6B,CAC3B3E,MAAO,4BACPoE,aAAc,CACZ,KACA,OAGJQ,uBAAwB,CACtB5E,MAAO,gCACPoE,aAAc,CACZ,KACA,SAKR5L,eAAgB,CACdwH,MAAO,qBACPkE,SAAU,2BACV5L,SAAU,CACRuM,mCAAoC,CAClC7E,MAAO,0CACPoE,aAAc,CACZ,IACA,OAGJU,uCAAwC,CACtC9E,MAAO,yDACPoE,aAAc,CACZ,KACA,OAGJW,gCAAiC,CAC/B/E,MAAO,qEACPoE,aAAc,CACZ,KACA,OAGJY,mCAAoC,CAClChF,MAAO,4DACPoE,aAAc,CACZ,KACA,OAGJa,sCAAuC,CACrCjF,MAAO,gDACPoE,aAAc,CACZ,KACA,SAKR3L,oBAAqB,CACnBuH,MAAO,wBACPkE,SAAU,8BACV5L,SAAU,CACR4M,iBAAkB,CAChBlF,MAAO,+FACPoE,aAAc,CACZ,KACA,OAGJe,8BAA+B,CAC7BnF,MAAO,0DACPoE,aAAc,CACZ,KACA,SAKR1L,MAAO,CACLsH,MAAO,UACPkE,SAAU,GACV5L,SAAU,CACR8M,gBAAiB,CACfpF,MAAO,kCACPoE,aAAc,CACZ,KACA,SAKRzL,gBAAiB,CACfqH,MAAO,qBACPkE,SAAU,GACV5L,SAAU,IAEZM,gBAAiB,CACfoH,MAAO,oCACPkE,SAAU,GACV5L,SAAU,IAEZO,kBAAmB,CACjBmH,MAAO,yBACPkE,SAAU,GACV5L,SAAU,IAEZQ,WAAY,CACVkH,MAAO,oBACPkE,SAAU,GACV5L,SAAU,KC5Ld,SAAS+M,GACPnN,EACAoN,GAEA,OAAOC,OAAOC,QAAQtN,GACnB6I,QAAO,SAAC0E,EAAD,GAAgC,IAAD,mBAAxBC,EAAwB,KAAbC,EAAa,KAC/BC,EAAgBhC,OAAO8B,GACvBG,EAAYN,OAAOC,QAAQvB,GAAeqB,GAAShN,UACtDyK,MAAK,YAAuC,IAAD,sCAAhCqB,aAAgC,GAAjB0B,EAAiB,KAAZC,EAAY,KAC1C,OAAIH,GAAiBE,GAAOF,GAAiBG,KAGjD,IAAKF,EAAW,OAAOJ,EAEvB,IAAMO,EAAsBH,EAAU,GAChCI,EAAqBR,EAAInN,SAAS0N,GACxC,MAAO,CACL5N,QAASqN,EAAIrN,QAAUuN,EAAQ7B,eAC/BzL,SAAUoN,EAAIpN,SAAWsN,EAAQ9B,gBACjCvL,SAAS,2BACJmN,EAAInN,UADD,kBAEL0N,EAAsB,CACrB5N,QAAS6N,EAAmB7N,QAAUuN,EAAQ7B,eAC9CzL,SAAU4N,EAAmB5N,SAAWsN,EAAQ9B,sBAIrD,CACDzL,QAAS,EACTC,SAAU,EACVC,SAAUiN,OAAOW,YAAYX,OAAOY,KAAKlC,GAAeqB,GAAShN,UAC9DgH,KAAI,SAACU,GAAD,MAAW,CAACA,EAAO,CAAE5H,QAAS,EAAGC,SAAU,UAIxD,SAAS+N,GAAQC,GACf,OAAOA,EAAKtF,QAAO,SAAC0E,EAAD,OAAQrN,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAjB,MAAiC,CAClDD,QAASA,EAAUqN,EAAIrN,QACvBC,SAAUA,EAAWoN,EAAIpN,SACzBC,SAAU,OA6BCgO,I,GAAAA,GAzBf,SAA0BpO,GACxB,IAAMC,EAAkBkN,GAAWnN,EAAU,mBACvCK,EAAiB8M,GAAWnN,EAAU,kBACtCM,EAAiB6M,GAAWnN,EAAU,kBACtCO,EAAsB4M,GAAWnN,EAAU,uBAC3CQ,EAAQ2M,GAAWnN,EAAU,SAE7BS,EAAkByN,GAAQ,CAACjO,EAAiBI,IAC5CK,EAAkBwN,GAAQ,CAACzN,EAAiBH,IAC5CK,EAAoBuN,GAAQ,CAACxN,EAAiBH,IAGpD,MAAO,CACLN,kBACAI,iBACAC,iBACAC,sBACAC,QACAC,kBACAC,kBACAC,oBACAC,WAXiBsN,GAAQ,CAACvN,EAAmBH,MCkwBlC6N,GA7xBmC,CAChDtN,cAAe,CACb+G,MAAO,2CACPkE,SAAU,iDACV5L,SAAU,CACRkO,QAAS,CACPxG,MAAO,sBACPoE,aAAc,CACZ,KACA,OAGJqC,QAAS,CACPzG,MAAO,2CACPoE,aAAc,CACZ,KACA,OAGJsC,SAAU,CACR1G,MAAO,2CACPoE,aAAc,CACZ,KACA,OAGJuC,KAAM,CACJ3G,MAAO,sBACPoE,aAAc,CACZ,KACA,OAGJwC,kBAAmB,CACjB5G,MAAO,gEACPoE,aAAc,CACZ,KACA,SAKRlL,oBAAqB,CACnB8G,MAAO,yCACPkE,SAAU,+CACV5L,SAAU,CACRuO,uBAAwB,CACtB7G,MAAO,qBACPoE,aAAc,CACZ,KACA,OAGJ0C,qBAAsB,CACpB9G,MAAO,oDACPoE,aAAc,CACZ,KACA,OAGJ2C,wBAAyB,CACvB/G,MAAO,qBACPoE,aAAc,CACZ,KACA,OAGJ4C,0BAA2B,CACzBhH,MAAO,mGACPoE,aAAc,CACZ,KACA,OAGJ6C,wBAAyB,CACvBjH,MAAO,qBACPoE,aAAc,CACZ,KACA,OAGJ8C,SAAU,CACRlH,MAAO,8CACPoE,aAAc,CACZ,KACA,OAGJ+C,kBAAmB,CACjBnH,MAAO,0CACPoE,aAAc,CACZ,KACA,OAGJgD,mBAAoB,CAClBpH,MAAO,0CACPoE,aAAc,CACZ,KACA,OAGJiD,iBAAkB,CAChBrH,MAAO,mDACPoE,aAAc,CACZ,KACA,SAKRjL,qBAAsB,CACpB6G,MAAO,0CACPkE,SAAU,gDACV5L,SAAU,CACRgP,YAAa,CACXtH,MAAO,8BACPoE,aAAc,CACZ,KACA,OAGJmD,kBAAmB,CACjBvH,MAAO,mCACPoE,aAAc,CACZ,KACA,OAGJoD,uBAAwB,CACtBxH,MAAO,+DACPoE,aAAc,CACZ,KACA,OAGJqD,yBAA0B,CACxBzH,MAAO,0CACPoE,aAAc,CACZ,KACA,OAGJsD,yBAA0B,CACxB1H,MAAO,+DACPoE,aAAc,CACZ,KACA,OAGJuD,qBAAsB,CACpB3H,MAAO,oEACPoE,aAAc,CACZ,KACA,OAGJwD,8BAA+B,CAC7B5H,MAAO,wEACPoE,aAAc,CACZ,KACA,OAGJyD,sBAAuB,CACrB7H,MAAO,oEACPoE,aAAc,CACZ,KACA,OAGJ0D,oBAAqB,CACnB9H,MAAO,+CACPoE,aAAc,CACZ,KACA,OAGJ2D,YAAa,CACX/H,MAAO,iDACPoE,aAAc,CACZ,KACA,OAGJ4D,gBAAiB,CACfhI,MAAO,mCACPoE,aAAc,CACZ,KACA,SAKRzK,YAAa,CACXqG,WAAOhF,EACPkJ,SAAU,qCACV5L,SAAU,IAEZe,aAAc,CACZ2G,MAAO,uDACPkE,SAAU,oDACV5L,SAAU,CACR2P,aAAc,CACZjI,MAAO,qCACPoE,aAAc,CACZ,KACA,OAGJ8D,4BAA6B,CAC3BlI,MAAO,2BACPoE,aAAc,CACZ,KACA,OAGJ+D,cAAe,CACbnI,MAAO,qCACPoE,aAAc,CACZ,KACA,OAGJgE,6BAA8B,CAC5BpI,MAAO,2BACPoE,aAAc,CACZ,KACA,OAGJiE,cAAe,CACbrI,MAAO,oCACPoE,aAAc,CACZ,KACA,OAGJkE,oBAAqB,CACnBtI,MAAO,iDACPoE,aAAc,CACZ,KACA,OAGJmE,eAAgB,CACdvI,MAAO,mCACPoE,aAAc,CACZ,KACA,OAGJoE,iBAAkB,CAChBxI,MAAO,+BACPoE,aAAc,CACZ,KACA,SAMR9K,mBAAoB,CAClB0G,MAAO,iBACPkE,SAAU,uBACV5L,SAAU,CACRgB,mBAAoB,CAClB0G,MAAO,iBACPoE,aAAc,CACZ,KACA,OAGJmD,kBAAmB,CACjBvH,MAAO,mCACPoE,aAAc,CACZ,KACA,OAGJqE,mBAAoB,CAClBzI,MAAO,mCACPoE,aAAc,CACZ,KACA,OAGJsE,uBAAwB,CACtB1I,MAAO,oEACPoE,aAAc,CACZ,KACA,OAGJuE,wBAAyB,CACvB3I,MAAO,oEACPoE,aAAc,CACZ,KACA,OAGJwE,oBAAqB,CACnB5I,MAAO,0EACPoE,aAAc,CACZ,KACA,OAGJyE,qBAAsB,CACpB7I,MAAO,0EACPoE,aAAc,CACZ,KACA,OAGJ0E,wBAAyB,CACvB9I,MAAO,oEACPoE,aAAc,CACZ,KACA,OAGJ2E,wBAAyB,CACvB/I,MAAO,oEACPoE,aAAc,CACZ,KACA,OAGJ4E,YAAa,CACXhJ,MAAO,uBACPoE,aAAc,CACZ,KACA,OAGJ6E,aAAc,CACZjJ,MAAO,uBACPoE,aAAc,CACZ,KACA,OAGJ8E,aAAc,CACZlJ,MAAO,uBACPoE,aAAc,CACZ,KACA,SAKR7K,iBAAkB,CAChByG,MAAO,qDACPkE,SAAU,2DACV5L,SAAU,CACR6Q,eAAgB,CACdnJ,MAAO,yCACPoE,aAAc,CACZ,KACA,OAGJqC,QAAS,CACPzG,MAAO,mCACPoE,aAAc,CACZ,KACA,SAKR5K,6BAA8B,CAC5BwG,MAAO,oCACPkE,SAAU,0CACV5L,SAAU,CACRkB,6BAA8B,CAC5BwG,MAAO,qDACPoE,aAAc,CACZ,KACA,SAMR3K,gBAAiB,CACfuG,MAAO,2BACPkE,SAAU,iCACV5L,SAAU,CACR8Q,qBAAsB,CACpBpJ,MAAO,qCACPoE,aAAc,CACZ,KACA,OAGJiF,mBAAoB,CAClBrJ,MAAO,8BACPoE,aAAc,CACZ,KACA,OAGJkF,sBAAuB,CACrBtJ,MAAO,qCACPoE,aAAc,CACZ,KACA,SAOR1K,oBAAqB,CACnBsG,MAAO,iBACPkE,SAAU,uBACV5L,SAAU,CACRiR,YAAa,CACXvJ,MAAO,iBACPoE,aAAc,CACZ,KACA,OAGJqC,QAAS,CACPzG,MAAO,oBACPoE,aAAc,CACZ,KACA,SAMRxK,cAAe,CACboG,WAAOhF,EACPkJ,SAAU,qCACV5L,SAAU,IAEZuB,WAAY,CACVmG,WAAOhF,EACPkJ,SAAU,uBACV5L,SAAU,IAEZwB,OAAQ,CACNkG,MAAO,eACPkE,SAAU,qBACV5L,SAAU,CACRkR,aAAc,CACZxJ,MAAO,eACPoE,aAAc,CACZ,KACA,OAGJqF,wBAAyB,CACvBzJ,MAAO,8BACPoE,aAAc,CACZ,KACA,OAGJsF,cAAe,CACb1J,MAAO,eACPoE,aAAc,CACZ,KACA,OAGJuF,YAAa,CACX3J,MAAO,oBACPoE,aAAc,CACZ,KACA,OAGJwF,YAAa,CACX5J,MAAO,aACPoE,aAAc,CACZ,KACA,OAGJyF,cAAe,CACb7J,MAAO,yBACPoE,aAAc,CACZ,KACA,OAGJ0F,eAAgB,CACd9J,MAAO,sBACPoE,aAAc,CACZ,KACA,OAGJ2F,gBAAiB,CACf/J,MAAO,sBACPoE,aAAc,CACZ,KACA,OAGJ4F,gBAAiB,CACfhK,MAAO,sBACPoE,aAAc,CACZ,KACA,OAGJ6F,WAAY,CACVjK,MAAO,sBACPoE,aAAc,CACZ,KACA,OAGJ8F,WAAY,CACVlK,MAAO,uBACPoE,aAAc,CACZ,KACA,OAGJ+F,qBAAsB,CACpBnK,MAAO,oCACPoE,aAAc,CACZ,KACA,OAGJgG,gBAAiB,CACfpK,MAAO,iCACPoE,aAAc,CACZ,KACA,OAGJiG,SAAU,CACRrK,MAAO,oIACPoE,aAAc,CACZ,KACA,OAGJkG,aAAc,CACZtK,MAAO,4BACPoE,aAAc,CACZ,KACA,OAGJmG,cAAe,CACbvK,MAAO,2EACPoE,aAAc,CACZ,KACA,OAGJoG,cAAe,CACbxK,MAAO,4BACPoE,aAAc,CACZ,KACA,SAKRqG,YAAa,CACXzK,MAAO,UACPkE,SAAU,gBACV5L,SAAU,CACRoS,eAAgB,CACd1K,MAAO,oBACPoE,aAAc,CACZ,KACA,OAGJuG,YAAa,CACX3K,MAAO,yBACPoE,aAAc,CACZ,KACA,OAGJwG,qBAAsB,CACpB5K,MAAO,wCACPoE,aAAc,CACZ,KACA,OAGJyG,mBAAoB,CAClB7K,MAAO,iCACPoE,aAAc,CACZ,KACA,OAGJ0G,wBAAyB,CACvB9K,MAAO,kEACPoE,aAAc,CACZ,KACA,OAGJ2G,+BAAgC,CAC9B/K,MAAO,wEACPoE,aAAc,CACZ,KACA,OAGJ4G,yBAA0B,CACxBhL,MAAO,kEACPoE,aAAc,CACZ,KACA,OAGJ6G,WAAY,CACVjL,MAAO,oBACPoE,aAAc,CACZ,KACA,OAGJ8G,sBAAuB,CACrBlL,MAAO,wCACPoE,aAAc,CACZ,KACA,OAGJ+G,uBAAwB,CACtBnL,MAAO,6BACPoE,aAAc,CACZ,KACA,OAGJgH,oBAAqB,CACnBpL,MAAO,iDACPoE,aAAc,CACZ,KACA,OAGJiH,gBAAiB,CACfrL,MAAO,wBACPoE,aAAc,CACZ,KACA,OAGJkH,qBAAsB,CACpBtL,MAAO,yCACPoE,aAAc,CACZ,KACA,OAGJmH,iBAAkB,CAChBvL,MAAO,iCACPoE,aAAc,CACZ,KACA,OAGJoH,sBAAuB,CACrBxL,MAAO,kEACPoE,aAAc,CACZ,KACA,OAGJqH,2BAA4B,CAC1BzL,MAAO,wEACPoE,aAAc,CACZ,KACA,OAGJsH,uBAAwB,CACtB1L,MAAO,kEACPoE,aAAc,CACZ,KACA,OAGJuH,iBAAkB,CAChB3L,MAAO,yBACPoE,aAAc,CACZ,KACA,OAGJwH,UAAW,CACT5L,MAAO,oBACPoE,aAAc,CACZ,KACA,OAGJyH,WAAY,CACV7L,MAAO,kBACPoE,aAAc,CACZ,KACA,OAGJ0H,WAAY,CACV9L,MAAO,oBACPoE,aAAc,CACZ,KACA,OAGJ2H,QAAS,CACP/L,MAAO,gBACPoE,aAAc,CACZ,KACA,OAGJ4H,WAAY,CACVhM,MAAO,oBACPoE,aAAc,CACZ,KACA,OAGJ6H,WAAY,CACVjM,MAAO,oBACPoE,aAAc,CACZ,KACA,OAGJ8H,kBAAmB,CACjBlM,MAAO,iCACPoE,aAAc,CACZ,KACA,OAGJ+H,uBAAwB,CACtBnM,MAAO,kEACPoE,aAAc,CACZ,KACA,OAGJgI,4BAA6B,CAC3BpM,MAAO,wEACPoE,aAAc,CACZ,KACA,OAGJiI,uBAAwB,CACtBrM,MAAO,kEACPoE,aAAc,CACZ,KACA,OAGJkI,WAAY,CACVtM,MAAO,oBACPoE,aAAc,CACZ,KACA,OAGJmI,oBAAqB,CACnBvM,MAAO,qDACPoE,aAAc,CACZ,KACA,SAKRhL,gBAAiB,CACf4G,WAAOhF,EACPkJ,SAAU,uBACV5L,SAAU,KChzBd,SAAS+M,GACPnN,EACAoN,GAEA,OAAOC,OAAOC,QAAQtN,GACnB6I,QAAO,SAAC0E,EAAD,GAAgC,IAAD,mBAAxBC,EAAwB,KAAbC,EAAa,KAC/BC,EAAgBhC,OAAO8B,GACvB8G,EAAajH,OAAOC,QAAQe,GAAgBjB,GAAShN,UACxDyK,MAAK,YAAuC,IAAD,sCAAhCqB,aAAgC,GAAjB0B,EAAiB,KAAZC,EAAY,KAC1C,OAAIH,GAAiBE,GAAOF,GAAiBG,KAGjD,IAAKyG,EAAY,OAAO/G,EAExB,IAAMgH,EAAuBD,EAAW,GAClCvG,EAAqBR,EAAInN,SAASmU,GACxC,MAAO,CACLrU,QAASqN,EAAIrN,QAAUuN,EAAQ7B,eAC/BzL,SAAUoN,EAAIpN,SAAWsN,EAAQ9B,gBACjCvL,SAAS,2BACJmN,EAAInN,UADD,kBAELmU,EAAuB,CACtBrU,QAAS6N,EAAmB7N,QAAUuN,EAAQ7B,eAC9CzL,SAAU4N,EAAmB5N,SAAWsN,EAAQ9B,sBAIrD,CACDzL,QAAS,EACTC,SAAU,EACVC,SAAUiN,OAAOW,YAAYX,OAAOY,KAAKI,GAAgBjB,GAAShN,UAC/DgH,KAAI,SAACU,GAAD,MAAW,CAACA,EAAO,CAAE5H,QAAS,EAAGC,SAAU,UAIxD,SAAS+N,GAAQC,GACf,OAAOA,EAAKtF,QAAO,SAAC0E,EAAD,OAAQrN,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAjB,MAAiC,CAClDD,QAASA,EAAUqN,EAAIrN,QACvBC,SAAUA,EAAWoN,EAAIpN,SACzBC,SAAU,OAId,SAASoU,GAAuBxU,GAC9B,IAAMwB,EAAsB2L,GAAWnN,EAAU,uBAC3CoB,EAAqB+L,GAAWnN,EAAU,sBAC1CiB,EAAuBkM,GAAWnN,EAAU,wBAC5Ce,EAAgBoM,GAAWnN,EAAU,iBACrCgB,EAAsBmM,GAAWnN,EAAU,uBAC3CqB,EAAmB8L,GAAWnN,EAAU,oBACxCsB,EAA+B6L,GAAWnN,EAAU,gCACpDmB,EAAegM,GAAWnN,EAAU,gBACpCuB,EAAkB4L,GAAWnN,EAAU,mBAEvCyB,EAAcyM,GAAQ,CAACjN,EAAsBF,EAAeC,IAE5DU,EAAgBwM,GAAQ,CAAC1M,EAC7BJ,EAAoBC,EACpBC,EACAH,EAAcI,IAIhB,MAAO,CACLE,cACAC,gBACAH,kBACAJ,eACAG,+BACAD,mBACAL,sBACAD,gBACAE,uBACAG,qBACAI,sBACAG,WAdiBuM,GAAQ,CAACzM,EAAaC,KCvD3C,I,GAAM+S,GAAWnR,IAAOoE,IAAV,gMAqCCgN,GA3BEC,cAAS,WACxB,IAAQhS,EAAiBO,IAAjBP,aACFiS,EAAY,yCAAG,WAAOC,GAAP,kBAAAC,EAAA,sEACGC,aAAWF,EAAc,IAD5B,OACbG,EADa,QAEb9V,EAAU2M,GAAsBmJ,IAC9BjW,OAASqP,GAAiBlP,EAAQc,UAC1Cd,EAAQ2B,QAAQC,OAAS0T,GAAuBtV,EAAQc,UACxDd,EAAQ2B,QAAQe,OD4DX,CACL2Q,YAJkBpF,GADUnN,ECxDoBd,EAAQc,SDyDjB,eAKvC4B,OAJauL,GAAWnN,EAAU,WCzDlC2C,EAAaT,QAAQhD,GACrBoD,aAAaC,QAAQ,cAAeC,KAAKC,UAAUvD,IAPhC,iCD6DvB,IAAgCc,IC7DT,OAAH,sDAUlB,OACE,cAAC,KAAD,CAAUiV,OAAQL,EAAlB,SACG,gBAAGM,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OAEC,eAACV,GAAD,2BAAcS,KAAd,cACE,qCAAWC,MACX,kGC7BJnM,GAAa1F,YAAO2F,IAAP3F,CAAH,0LAqCD8R,GA1BCT,cAAS,WACvB,IAAQhS,EAAiBO,IAAjBP,aAER,OACE,eAAC,GAAD,WACE,cAAC,GAAD,IAEA,eAAC,GAAD,WACGA,EAAab,SACZ,qCACE,cAACyH,GAAA,EAAD,CAAYC,QAAQ,KAApB,SACG7G,EAAazD,QAAQC,KAAKC,OAE7B,cAACmK,GAAA,EAAD,CAAYC,QAAQ,KAApB,SACG7G,EAAazD,QAAQC,KAAKE,wBAIjC,cAAC,EAAD,CAAeqE,UAAWf,EAAab,QAAS8B,GAAG,eAAnD,SACE,cAACoG,EAAA,EAAD,CAAQtG,UAAWf,EAAab,QAAS0H,QAAQ,YAAjD,oC,6BC/BKP,GAJF3F,YAAO+R,IAAP/R,EAA2B,iBAAO,CAC7CQ,QAAS,WC+BIwR,GArBkB,SAAC,GAAD,IAC/BC,EAD+B,EAC/BA,SAAUC,EADqB,EACrBA,OAAQC,EADa,EACbA,MAAOC,EADM,EACNA,WAAYxV,EADN,EACMA,QAASC,EADf,EACeA,SAAUwV,EADzB,EACyBA,MAAOvV,EADhC,EACgCA,SADhC,OAG/B,eAACwV,EAAA,EAAD,CAAMC,GAAI,GAAIC,WAAS,EAACC,UAAW,GAAnC,UACE,cAACH,EAAA,EAAD,CAAMI,GAAI,EAAGC,IAAKR,GAAS,GAAIS,GAAI,EAAGC,MAAI,EAACC,UAAU,SAArD,SACGT,EAAQ,cAACpM,GAAA,EAAD,CAAYC,QAAQ,KAAK4M,UAAU,SAASC,WAAYb,GAAU,IAAlE,SAAwED,IAAyB,cAAChM,GAAA,EAAD,CAAY6M,UAAU,SAASC,WAAYb,GAAU,IAArD,SAA2DD,MAGvK,cAACK,EAAA,EAAD,CAAMI,GAAI,EAAGI,UAAU,SAASD,MAAI,EAACD,GAAI,EAAGI,UAAWb,IAAUC,GAAc,iBAAkBI,WAAS,EAA1G,SACG5V,GAAWE,IAEbD,GAED,cAACyV,EAAA,EAAD,CAAMI,GAAI,EAAGG,MAAI,EAACD,GAAI,EAAGI,UAAWb,IAAUC,GAAc,iBAAkBI,WAAS,EAAvF,SACG3V,Q,UCDQoW,GAnBc,SAAC,GAAD,IAC3BzO,EAD2B,EAC3BA,MAD2B,IACpB0O,gBADoB,SACFC,EADE,EACFA,QAASrW,EADP,EACOA,SADP,OAG3B,cAACsW,GAAA,EAAD,CAAOC,UAAW,EAAGrO,MAAO,CAAExE,QAAS,OAAQc,gBAAiB,UAAWgS,UAAW,QAAtF,SACGJ,EACC,qCACE,cAACjN,GAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B1B,IACzB1H,KAGH,sBAAKkI,MAAO,CAAEjD,QAAS,OAAQwR,IAAK,QAAStR,WAAY,UAAzD,UACE,8BAAMuC,IACN,cAACiC,GAAA,EAAD,CAAQ3K,KAAM0I,EAAO2O,QAASA,UCSvBK,GApBkB,SAAC,GAAD,IAC/BvB,EAD+B,EAC/BA,SAAUnV,EADqB,EACrBA,SAAUF,EADW,EACXA,QAASC,EADE,EACFA,SADE,OAI/B,eAACyV,EAAA,EAAD,CAAMC,GAAI,GAAIC,WAAS,EAACC,UAAW,GAAnC,UACE,cAACH,EAAA,EAAD,CAAMI,GAAI,GAAIE,GAAI,EAAGC,MAAI,EAACC,UAAU,SAApC,SACE,cAAC7M,GAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B+L,MAE5B,cAACK,EAAA,EAAD,CAAMI,GAAI,GAAIG,MAAI,EAACD,GAAI,EAAGJ,WAAS,EAAnC,SACE,cAACvM,GAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BtJ,GAAWE,MAEtCD,GACD,cAACyV,EAAA,EAAD,CAAMI,GAAI,GAAIG,MAAI,EAACD,GAAI,EAAGJ,WAAS,EAAnC,SACE,cAACvM,GAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BrJ,UCuDjB4W,GA/DGpC,cAAS,WACzB,IAAQhS,EAAiBO,IAAjBP,aAER,EAAsCwG,mBAAS,IAAI6N,KAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KAEMT,EAAU,SAACjY,GACf0Y,GAAe,SAACC,GAAD,OAAmB,IAAIH,IAAJ,uBAAYG,GAAZ,CAA2B3Y,EAAEM,OAAOM,YAGxE,OACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAUmW,SAAS,UACnB,eAAC,GAAD,CAAMiB,UAAQ,EAAC1O,MAAM,wBAArB,UACE,cAAC,GAAD,CAAU6N,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,YAAYrV,QAAS,cAACkX,GAAA,EAAD,CAAkBC,KAAM,GAAIC,QAAS,EAAGC,UAAW,QACzH,cAAC,GAAD,CAAU5B,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,uCACjD,cAAC,GAAD,CAAUC,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,iFAAwErV,QAAS,cAAC6J,GAAA,EAAD,MAC5H,cAAC,GAAD,CAAU4L,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,0BACjD,cAAC,GAAD,CAAUC,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,sCAAmCrV,QAAS,cAAC6J,GAAA,EAAD,SAEzF,eAAC,GAAD,CAAMyM,UAAQ,EAAC1O,MAAM,0BAArB,UACE,cAAC,GAAD,CAAUyN,SAAS,GAAGrV,QAAO,UAAKwI,GAAW/F,EAAazD,QAAQS,YAAYC,cAAjD,cAAoE8I,GAAW/F,EAAazD,QAAQS,YAAYE,eAC7I,cAAC,GAAD,CACE0V,SAAS,wCACTrV,QACE,cAACsX,GAAA,EAAD,CAAWnQ,MAAM,wBAIvB,cAAC,GAAD,CAAMoP,QAAS,SAACjY,GAAD,OAAOiY,EAAQjY,IAAIgY,SAAUS,EAAYQ,IAAI,4BAAuB3P,MAAM,2BAAzF,SACE,cAAC,GAAD,CAAU6N,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,YAAYrV,QAAS,cAACkX,GAAA,EAAD,CAAkBC,KAAM,GAAIC,QAAS,EAAGC,UAAW,UAG3H,cAAC,GAAD,CAAMd,QAAS,SAACjY,GAAD,OAAOiY,EAAQjY,IAAIgY,SAAUS,EAAYQ,IAAI,4BAA0B3P,MAAM,2BAA5F,SACE,cAAC,GAAD,CAAU6N,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,YAAYrV,QAAS,cAACkX,GAAA,EAAD,CAAkBC,KAAM,GAAIC,QAAS,EAAGC,UAAW,UAG3H,cAAC,GAAD,CAAMd,QAAS,SAACjY,GAAD,OAAOiY,EAAQjY,IAAIgY,SAAUS,EAAYQ,IAAI,0CAAwC3P,MAAM,yCAA1G,SACE,cAAC,GAAD,CAAU6N,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,YAAYrV,QAAS,cAACkX,GAAA,EAAD,CAAkBC,KAAM,GAAIC,QAAS,EAAGC,UAAW,UAG3H,cAAC,GAAD,CAAMd,QAAS,SAACjY,GAAD,OAAOiY,EAAQjY,IAAIgY,SAAUS,EAAYQ,IAAI,qEAAgE3P,MAAM,oEAAlI,SACE,cAAC,GAAD,CAAU6N,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,YAAYrV,QAAS,cAACkX,GAAA,EAAD,CAAkBC,KAAM,GAAIC,QAAS,EAAGC,UAAW,UAG3H,cAAC,GAAD,CAAMd,QAAS,SAACjY,GAAD,OAAOiY,EAAQjY,IAAIgY,SAAUS,EAAYQ,IAAI,kEAAgE3P,MAAM,iEAAlI,SACE,cAAC,GAAD,CAAU6N,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,YAAYrV,QAAS,cAACkX,GAAA,EAAD,CAAkBC,KAAM,GAAIC,QAAS,EAAGC,UAAW,UAG3H,cAAC,GAAD,CAAMd,QAAS,SAACjY,GAAD,OAAOiY,EAAQjY,IAAIgY,SAAUS,EAAYQ,IAAI,yBAAuB3P,MAAM,wBAAzF,SACE,cAAC,GAAD,CAAU6N,OAAK,EAACH,QAAM,EAACC,OAAK,EAACC,YAAU,EAACH,SAAS,YAAYrV,QAAS,cAACkX,GAAA,EAAD,CAAkBC,KAAM,GAAIC,QAAS,EAAGC,UAAW,UAI3H,cAAC,IAAD,CAAS3T,GAAG,cAAZ,SACE,qBAAK0E,MAAO,CAAEjD,QAAS,OAAQC,eAAgB,SAAUsR,UAAW,IAApE,SACE,cAAC5M,EAAA,EAAD,CAAQR,QAAQ,YAAhB,qC,SCtEG,OAA0B,4CCA1B,OAA0B,2CCanCkO,GAASC,aAAWC,OAAO,CAC/BC,QAAS,CACPnO,SAAU,MACVoO,UAAW,OACXC,SAAU,QAGZC,QAAS,CACP5S,MAAO,MACP0S,UAAW,QACXC,SAAU,OAEZE,UAAW,CACT7S,MAAO,MACP0S,UAAW,QACXC,SAAU,OAEZG,SAAU,CACR9S,MAAO,MACP0S,UAAW,QACXC,SAAU,OAEZI,SAAU,CACR/S,MAAO,MACP0S,UAAW,QACXC,SAAU,SA6BCK,GAzBc,SAAC5U,GAC5B,IAAQmB,EAAWnB,EAAXmB,OACAkT,EAAYrU,EAAZqU,QACAG,EAAYxU,EAAZwU,QACAC,EAAczU,EAAdyU,UACAC,EAAa1U,EAAb0U,SACAC,EAAa3U,EAAb2U,SACR,OACE,sBAAK7P,MAAO,CACVjD,QAAS,OAAQgT,cAAe,MAAOzB,UAAW,MAAO9S,QAAS,UAAWwU,aAAc3T,GAAU,mBADvG,UAIE,cAAC,OAAD,CAAM2D,MAAOoP,GAAOG,QAApB,SAA8BA,IAC9B,cAAC,OAAD,CAAMvP,MAAOoP,GAAOM,QAApB,SAA8BA,IAC9B,cAAC,OAAD,CAAM1P,MAAOoP,GAAOO,UAApB,SAAgCA,IAChC,cAAC,OAAD,CAAM3P,MAAOoP,GAAOQ,SAApB,SACGA,IAEH,cAAC,OAAD,CAAM5P,MAAOoP,GAAOS,SAApB,SACGA,QChDHT,GAASC,aAAWC,OAAO,CAC/BC,QAAS,CACPU,WAAY,gBACZ7O,SAAU,MACVoO,UAAW,OACXC,SAAU,QAEZE,UAAW,CACT7S,MAAO,MACP0S,UAAW,QACXC,SAAU,OAEZG,SAAU,CACR9S,MAAO,MACP0S,UAAW,QACXC,SAAU,OAEZI,SAAU,CACR/S,MAAO,MACP0S,UAAW,QACXC,SAAU,SAoBCS,GAhBoB,SAAChV,GAAD,OACjC,sBAAK8E,MAAO,CACVjD,QAAS,OAAQgT,cAAe,MAAOzB,UAAW,MAAO0B,aAAc9U,EAAEmB,QAAU,mBADrF,UAIE,cAAC,OAAD,CAAM2D,MAAOoP,GAAOG,QAApB,SAA8BrU,EAAEqU,UAChC,cAAC,OAAD,CAAMvP,MAAOoP,GAAOO,UAApB,SAAgCzU,EAAEyU,YAClC,cAAC,OAAD,CAAM3P,MAAOoP,GAAOQ,SAApB,SACG1U,EAAE0U,WAEL,cAAC,OAAD,CAAM5P,MAAOoP,GAAOS,SAApB,SACG3U,EAAE2U,eCtBMM,IAfCpL,OAAOC,QAES,SAAC,GAAD,IAAGvO,EAAH,EAAGA,OAAH,OAC9B,mCACGsO,OAAOC,QAAQoL,IAAoBtR,KAAI,mCAAEgG,EAAF,KAAWuL,EAAX,YACtC,cAAC,GAAD,CAEEd,QAASc,EAAY7Q,MACrBoQ,SAAUjQ,GAAelJ,EAAOqO,GAASlN,QAAQ0Y,QAAQ,IACzDT,SAAUlQ,GAAelJ,EAAOqO,GAASjN,SAASyY,QAAQ,KAHrDxL,UCUEyL,IAhBCxL,OAAOC,QAEW,SAAC,GAAD,IAAGzM,EAAH,EAAGA,QAAH,OAChC,mCACGwM,OAAOC,QAAQwL,IAAqB1R,KAAI,+CAAEgG,EAAF,KAAWuL,EAAX,YACvC,UAAA9X,EAAQuM,UAAR,eAAkBlN,WAAlB,UAA6BW,EAAQuM,UAArC,aAA6B,EAAkBjN,UAC7C,cAAC,GAAD,CAEE0X,QAASc,EAAY7Q,OAAS6Q,EAAY3M,SAC1CkM,SAAUjQ,GAAc,UAACpH,EAAQuM,UAAT,iBAAC,EAAkBlN,eAAnB,aAAC,EAA2B0Y,QAAQ,IAC5DT,SAAUlQ,GAAc,UAACpH,EAAQuM,UAAT,iBAAC,EAAkBjN,gBAAnB,aAAC,EAA4ByY,QAAQ,KAHxDxL,GAKL,YCVV2L,OAAKC,SAAS,CAAEC,OAAQ,mBAAoBC,IAAKC,KACjDJ,OAAKC,SAAS,CAAEC,OAAQ,gBAAiBC,IAAKE,KAG9C,IAAM1B,GAASC,aAAWC,OAAO,CAC/ByB,KAAM,CACJhB,cAAe,SACfzT,gBAAiB,OACjBU,eAAgB,SAChBiT,WAAY,mBACZxU,MAAO,WAGTqJ,QAAS,CACPwJ,UAAW,OACX9S,QAAS,YACTwV,SAAU,EACVxB,UAAW,OACXyB,WAAY,KAEdC,MAAO,CACL5C,UAAW,OACX9S,QAAS,OACTwV,SAAU,EACVxB,UAAW,SACXyB,WAAY,KAEdE,OAAQ,CACNpU,QAAS,OACTC,eAAgB,gBAChB+S,cAAe,MACfjC,UAAW,SACX1R,OAAQ,OACR4R,UAAW,kBACXlR,MAAO,MACP2S,SAAU,OACVjU,QAAS,WAEX4V,GAAI,CACF3B,SAAU,QAEZ4B,GAAI,CACF5B,SAAU,OACVnB,UAAW,QAEbgD,GAAI,CACF7B,SAAU,OACVnB,UAAW,QAEbiD,OAAQ,CACN9B,SAAU,OACVnB,UAAW,OACXP,WAAY,SACZkC,WAAY,iBAGduB,GAAI,CACF/B,SAAU,MACVnB,UAAW,OACX7S,MAAO,WAGT8T,QAAS,CACPnO,SAAU,MACVoO,UAAW,OACXC,SAAU,QAEZC,QAAS,CACP5S,MAAO,MACP0S,UAAW,QACXC,SAAU,OAEZE,UAAW,CACT7S,MAAO,MACP0S,UAAW,QACXC,SAAU,OAEZG,SAAU,CACR9S,MAAO,MACP0S,UAAW,QACXC,SAAU,OAEZI,SAAU,CACR/S,MAAO,MACP0S,UAAW,QACXC,SAAU,SA8PCgC,GAzPHpF,cAAS,YAAuD,IAAD,MACjEzV,EADiE,EAAnDyD,aACdzD,QAER,OAEE,cAAC,WAAD,CAAU8a,SAAS,KAAnB,SACE,eAAC,OAAD,CAAMrQ,KAAK,KAAKrB,MAAOoP,GAAO2B,KAA9B,UACE,eAAC,OAAD,CAAM/Q,MAAOoP,GAAO8B,MAApB,UACE,cAAC,OAAD,CAAMlR,MAAOoP,GAAOgC,GAApB,SAAyBxa,EAAQC,KAAKC,OACtC,cAAC,OAAD,CAAMkJ,MAAK,aAAI2R,aAAc,QAAWvC,GAAOiC,IAA/C,gBAAsDza,QAAtD,IAAsDA,GAAtD,UAAsDA,EAASC,YAA/D,aAAsD,EAAeE,qBACrE,cAAC,OAAD,CAAMiJ,MAAOoP,GAAOiC,GAApB,SAAyBxa,OACzB,cAAC,OAAD,CAAMmJ,MAAOoP,GAAOiC,GAApB,mBAA4BjR,GAAWxJ,EAAQS,YAAYC,cAA3D,cAA8E8I,GAAWxJ,EAAQS,YAAYE,eAC7G,cAAC,OAAD,CAAMyI,MAAOoP,GAAOoC,GAApB,SAAyB3a,OACzB,cAAC,OAAD,CAAMmJ,MAAOoP,GAAOoC,GAApB,SAAyB3a,OACzB,cAAC,OAAD,CAAMmJ,MAAK,aAAIsO,UAAW,QAAWc,GAAOoC,IAA5C,SAAmD3a,OACnD,cAAC,OAAD,CAAMmJ,MAAK,aAAIsO,UAAW,QAAWc,GAAOoC,IAA5C,SAAmD3a,UAErD,eAAC,OAAD,CAAM+a,OAAK,EAAC5R,MAAOoP,GAAOtK,QAA1B,UACE,cAAC,OAAD,CAAM9E,MAAOoP,GAAOiC,GAApB,0CACA,cAAC,OAAD,CAAMrR,MAAOoP,GAAOkC,GAApB,0BACA,cAAC,OAAD,CAAMtR,MAAOoP,GAAOmC,OAApB,wCACA,cAAC,OAAD,CAAMvR,MAAOoP,GAAOoC,GAApB,SAAyB3a,OAGzB,cAAC,OAAD,CAAMmJ,MAAOoP,GAAOkC,GAApB,mCAEA,cAAC,GAAD,CACE1B,SAAQ,UAAKxP,GAAWxJ,EAAQS,YAAYC,cAApC,4BACH8I,GAAWxJ,EAAQS,YAAYE,aACpCsY,SAAQ,UAAKzP,GAAWxJ,EAAQS,YAAYG,eAApC,0BACL4I,GAAWxJ,EAAQS,YAAYI,cAClC4E,QAAM,IAIR,cAAC,GAAD,CAAMkT,QAAQ,qBAAkBK,SAAS,UAAUC,SAAS,MAG5D,cAAC,GAAD,CAAMN,QAAQ,oCAAoCK,SAAS,UAAUC,SAAS,UAG9E,cAAC,GAAD,CAAMN,QAAQ,gBAAgBK,SAAS,KAAKC,SAAS,MAGrD,eAAC,OAAD,CAAM7P,MAAOoP,GAAOoC,GAApB,UACG,2IADH,oGAOA,cAAC,OAAD,CAAMxR,MAAOoP,GAAOkC,GAApB,+CAGA,cAAC,GAAD,CACE5B,QAAQ,eACRC,UAAS,qCAETC,SAAQ,iCAERC,SAAS,SACTxT,QAAM,IAIR,cAAC,GAAD,CACEkT,QAAQ,yBACRG,QAAQ,SACRC,UAAU,IACVC,SAAS,QACTC,SAAS,WAIX,cAAC,GAAD,CACEN,QAAQ,gCACRI,UAAU,QACVC,SAAS,SACTC,SAAS,MAIX,cAAC,GAAD,CACEN,QAAQ,oBACRK,SAAS,UACTC,SAAS,YAGX,cAAC,GAAD,CACEN,QAAQ,yBACRG,QAAQ,SACRC,UAAU,IACVC,SAAS,UACTC,SAAS,YAIX,cAAC,OAAD,CAAM7P,MAAOoP,GAAOkC,GAApB,+BAGA,cAAC,GAAD,CACE/B,QAAQ,4EAIV,cAAC,GAAD,CACEA,QAAQ,sBACRM,SAAS,UAIX,cAAC,GAAD,CACEN,QAAQ,oBACRM,SAAS,YAIX,cAAC,GAAD,CACEN,QAAQ,QACRM,SAAS,YAIX,cAAC,GAAD,CACEN,QAAQ,kCAIV,cAAC,GAAD,CACEA,QAAQ,6BACRM,SAAS,YAIX,cAAC,GAAD,CACEN,QAAQ,6BACRM,SAAS,YAIX,cAAC,GAAD,CACEN,QAAQ,QACRM,SAAS,YAIX,cAAC,OAAD,CAAM7P,MAAOoP,GAAOoC,GAApB,8YAQF,eAAC,OAAD,CAAMI,OAAK,EAAC5R,MAAOoP,GAAOtK,QAA1B,UAEE,cAAC,OAAD,CAAM9E,MAAOoP,GAAOiC,GAApB,gCACA,cAAC,GAAD,CACE1B,UAAS,qBAETC,SAAQ,UAAKxP,GAAWxJ,EAAQS,YAAYC,cAApC,0BACL8I,GAAWxJ,EAAQS,YAAYE,aAClCsY,SAAQ,UAAKzP,GAAWxJ,EAAQS,YAAYG,eAApC,0BACL4I,GAAWxJ,EAAQS,YAAYI,cAClC4E,QAAM,IAGR,cAAC,GAAD,CAAQ5F,OAAQG,EAAQH,YAI1B,eAAC,OAAD,CAAMmb,OAAK,EAAC5R,MAAOoP,GAAOtK,QAA1B,UAEE,cAAC,OAAD,CAAM9E,MAAOoP,GAAOiC,GAApB,8BACA,cAAC,GAAD,CACE1B,UAAS,qBAETC,SAAQ,UAAKxP,GAAWxJ,EAAQS,YAAYC,cAApC,0BACL8I,GAAWxJ,EAAQS,YAAYE,aAClCsY,SAAQ,UAAKzP,GAAWxJ,EAAQS,YAAYG,eAApC,0BACL4I,GAAWxJ,EAAQS,YAAYI,cAClC4E,QAAM,IAGR,cAAC,GAAD,CAAS9D,QAAO,UAAE3B,EAAQ2B,eAAV,aAAE,EAAiBC,YAGrC,eAAC,OAAD,CAAMoZ,OAAK,EAAC5R,MAAOoP,GAAOtK,QAA1B,UAEE,cAAC,OAAD,CAAM9E,MAAOoP,GAAOiC,GAApB,8BACA,cAAC,GAAD,CACE1B,UAAS,qBAETC,SAAQ,UAAKxP,GAAWxJ,EAAQS,YAAYC,cAApC,0BACL8I,GAAWxJ,EAAQS,YAAYE,aAClCsY,SAAQ,UAAKzP,GAAWxJ,EAAQS,YAAYG,eAApC,0BACL4I,GAAWxJ,EAAQS,YAAYI,cAClC4E,QAAM,IAIR,cAAC,GAAD,CAAS9D,QAAO,UAAE3B,EAAQ2B,eAAV,aAAE,EAAiBe,YAGrC,eAAC,OAAD,CAAMsY,OAAK,EAAC5R,MAAOoP,GAAOtK,QAA1B,UAEE,cAAC,OAAD,CAAM9E,MAAOoP,GAAOiC,GAApB,mBACA,cAAC,OAAD,CAAMrR,MAAOoP,GAAOkC,GAApB,2CACA,cAAC,OAAD,CAAMtR,MAAOoP,GAAOoC,GAApB,gtBAcF,eAAC,OAAD,CAAMI,OAAK,EAAC5R,MAAOoP,GAAOtK,QAA1B,UAEE,cAAC,OAAD,CAAM9E,MAAOoP,GAAOiC,GAApB,2BACA,cAAC,OAAD,CAAMrR,MAAOoP,GAAOoC,GAApB,0DAEuB5a,EAAQC,KAAKC,KAFpC,aAE6CF,EAAQC,KAAKE,mBAF1D,uDAG4BqJ,GAAWxJ,EAAQS,YAAYE,YAH3D,cAG4E6I,GAAWxJ,EAAQS,YAAYE,kBAK7G,eAAC,OAAD,CAAMsa,OAAK,EAAC7R,MAAOoP,GAAO+B,OAA1B,UACE,eAAC,OAAD,CAAMnR,MAAO,CAAEjD,QAAS,OAAQgT,cAAe,UAA/C,UACE,cAAC,OAAD,UAAOnZ,EAAQC,KAAKC,OACpB,cAAC,OAAD,UAAOF,EAAQC,KAAKE,wBAEtB,cAAC,OAAD,CAAM+a,OAAQ,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAf,qBACJD,EADI,eACaC,iB,SCvLtBC,GAnJe,WAC5B,IAAQ5X,EAAiBO,IAAjBP,aAKR,OACE,cAAC,KAAD,CACE6X,SAAU,SAAChc,GAAD,OALO,SAACA,GACpBic,QAAQC,IAAIlc,GAIOmc,CAAanc,IAC9Boc,cAAejY,EAAazD,QAF9B,SAIG,kBACC,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,eAAC0W,EAAA,EAAD,CAAME,WAAS,EAAC+E,UAAU,SAA1B,UACE,cAAC,GAAD,CACE3a,QAAO,UAAKwI,GAAW/F,EAAazD,QAAQS,YAAYC,cAAjD,cAAoE8I,GAAW/F,EAAazD,QAAQS,YAAYE,YAAhH,KACPM,SAAUwC,EAAazD,QAAQS,YAAYG,eAAjC,UAAqD4I,GAAW/F,EAAazD,QAAQS,YAAYG,eAAjG,cAAqH4I,GAAW/F,EAAazD,QAAQS,YAAYI,cAC3KwV,SAAS,wBAEX,cAAC,GAAD,CACEG,YAAU,EACVD,OAAK,EACLD,QAAM,EACND,SAAS,uBAEX,cAAC,GAAD,CACErV,QACE,cAAC,KAAD,CACE4a,KAAK,SACL1b,KAAK,GACL2b,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAGb9a,SACE,cAAC,KAAD,CACE2a,KAAK,SACL1b,KAAK,GACL2b,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAGb1F,SAAS,wBAEX,cAAC,GAAD,CACErV,QACE,cAAC,KAAD,CACE4a,KAAK,SACL1b,KAAK,GACL2b,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAGb9a,SACE,cAAC,KAAD,CACE2a,KAAK,SACL1b,KAAK,GACL2b,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAGb1F,SAAS,sBAEX,cAAC,GAAD,CACEE,OAAK,EACLD,QAAM,EACND,SAAS,QACTrV,QAAQ,QACRC,SAAS,UAEX,cAAC,GAAD,CACEuV,YAAU,EACVD,OAAK,EACLD,QAAM,EACND,SAAS,mCAEX,cAAC,GAAD,CACEA,SAAS,6BACTrV,QACE,cAAC,KAAD,CACE4a,KAAK,SACL1b,KAAK,GACL2b,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAGb9a,SACE,cAAC,KAAD,CACE2a,KAAK,SACL1b,KAAK,GACL2b,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,MAIf,cAAC,GAAD,CACE1F,SAAS,4CACTrV,QACE,cAAC,KAAD,CACE4a,KAAK,SACL1b,KAAK,GACL2b,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAGb9a,SACE,cAAC,KAAD,CACE2a,KAAK,SACL1b,KAAK,GACL2b,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,MAIf,cAAC,GAAD,CACE1F,SAAS,gCACTrV,QAAQ,QACRC,SAAS,QACTsV,OAAK,EACLD,QAAM,IAGR,cAAC,GAAD,CAAUD,SAAS,oCAA8BE,OAAK,EAACD,QAAM,EAACE,YAAU,EAACxV,QAAQ,qDAA4CC,SAAU,cAAC4J,GAAA,EAAD,MAEvI,cAAC6L,EAAA,EAAD,CAAMO,MAAI,EAACC,UAAU,SAArB,SACE,cAACpM,EAAA,EAAD,CAAQ8Q,KAAK,SAAStR,QAAQ,YAA9B,wCCjJZ0R,GAAW,CAAC,kBAAmB,oBAAqB,aAAc,mBAExE,SAASC,GAAsBjc,GAC7B,OAAOmO,OAAOC,QAAQpO,EAAQH,QAC3Bqc,SAAQ,YAAsB,IAAD,mBAAnBhO,EAAmB,KAAViO,EAAU,KACxBH,GAASI,SAASlO,KAEtBlO,EAAQH,OAAOqO,GAASlN,QAAUmN,OAAOkO,OAAOF,EAAKjb,UAClDyI,QAAO,SAAC2S,EAAD,UAAwBA,EAAxB,EAAUtb,UAA+B,GAEnDhB,EAAQH,OAAOqO,GAASjN,SAAWkN,OAAOkO,OAAOF,EAAKjb,UACnDyI,QAAO,SAAC2S,EAAD,UAAyBA,EAAzB,EAAUrb,WAAiC,OCY3D,IA0Fesb,GA1FY9G,cAAS,WAClC,IAAQhS,EAAiBO,IAAjBP,aAEA5D,EAAW4D,EAAazD,QAAxBH,OAGQsO,OAAOC,QAQvB,OACE,qCACE,cAAC,KAAD,CACEkN,SAAU,SAAChc,GAAD,OARd2c,GADoBjc,EAScV,GDzBtC,SAAyBU,GAEvBA,EAAQH,OAAO0B,gBAAgBP,QAAUhB,EAAQH,OAAOkB,gBAAgBC,QACpEhB,EAAQH,OAAOsB,eAAeH,QAElChB,EAAQH,OAAO2B,gBAAgBR,QAAUhB,EAAQH,OAAO0B,gBAAgBP,QACpEhB,EAAQH,OAAOuB,eAAeJ,QAElChB,EAAQH,OAAO4B,kBAAkBT,QAAUhB,EAAQH,OAAO2B,gBAAgBR,QACtEhB,EAAQH,OAAOwB,oBAAoBL,QAEvChB,EAAQH,OAAO6B,WAAWV,QAAUhB,EAAQH,OAAO4B,kBAAkBT,QACjEhB,EAAQH,OAAOyB,MAAMN,QAEzBhB,EAAQH,OAAO0B,gBAAgBN,SAAWjB,EAAQH,OAAOkB,gBAAgBE,SACrEjB,EAAQH,OAAOsB,eAAeF,SAElCjB,EAAQH,OAAO2B,gBAAgBP,SAAWjB,EAAQH,OAAO0B,gBAAgBN,SACrEjB,EAAQH,OAAOuB,eAAeH,SAElCjB,EAAQH,OAAO4B,kBAAkBR,SAAWjB,EAAQH,OAAO2B,gBAAgBP,SACvEjB,EAAQH,OAAOwB,oBAAoBJ,SAEvCjB,EAAQH,OAAO6B,WAAWT,SAAWjB,EAAQH,OAAO4B,kBAAkBR,SAClEjB,EAAQH,OAAOyB,MAAML,SCNvBub,CAAgBxc,QAChByD,EAAaT,QAAQhD,GAHF,IAACA,GAUhB0b,cAAejY,EAAazD,QAF9B,SAIG,kBACC,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,eAAC0W,EAAA,EAAD,CAAME,WAAS,EAAC+E,UAAU,SAA1B,UACE,cAAC,GAAD,CACE3a,QAAO,UAAKwI,GAAW/F,EAAazD,QAAQS,YAAYC,cAAjD,cAAoE8I,GAAW/F,EAAazD,QAAQS,YAAYE,YAAhH,KACPM,SAAUwC,EAAazD,QAAQS,YAAYG,eAAjC,UAAqD4I,GAAW/F,EAAazD,QAAQS,YAAYG,eAAjG,cAAqH4I,GAAW/F,EAAazD,QAAQS,YAAYI,cAC3KwV,SAAS,uBAEVlI,OAAOC,QAAQoL,IAAoBtR,KAAI,WAAyB2B,GAAzB,+BAAEqE,EAAF,KAAWuL,EAAX,YACtC,eAAC,WAAD,WACGtL,OAAOC,QAAQqL,EAAYvY,UACzBgH,KAAI,WAAqBoE,GAArB,uBAAEmQ,EAAF,KAASC,EAAT,YACH,cAAC,GAAD,CACE1b,QACE,cAAC,KAAD,CACE4a,KAAK,SACLzT,MAAK,OAAEuU,QAAF,IAAEA,OAAF,EAAEA,EAAW9T,MAClB1I,KAAI,iBAAY,CAACgO,GAAb,qBAAkC,CAACuO,GAAnC,YACJZ,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAGb9a,SACFwC,EAAazD,QAAQS,YAAYG,eACjC,cAAC,KAAD,CACEgb,KAAK,SACLzT,MAAK,OAAEuU,QAAF,IAAEA,OAAF,EAAEA,EAAW9T,MAClB1I,KAAI,iBAAY,CAACgO,GAAb,qBAAkC,CAACuO,GAAnC,aACJZ,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAKT1F,SAAQ,OAAEqG,QAAF,IAAEA,OAAF,EAAEA,EAAW9T,OADhB0D,MAKX,cAAC,GAAD,CACEtL,QAAS+H,GAAc,UAAClJ,EAAOqO,UAAR,iBAAC,EAAiBlN,eAAlB,aAAC,EAA0B0Y,QAAQ,IAAI,GAC9DzY,SAAUwC,EAAazD,QAAQS,YAAYG,eACtCmI,GAAc,UAAClJ,EAAOqO,UAAR,iBAAC,EAAiBjN,gBAAlB,aAAC,EAA2ByY,QAAQ,IAAI,GAC3DnD,OAAK,EACLD,QAAM,EACND,SAAUoD,EAAY3M,UAAY2M,EAAY7Q,UArCnCiB,MA0CjB,cAAC6M,EAAA,EAAD,CAAMO,MAAI,EAACC,UAAU,SAArB,SACE,cAACpM,EAAA,EAAD,CAAQ8Q,KAAK,SAAStR,QAAQ,YAA9B,iCASd,cAAC,EAAD,CAAe9F,UAAWf,EAAab,QAAS8B,GAAG,iBAAnD,SACE,cAACoG,EAAA,EAAD,CAAQtG,UAAWf,EAAab,QAAS0H,QAAQ,YAAjD,iC,8BCnFOqS,GAfiB,SAAC,GAAD,IAC9BC,EAD8B,EAC9BA,MAAOC,EADuB,EACvBA,OAAQC,EADe,EACfA,MAAOC,EADQ,EACRA,OAAQC,EADA,EACAA,MADA,OAK9B,eAACtG,EAAA,EAAD,CAAMM,GAAI,GAAIL,GAAI,GAAIwC,cAAc,MAAMvC,WAAS,EAACe,IAAK,GAAzD,UACE,cAACtN,GAAA,EAAD,CAAY6M,UAAU,SAAS5M,QAAQ,KAAvC,SAA6CsS,IAC5CC,EACAC,EACAC,EACAC,MCqDUC,GA9DE,WACf,MAA0BhT,mBAAsB,IAAIiT,MAApD,mBAAOnZ,EAAP,KAAcoZ,EAAd,KACA,OACE,cAAC,GAAD,UACE,eAAC,GAAD,WAEE,cAAC,GAAD,CAAU9G,SAAS,sBACnB,cAAChM,GAAA,EAAD,CAAYC,QAAQ,KAApB,yCACA,eAACD,GAAA,EAAD,WACE,mBAAGjB,MAAO,CAAEsO,UAAW,EAAGqD,aAAc,GAAxC,4GAIA,mBAAG3R,MAAO,CAAEsO,UAAW,EAAGqD,aAAc,GAAxC,0HAIA,mBAAG3R,MAAO,CAAEsO,UAAW,EAAGqD,aAAc,GAAxC,sJAKF,eAACrE,EAAA,EAAD,CAAMM,GAAI,GAAIJ,WAAS,EAACuC,cAAc,MAAMvR,GAAI,GAAIwV,GAAI,IAAKzF,IAAK,GAAlE,UACE,cAACtN,GAAA,EAAD,CAAYnE,MAAM,QAAlB,wBACA,cAACmE,GAAA,EAAD,CAAYnE,MAAM,QAAlB,uBACA,cAACmE,GAAA,EAAD,CAAYnE,MAAM,QAAlB,0BACA,cAACmE,GAAA,EAAD,CAAYnE,MAAM,QAAlB,qBAEF,cAAC,GAAD,CAAS0W,MAAM,sBAAgBC,OAAQ,cAACvE,GAAA,EAAD,CAAWpY,KAAK,KAAO4c,MAAO,cAACxE,GAAA,EAAD,CAAWpY,KAAK,KAAO6c,OAAQ,cAACzE,GAAA,EAAD,CAAWpY,KAAK,KAAO8c,MAAO,cAAC1E,GAAA,EAAD,CAAWpY,KAAK,OAElJ,cAACmK,GAAA,EAAD,CAAYC,QAAQ,KAApB,mEACA,cAACD,GAAA,EAAD,CAAYsM,GAAI,GAAhB,SACE,mBAAGvN,MAAO,CAAEsO,UAAW,EAAGqD,aAAc,GAAxC,8IAMF,cAAC,GAAD,CACEzE,QAAM,EACND,SAAS,+CACTrV,QACE,cAACqc,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,SACE,cAACC,GAAA,EAAD,CACErV,MAAM,cACNpE,MAAOA,EACP0Z,QAAS,IAAIP,KACbvS,SAAU,SAAC+S,GACTP,EAASO,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACtF,GAAA,EAAD,eAAesF,WAKhD,cAAC,GAAD,CAAUtH,QAAM,EAACD,SAAS,8CAAwCrV,QAAS,cAACsX,GAAA,EAAD,CAAWpY,KAAK,aC3CpF2d,GAlBO,kBACpB,eAAC,GAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAUxH,SAAS,iCACnB,cAAChM,GAAA,EAAD,CAAYsM,GAAI,GAAIrM,QAAQ,KAA5B,yCACA,cAAC4N,GAAA,EAAD,CAAkBC,KAAM,IAAKC,QAAS,KACtC,cAAC/N,GAAA,EAAD,CAAYsM,GAAI,GAAI/O,GAAI,GAAI0C,QAAQ,KAApC,qEACA,cAAC4N,GAAA,EAAD,CAAkBC,KAAM,IAAKC,QAAS,KACtC,cAAC/N,GAAA,EAAD,CAAYsM,GAAI,GAAI/O,GAAI,GAAI0C,QAAQ,KAApC,0EACA,cAAC4N,GAAA,EAAD,CAAkBC,KAAM,IAAKC,QAAS,QAExC,cAAC,IAAD,CAAS1T,GAAG,QAAZ,SACE,qBAAK0E,MAAO,CAAEjD,QAAS,OAAQC,eAAgB,SAAUsR,UAAW,IAApE,SACE,cAAC5M,EAAA,EAAD,CAAQR,QAAQ,YAAhB,iCCqGOwT,GA7Fa,WAC1B,IAAQra,EAAiBO,IAAjBP,aAEA9B,EAAY8B,EAAazD,QAAzB2B,QAGQwM,OAAOC,QAOvB,OACE,cAAC,KAAD,CACEkN,SAAU,SAAChc,GAAD,OANZ2c,GADoBjc,EAOYV,QALhCmE,EAAaT,QAAQhD,GAFF,IAACA,GAQlB0b,cAAejY,EAAazD,QAF9B,SAIG,kBACC,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,eAAC0W,EAAA,EAAD,CAAME,WAAS,EAAC+E,UAAU,SAA1B,UACE,cAAC,GAAD,CACE3a,QAAO,UAAKwI,GAAW/F,EAAazD,QAAQS,YAAYC,cAAjD,cAAoE8I,GAAW/F,EAAazD,QAAQS,YAAYE,YAAhH,KACPM,SAAUwC,EAAazD,QAAQS,YAAYG,eAAjC,UAAqD4I,GAAW/F,EAAazD,QAAQS,YAAYG,eAAjG,cAAqH4I,GAAW/F,EAAazD,QAAQS,YAAYI,cAC3KwV,SAAS,qBAEVlI,OAAOC,QAAQe,IAAiBjH,KAAI,WAAyB2B,GAAzB,+BAAEqE,EAAF,KAAWuL,EAAX,YACnC,eAAC,WAAD,WACGA,EAAY7Q,OACb,cAAC,GAAD,CACE4N,YAAU,EACVD,OAAK,EACLD,QAAM,EACND,SAAUoD,EAAY7Q,QAGvBuF,OAAOC,QAAQqL,EAAYvY,UACzB6c,QAAO,gBAAEtB,EAAF,2BAAa9a,EAAQuM,GAAShN,SAASub,GAAOzb,QAAU,GAAKW,EAAQuM,GAAShN,SAASub,GAAOxb,SAAW,KAChHiH,KAAI,WAAqBoE,GAArB,uBAAEmQ,EAAF,KAASC,EAAT,YACH,cAAC,GAAD,CACE1b,QACE,cAAC,KAAD,CACE4a,KAAK,SACLzT,MAAK,OAAEuU,QAAF,IAAEA,OAAF,EAAEA,EAAW9T,MAClB1I,KAAI,kBAAa,CAACgO,GAAd,qBAAmC,CAACuO,GAApC,YACJZ,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAGb9a,SACAwC,EAAazD,QAAQS,YAAYG,eACjC,cAAC,KAAD,CACEgb,KAAK,SACLzT,MAAK,OAAEuU,QAAF,IAAEA,OAAF,EAAEA,EAAW9T,MAClB1I,KAAI,kBAAa,CAACgO,GAAd,qBAAmC,CAACuO,GAApC,aACJZ,GAAIvD,KACJwD,UAAQ,EACRC,WAAS,IAKX1F,SAAQ,OAAEqG,QAAF,IAAEA,OAAF,EAAEA,EAAW9T,OADhB0D,MAKX,cAAC,GAAD,CACEtL,QAAS+H,GAAc,UAACpH,EAAQuM,UAAT,iBAAC,EAAkBlN,eAAnB,aAAC,EAA2B0Y,QAAQ,IAAI,GAC/DzY,SAAUwC,EAAazD,QAAQS,YAAYG,eACtCmI,GAAc,UAACpH,EAAQuM,UAAT,iBAAC,EAAkBjN,gBAAnB,aAAC,EAA4ByY,QAAQ,IAAI,GAC5DnD,OAAK,EACLD,QAAM,EACND,SAAUoD,EAAY3M,UAAY2M,EAAY7Q,UA9CnCiB,MAmDjB,cAAC6M,EAAA,EAAD,CAAMO,MAAI,EAACC,UAAU,SAArB,SACE,cAACpM,EAAA,EAAD,CAAQ8Q,KAAK,SAAStR,QAAQ,YAA9B,wCChCH0T,GA1DI,WACjB,IAAQva,EAAiBO,IAAjBP,aACFwa,EAAc3a,KAAK4a,MAAM9a,aAAa+a,QAAQ,gBAChDF,GAAaxa,EAAaT,QAAQib,GAEtC,MAA0ChU,oBAAS,GAAnD,mBAAOmU,EAAP,KAAsBC,EAAtB,KAEA,OAAID,EAEA,sBAAKhV,MAAO,CAAE5D,OAAQ,SAAtB,UACE,cAACkR,EAAA,EAAD,CACEE,WAAS,EACTxQ,eAAe,WACfkY,SAAS,WACTnZ,IAAK,GACLoZ,MAAO,GALT,SAOE,cAACzT,EAAA,EAAD,CAAQyM,QAAS,kBAAM8G,GAAkBD,IAAgB5Z,UAAWf,EAAab,QAAS0H,QAAQ,YAAlG,sBAEF,cAAC,YAAD,CAAWpE,MAAM,OAAOV,OAAO,OAA/B,SACE,cAAC,GAAD,CAAK/B,aAAcA,SAKzB,eAAC,IAAD,WACE,cAACiT,EAAA,EAAD,CACEE,WAAS,EACTxQ,eAAe,WAFjB,SAIE,cAAC0E,EAAA,EAAD,CAAQyM,QAAS,kBAAM8G,GAAkBD,IAAgB9T,QAAQ,YAAjE,kCAEF,cAAC,EAAD,IACA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOkU,KAAK,kBAAkBC,QAAS,cAAC,GAAD,MAEvC,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,GAAD,MAEpC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,MAErC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,MAErC,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,GAAD,MAEtC,cAAC,IAAD,CAAOD,KAAK,sBAAsBC,QAAS,cAAC,GAAD,MAE3C,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAE9B,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,GAAD,MAEnC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,GAAD,aChE/BzZ,GAAQ0Z,YAAY,CACxB7W,QAAS,EACTlC,QAAS,CACPgZ,QAAS,CACPC,KAAM,YAGVC,WAAY,CACVxF,WAAY,YACZR,SAAU,IAEZiG,WAAY,CACV3I,QAAS,CACP4I,aAAc,CACZtH,UAAW,IAKfuH,UAAW,CACTC,eAAgB,CACdC,UAAW,CACT1U,SAAU,OACV2U,UAAW,OACXva,QAAS,WACTyV,WAAY,SAsBP+E,OAff,WACE,OACE,cAACvb,EAAD,UACE,eAACwb,EAAA,EAAD,CAAera,MAAOA,GAAtB,UACE,cAACsa,EAAA,EAAD,CACE9G,OAAQ,CACN+G,KAAM,CAAE7Z,gBAAiB,gBAG7B,cAAC,GAAD,UCzCR8Z,IAAStE,OACP,cAAC,aAAD,UACE,cAAC,GAAD,MAEFuE,SAASC,eAAe,U","file":"static/js/main.a04b4e31.chunk.js","sourcesContent":["import legacy from 'legacy-encoding';\n\nfunction readFile(file: File): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsArrayBuffer(file);\n  return new Promise((resolve) => {\n    reader.onload = (e) => {\n      const text = legacy.decode(\n        Buffer.from(e.target.result as ArrayBuffer),\n        'cp437',\n      );\n      resolve(text);\n    };\n  });\n}\n\nexport default readFile;\n","import {\n  action, makeObservable, observable, runInAction,\n} from 'mobx';\nimport merge from 'lodash.merge';\nimport { Company } from '../functions/interfaces';\nimport type RootStore from './RootStore';\n\nclass CompanyStore {\n  company: Company = {\n    info: {\n      name: '',\n      registrationNumber: '',\n      addressInfo: {\n        name: '',\n        street: '',\n        city: '',\n        zipCode: '',\n        phone: '',\n      },\n    },\n    fiscalYears: {\n      currentStart: '',\n      currentEnd: '',\n      previousStart: '',\n      previousEnd: '',\n    },\n    accounts: {},\n    result: {\n      operatingIncome: { current: 0, previous: 0, children: {} },\n      operatingCosts: { current: 0, previous: 0, children: {} },\n      financialPosts: { current: 0, previous: 0, children: {} },\n      yearEndDistribution: { current: 0, previous: 0, children: {} },\n      taxes: { current: 0, previous: 0, children: {} },\n      operatingProfit: { current: 0, previous: 0, children: {} },\n      financialProfit: { current: 0, previous: 0, children: {} },\n      profitBeforeTaxes: { current: 0, previous: 0, children: {} },\n      yearResult: { current: 0, previous: 0, children: {} },\n    },\n    balance: {\n      assets: {\n        ipFixedAssets: { current: 0, previous: 0, children: {} },\n        materialFixedAssets: { current: 0, previous: 0, children: {} },\n        financialFixedAssets: { current: 0, previous: 0, children: {} },\n        estimatedResult: { current: 0, previous: 0, children: {} },\n        productStock: { current: 0, previous: 0, children: {} },\n        accountsReceivable: { current: 0, previous: 0, children: {} },\n        otherShortClaims: { current: 0, previous: 0, children: {} },\n        prepaidCostsAndDelayedIncome: { current: 0, previous: 0, children: {} },\n        shortPlacements: { current: 0, previous: 0, children: {} },\n        CashAndBankBalances: { current: 0, previous: 0, children: {} },\n        fixedAssets: { current: 0, previous: 0, children: {} },\n        currentAssets: { current: 0, previous: 0, children: {} },\n        totalAssts: { current: 0, previous: 0, children: {} },\n      },\n      equity: { liabilites: { current: 0, previous: 0, children: {} }, equity: { current: 0, previous: 0, children: {} } },\n    },\n  }\n\n  isReady = false;\n\n  rootStore: RootStore\n\n  constructor(rootStore: RootStore) {\n    makeObservable(this, {\n      company: observable,\n      isReady: observable,\n      hydrate: action,\n    });\n\n    this.rootStore = rootStore;\n  }\n\n  hydrate(company: Company): void {\n    runInAction(() => {\n      this.company = {\n        info: {}, fiscalYears: {}, balance: {}, result: {}, accounts: {},\n      } as Company;\n      this.company = merge(this.company, company);\n      this.isReady = true;\n      localStorage.setItem('companyInfo', JSON.stringify(this.company));\n    });\n  }\n}\n\nexport default CompanyStore;\n","import CompanyStore from './CompanyStore';\n\nclass RootStore {\n  companyStore: CompanyStore\n\n  constructor() {\n    this.companyStore = new CompanyStore(this);\n  }\n}\n\nexport default RootStore;\n","import type { ReactNode } from 'react';\nimport { createContext, useContext } from 'react';\nimport type CompanyStore from '../stores/CompanyStore';\nimport RootStore from '../stores/RootStore';\n\nlet store: RootStore;\nconst StoreContext = createContext<RootStore | undefined>(undefined);\nfunction StoreProvider({ children }: { children: ReactNode }) {\n  const rootStore = store ?? new RootStore();\n\n  return <StoreContext.Provider value={rootStore}>{children}</StoreContext.Provider>;\n}\n\nfunction useStore(): { companyStore: CompanyStore} {\n  const rootStore = useContext(StoreContext);\n  if (!rootStore) {\n    throw new Error('useStore must be used within a StoreProvider.');\n  }\n\n  return {\n    companyStore: rootStore.companyStore,\n  };\n}\n\nexport { StoreProvider };\nexport default useStore;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface Props {\n  to:string\n  margin?:string\n  disabled?:boolean\n}\n\nconst StyledLink = styled(NavLink)<Props>`\n  text-decoration: none;\n  margin:${(p) => p.margin};\n  pointer-events:${(p) => p.disabled && 'none'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width:'100%';\n`;\n\nconst StyledNavLink:React.FC<Props> = ({\n  to, children, margin, disabled, ...rest\n}) => (\n  <StyledLink {...rest} disabled={disabled} margin={margin} to={to}>\n    {children}\n  </StyledLink>\n);\n\nexport default StyledNavLink;\n","import { styled } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport { StepIconProps } from '@mui/material/StepIcon';\nimport { useLocation } from 'react-router-dom';\nimport StyledNavLink from './StyledNavLink';\n\nconst NavLink = styled(StyledNavLink)({\n  padding: '20px',\n  color: 'white',\n});\n\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 22,\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(111, 18, 205) 0%,rgb(111, 80, 206) 50%,rgb(111, 153, 206) 100%)',\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(111, 18, 205) 0%,rgb(111, 80, 206) 50%,rgb(111, 153, 206) 100%)',\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    height: 3,\n    border: 0,\n    backgroundColor:\n      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n    borderRadius: 1,\n  },\n}));\n\nconst ColorlibStepIconRoot = styled('div')<{\n  ownerState: { completed?: boolean; active?: boolean };\n}>(({ theme, ownerState }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n  zIndex: 1,\n  color: '#fff',\n  width: 50,\n  height: 50,\n  display: 'flex',\n  borderRadius: '50%',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...(ownerState.active && {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(111, 18, 205) 0%, rgb(111, 80, 206) 50%, rgb(111, 153, 206) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  }),\n  ...(ownerState.completed && {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(111, 18, 205) 0%, rgb(111, 80, 206) 50%, rgb(111, 153, 206) 100%)',\n  }),\n}));\n\nfunction ativeState(area:string) {\n  if (area === '/company-info') return 1;\n  if (area === '/result-sheet') return 2;\n  if (area === '/balance-sheet') return 3;\n  if (area === '/result-disposition') return 4;\n  if (area === '/notes') return 5;\n  if (area === '/year-story') return 6;\n  if (area === '/sign') return 7;\n  return 0;\n}\n\nfunction ColorlibStepIcon(props: StepIconProps) {\n  const {\n    active, completed, className, icon,\n  } = props;\n\n  const icons: { [index: string]: React.ReactElement } = {\n    1: <NavLink to=\"/Arsredovisning\">1</NavLink>,\n    2: <NavLink to=\"/company-info\">2</NavLink>,\n    3: <NavLink to=\"/result-sheet\">3</NavLink>,\n    4: <NavLink to=\"/balance-sheet\">4</NavLink>,\n    5: <NavLink to=\"/result-disposition\">5</NavLink>,\n    6: <NavLink to=\"/notes\">6</NavLink>,\n    7: <NavLink to=\"/year-story\">7</NavLink>,\n    8: <NavLink to=\"/sign\">8</NavLink>,\n\n  };\n\n  return (\n    <ColorlibStepIconRoot ownerState={{ completed, active }} className={className}>\n      {icons[String(icon)]}\n    </ColorlibStepIconRoot>\n  );\n}\n\nconst steps = ['Sie-fil', 'Företagsuppgifter', 'Resultaträkning', 'Balansräkning', 'Resultatdisposition', 'Noter', 'Förvaltningsberättelse', 'Befattningshavare'];\n\nexport default function CustomizedSteppers():JSX.Element {\n  const activeArea = useLocation();\n  return (\n    <Stack sx={{ width: '100%' }} mt={18} spacing={4}>\n      <Stepper\n        alternativeLabel\n        activeStep={ativeState(activeArea.pathname)}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Stack>\n  );\n}\n","import styled from 'styled-components';\n\ninterface Props {\n  title:string;\n}\n\nconst Field = styled.div`\nmargin-left: 2rem;\n`;\n\nconst Input = styled.div`\ndisplay: flex;\ngap: 1rem;\nflex-direction: row;\n`;\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\nmargin: 1rem;\njustify-content: space-between;\nalign-items: center;\n`;\n\nconst InputField:React.FC<Props> = ({ title, children }) => (\n  <Wrapper>\n    <Field>{title}</Field>\n    <Input>{children}</Input>\n  </Wrapper>\n);\n\nexport default InputField;\n","import type { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 32px;\n  box-sizing: border-box;\n`;\n\ntype Props = {\n  children: ReactNode\n}\n\nconst Page: React.FC<Props> = ({ children }) => (\n  <Container>\n    {children}\n  </Container>\n);\n\nexport default Page;\n","const formatCurrency = (amount: string | number, isShowingCurrency = false) => new Intl.NumberFormat('sv-SE', {\n  style: isShowingCurrency ? 'currency' : 'decimal',\n  currency: 'SEK',\n  minimumFractionDigits: 0,\n}).format(+amount);\n\nconst formatDate = (date: string) => date?.split('').reduce((acc: string, value: string, i: number) => acc + (i === 3 || i === 5 ? `${value}-` : value), '');\n\nexport { formatCurrency, formatDate };\n","import {\n  Button,\n  Card, FormControl, MenuItem, Select, SelectChangeEvent, styled, Switch, Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport InputField from '../../components/InputField';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ngap: 2rem;\nmargin-top: 2rem;\npadding:1rem;\n`;\n\nconst CompanyInfoPage = () => {\n  const { companyStore } = useStore();\n  const [amount, setAmount] = useState(0 || '');\n\n  const handleChange = (event:SelectChangeEvent) => {\n    setAmount(event.target.value);\n  };\n  return (\n    <Page>\n      <Typography variant=\"h4\">Företagsuppgifter</Typography>\n      <StyledCard>\n        <Typography variant=\"h5\">\n          Räkenskapsår\n        </Typography>\n        <InputField title=\"Aktuellt räkenskapsår\">\n          <Typography variant=\"h6\">\n            {companyStore.isReady && `${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`}\n          </Typography>\n        </InputField>\n        <InputField title=\"Antal tidigare räkenskapsår\">\n          <FormControl sx={{ minWidth: '120px' }} size=\"small\">\n\n            <Select\n              value={amount}\n              onChange={handleChange}\n            >\n              <MenuItem value={0}>0</MenuItem>\n              <MenuItem value={1}>1</MenuItem>\n              <MenuItem value={2}>2</MenuItem>\n            </Select>\n          </FormControl>\n        </InputField>\n        <Typography variant=\"h5\">\n          Övriga uppgifter\n        </Typography>\n        <InputField title=\"Koncernförhållande\">\n          <FormControl sx={{ minWidth: '120px' }} size=\"small\">\n\n            <Select\n              value={amount}\n              onChange={handleChange}\n            >\n              <MenuItem value=\"none\">Bolaget ingår i en koncern</MenuItem>\n              <MenuItem value=\"mother\">Bolaget är modern i en koncern</MenuItem>\n              <MenuItem value=\"daugther\">Bolaget är dottern i en koncern</MenuItem>\n            </Select>\n          </FormControl>\n        </InputField>\n        <Typography variant=\"h5\">\n          Revisor\n        </Typography>\n        <InputField title=\"Har bolaget revisor?\">\n          <Switch />\n        </InputField>\n        <StyledNavLink to=\"/result-sheet\">\n          <Button variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n};\n\nexport default CompanyInfoPage;\n","import {\n  Button, Card, Checkbox, styled, Typography,\n} from '@mui/material';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nflex-direction: column;\ngap: 2rem;\nmargin-top: 2rem;\npadding:1rem;\n`;\n\nconst FiscalYearPage = () => {\n  const { companyStore } = useStore();\n\n  return (\n    <Page>\n      <Typography variant=\"h4\">Välj räkenskapsår</Typography>\n      <StyledCard>\n        <Typography variant=\"h6\">\n          {companyStore.isReady && `För företaget ${companyStore.company.info.name} fanns följande räkenskapsår som kan användas i SIE-filen. Välj det år som ska lämnas in till Bolagsverket`}\n        </Typography>\n        <Typography variant=\"h5\">\n          <Checkbox />\n          {companyStore.isReady && `${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`}\n        </Typography>\n        <StyledNavLink to=\"/company-info\">\n          <Button variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n};\n\nexport default FiscalYearPage;\n","import type {\n  Company, CompanyAddressInfo, FiscalYears, Accounts,\n} from './interfaces';\n\nfunction splitWords(row: string, removeQuotes = false) {\n  const words = row\n    // Replaces all spaces within quotes with {tempSpace}\n    .replace(/\"[^\"]+\"/g, (inQuotes) => inQuotes.replaceAll(' ', '{tempSpace}'))\n    .split(' ')\n    .map((word) => word.replaceAll('{tempSpace}', ' '));\n  if (removeQuotes) return words.map((word) => word.replaceAll('\"', ''));\n  return words;\n}\n\n// E.g. '#FNAMN \"Omini AB\"'\nfunction getCompanyName(rows: string[]) {\n  const row = rows.find((r) => r.startsWith('#FNAMN'));\n  if (!row) return 'unknown';\n\n  return splitWords(row, true)[1];\n}\n\n// E.g. \"#ORGNR 559207-6037\"\nfunction getCompanyRegistrationNumber(rows: string[]) {\n  const row = rows.find((r) => r.startsWith('#ORGNR')).replace(/(\\d{6})(\\d{4})/, '$1-$2');\n\n  if (!row) return 'unknown';\n\n  return splitWords(row, true)[1];\n}\n\n// E.g. #ADRESS \"Ivar Eriksson\" \"Storgatan 2\" \"21140 Malmö\" \"0739143211\"\nfunction getCompanyAddressInfo(rows: string[]): CompanyAddressInfo {\n  const row = rows.find((r) => r.startsWith('#ADRESS'));\n  if (!row) return {} as CompanyAddressInfo;\n\n  const [, name, street, zipCity, phone] = splitWords(row, true);\n  return {\n    name,\n    street,\n    city: zipCity.split(' ')[1],\n    zipCode: zipCity.split(' ')[0],\n    phone,\n  };\n}\n\n// E.g. \"#RAR 0 20200101 20201231\", \"#RAR -1 20190101 20191231\"\nfunction getFiscalYears(rows: string[]): FiscalYears {\n  const currentYearRow = rows.find((r) => r.startsWith('#RAR 0'));\n  const previousYearRow = rows.find((r) => r.startsWith('#RAR -1'));\n\n  const [, , currentStart, currentEnd] = currentYearRow ? splitWords(currentYearRow) : [];\n  const [, , previousStart, previousEnd] = previousYearRow ? splitWords(previousYearRow) : [];\n\n  return {\n    currentStart,\n    currentEnd,\n    previousStart,\n    previousEnd,\n  };\n}\n\n// E.g. #KONTO 1039 \"Ackumulerade avskrivningar på patent\"\n// E.g. #RES 0 3041 -2258200 0\n// E.g. #UB 0 1930 150000 0\nfunction getAccounts(rows: string[]) {\n  const defaultAccount = () => ({ name: '', previousBalance: 0, currentBalance: 0 });\n  return rows.reduce((accounts, row) => {\n    // if (row.startsWith('#KONTO')) {\n    //   const [, id, name] = splitWords(row, true);\n    //   return { ...accounts, [id]: { ...accounts[id], name } };\n    // }\n\n    if (row.startsWith('#UB')) {\n      const [, year, id, balance] = splitWords(row);\n      const balanceKey = Number(year) === -1 ? 'previousBalance' : 'currentBalance';\n      const r = {\n        ...accounts,\n        [id]: {\n          ...(accounts[id] ? accounts[id] : defaultAccount()),\n          [balanceKey]: Number(balance),\n        },\n      };\n      return r;\n    }\n\n    if (row.startsWith('#RES')) {\n      const [, year, id, balance] = splitWords(row);\n      const balanceKey = Number(year) === -1 ? 'previousBalance' : 'currentBalance';\n      return {\n        ...accounts,\n        [id]: {\n          ...(accounts[id] ? accounts[id] : defaultAccount()),\n          [balanceKey]: Number(balance),\n        },\n\n      };\n    }\n    return accounts;\n  }, {} as Accounts);\n}\n\nfunction extractCompanyFromSie(sieString: string): Company {\n  const rows = sieString\n    .replaceAll('\\r', '')\n    .split('\\n');\n\n  return {\n    info: {\n      name: getCompanyName(rows),\n      registrationNumber: getCompanyRegistrationNumber(rows),\n      addressInfo: getCompanyAddressInfo(rows),\n    },\n    fiscalYears: getFiscalYears(rows),\n    accounts: getAccounts(rows),\n    balance: { assets: {}, equity: {} },\n  };\n}\n\nexport default extractCompanyFromSie;\n","interface ResultSectionInterface {\n  title: string\n  sumTitle: string\n  children: {\n    [resultRowIdentifier: string]: {\n      title: string\n      accountRange: [number, number]\n    }\n  }\n}\n\ninterface ResultSectionsInterface {\n  operatingIncome: ResultSectionInterface\n  operatingCosts: ResultSectionInterface\n  financialPosts: ResultSectionInterface\n  yearEndDistribution: ResultSectionInterface\n  taxes: ResultSectionInterface\n  operatingProfit: ResultSectionInterface\n  financialProfit: ResultSectionInterface\n  profitBeforeTaxes: ResultSectionInterface\n  yearResult: ResultSectionInterface\n}\n\nconst resultSections: ResultSectionsInterface = {\n  operatingIncome: {\n    title: 'Rörelsens intäkter',\n    sumTitle: 'Summa rörelseintäkter, lagerförändringar m.m.',\n    children: {\n      netSales: {\n        title: 'Nettoomsättning',\n        accountRange: [\n          3000,\n          3799,\n        ],\n      },\n      changedInventory: {\n        title: 'Förändring av lager',\n        accountRange: [\n          3800,\n          3899,\n        ],\n      },\n      otherIncomes: {\n        title: 'Övriga rörelseintäkter',\n        accountRange: [\n          3900,\n          3999,\n        ],\n      },\n    },\n  },\n  operatingCosts: {\n    title: 'Rörelsekostnader',\n    sumTitle: 'Summa rörelsekostnader',\n    children: {\n      rawMaterialsConsumables: {\n        title: 'Råvaror och förnödenheter',\n        accountRange: [\n          4000,\n          4999,\n        ],\n      },\n      otherExternalExpenses: {\n        title: 'Övriga externa kostnader',\n        accountRange: [\n          5000,\n          6999,\n        ],\n      },\n      staffCosts: {\n        title: 'Personalkostnader',\n        accountRange: [\n          7000,\n          7699,\n        ],\n      },\n      writeDownsReversalOfWriteDowns: {\n        title: 'Nedskrivningar och återföring av nedskrivningar',\n        accountRange: [\n          7700,\n          7799,\n        ],\n      },\n      depreciationAccordingToPlan: {\n        title: 'Avskrivningar enligt plan',\n        accountRange: [\n          7800,\n          7899,\n        ],\n      },\n      otherOperatingExpenses: {\n        title: 'Övriga rörelsekostnader',\n        accountRange: [\n          7900,\n          7999,\n        ],\n      },\n    },\n  },\n  financialPosts: {\n    title: 'Finansiella poster',\n    sumTitle: 'Summa finansiella poster',\n    children: {\n      profitParticipationsGroupCompanies: {\n        title: 'Resultat från andelar i koncernbolag',\n        accountRange: [\n          8000,\n          8099,\n        ],\n      },\n      profitSharesJointlyControlledCompanies: {\n        title: 'Resultat från andelar i gemensamt styrda företag',\n        accountRange: [\n          8100,\n          8199,\n        ],\n      },\n      profitOtherFinancialFixedAssets: {\n        title: 'Resultat från övriga finansiella anläggningstillgångar',\n        accountRange: [\n          8200,\n          8299,\n        ],\n      },\n      otherInterestIncomeAndSimilarItems: {\n        title: 'Övriga ränteintäkter och liknande resultatposter',\n        accountRange: [\n          8300,\n          8399,\n        ],\n      },\n      interestExpensesAndSimilarIncomeItems: {\n        title: 'Räntekostnader och liknande resultatposter',\n        accountRange: [\n          8400,\n          8499,\n        ],\n      },\n    },\n  },\n  yearEndDistribution: {\n    title: 'Bokslutsdispositioner',\n    sumTitle: 'Summa bokslutsdispositioner',\n    children: {\n      changeInAccruals: {\n        title: 'Förändring av periodiseringsfonder för juridisk person och enskild näringsidkare',\n        accountRange: [\n          8810,\n          8819,\n        ],\n      },\n      appropriationsAllCompanyForms: {\n        title: 'Bokslutsdispositioner för samtliga företagsformer',\n        accountRange: [\n          8820,\n          8899,\n        ],\n      },\n    },\n  },\n  taxes: {\n    title: 'Skatter',\n    sumTitle: '',\n    children: {\n      taxesYearProfit: {\n        title: 'Skatter på årets resultat',\n        accountRange: [\n          8910,\n          8999,\n        ],\n      },\n    },\n  },\n  operatingProfit: {\n    title: 'Rörelseresultat',\n    sumTitle: '',\n    children: {},\n  },\n  financialProfit: {\n    title: 'Resultat efter finansiella poster',\n    sumTitle: '',\n    children: {},\n  },\n  profitBeforeTaxes: {\n    title: 'Resultat före skatt',\n    sumTitle: '',\n    children: {},\n  },\n  yearResult: {\n    title: 'Årets resultat',\n    sumTitle: '',\n    children: {},\n  },\n\n};\n\nexport type { ResultSectionInterface, ResultSectionsInterface };\nexport default resultSections;\n","import resultSections, { ResultSectionsInterface } from '../info/resultSectionsData';\nimport type { Accounts, Result, Sum } from './interfaces';\n\nfunction sumSection(\n  accounts: Accounts,\n  section: keyof ResultSectionsInterface,\n): Sum {\n  return Object.entries(accounts)\n    .reduce((sum, [accountId, account]) => {\n      const accountNumber = Number(accountId);\n      const resultRow = Object.entries(resultSections[section].children)\n        .find(([, { accountRange: [min, max] }]) => {\n          if (accountNumber >= min && accountNumber <= max) return true;\n          return false;\n        });\n      if (!resultRow) return sum;\n\n      const resultRowIdentifier = resultRow[0];\n      const resultRowReference = sum.children[resultRowIdentifier];\n      return {\n        current: sum.current + account.currentBalance,\n        previous: sum.previous + account.previousBalance,\n        children: {\n          ...sum.children,\n          [resultRowIdentifier]: {\n            current: resultRowReference.current + account.currentBalance,\n            previous: resultRowReference.previous + account.previousBalance,\n          },\n        },\n      };\n    }, {\n      current: 0,\n      previous: 0,\n      children: Object.fromEntries(Object.keys(resultSections[section].children)\n        .map((title) => [title, { current: 0, previous: 0 }])),\n    });\n}\n\nfunction sumSums(sums: Sum[]): Sum {\n  return sums.reduce((sum, { current, previous }) => ({\n    current: current + sum.current,\n    previous: previous + sum.previous,\n    children: {},\n  }));\n}\n\nfunction calculateResults(accounts: Accounts): Result {\n  const operatingIncome = sumSection(accounts, 'operatingIncome');\n  const operatingCosts = sumSection(accounts, 'operatingCosts');\n  const financialPosts = sumSection(accounts, 'financialPosts');\n  const yearEndDistribution = sumSection(accounts, 'yearEndDistribution');\n  const taxes = sumSection(accounts, 'taxes');\n\n  const operatingProfit = sumSums([operatingIncome, operatingCosts]);\n  const financialProfit = sumSums([operatingProfit, financialPosts]);\n  const profitBeforeTaxes = sumSums([financialProfit, yearEndDistribution]);\n  const yearResult = sumSums([profitBeforeTaxes, taxes]);\n\n  return {\n    operatingIncome,\n    operatingCosts,\n    financialPosts,\n    yearEndDistribution,\n    taxes,\n    operatingProfit,\n    financialProfit,\n    profitBeforeTaxes,\n    yearResult,\n  };\n}\n\nexport default calculateResults;\n","interface BalanceSectionInterface {\n  title: string\n  sumTitle: string\n  children: {\n    [resultRowIdentifier: string]: {\n      title: string\n      accountRange: [number, number]\n    }\n  }\n}\n\ninterface BalanceSectionsInterface {\n  ipFixedAssets: BalanceSectionInterface\n  materialFixedAssets: BalanceSectionInterface\n  financialFixedAssets: BalanceSectionInterface\n  equity: BalanceSectionInterface\n  liabilities: BalanceSectionInterface\n  estimatedResult: BalanceSectionInterface\n  productStock: BalanceSectionInterface\n  accountsReceivable: BalanceSectionInterface\n  otherShortClaims: BalanceSectionInterface\n  prepaidCostsAndDelayedIncome: BalanceSectionInterface\n  shortPlacements: BalanceSectionInterface\n  CashAndBankBalances: BalanceSectionInterface\n  fixedAssets: BalanceSectionInterface\n  currentAssets: BalanceSectionInterface\n  totalAssts: BalanceSectionInterface\n}\n\nconst balanceSections: BalanceSectionsInterface = {\n  ipFixedAssets: {\n    title: 'Immateriella Anläggningstillgångar',\n    sumTitle: 'Summa Immateriella Anläggningstillgångar',\n    children: {\n      patents: {\n        title: 'Patent och Licenser',\n        accountRange: [\n          1020,\n          1059,\n        ],\n      },\n      tenancy: {\n        title: 'Hyresrätt och liknande rättigheter',\n        accountRange: [\n          1060,\n          1069,\n        ],\n      },\n      goodwill: {\n        title: 'Hyresrätt och liknande rättigheter',\n        accountRange: [\n          1070,\n          1079,\n        ],\n      },\n      fees: {\n        title: 'Patent och Licenser',\n        accountRange: [\n          1080,\n          1087,\n        ],\n      },\n      prepaidPatentFees: {\n        title: 'Förskott avseende immateriella anläggningstillgångar',\n        accountRange: [\n          1088,\n          1088,\n        ],\n      },\n    },\n  },\n  materialFixedAssets: {\n    title: 'Materiella Anläggningstillgångar',\n    sumTitle: 'Summa Materiella Anläggningstillgångar',\n    children: {\n      buildingsAndProperties: {\n        title: 'Byggnader och mark',\n        accountRange: [\n          1100,\n          1119,\n        ],\n      },\n      costOnOthersProperty: {\n        title: 'Förbättringsutgifter på annans fastighet',\n        accountRange: [\n          1120,\n          1129,\n        ],\n      },\n      buildingsAndProperties2: {\n        title: 'Byggnader och mark',\n        accountRange: [\n          1130,\n          1179,\n        ],\n      },\n      activeOrPrepaidProperties: {\n        title: 'Pågående nyanläggningar och förskott avseende materiella anläggningstillgångar',\n        accountRange: [\n          1180,\n          1189,\n        ],\n      },\n      buildingsAndProperties3: {\n        title: 'Byggnader och mark',\n        accountRange: [\n          1190,\n          1199,\n        ],\n      },\n      machines: {\n        title: 'Maskiner och andra tekniska anläggningar',\n        accountRange: [\n          1210,\n          1219,\n        ],\n      },\n      inventoryAndTools: {\n        title: 'Inventarier, verktyg och installationer',\n        accountRange: [\n          1220,\n          1259,\n        ],\n      },\n      inventoryAndTools2: {\n        title: 'Inventarier, verktyg och installationer',\n        accountRange: [\n          1261,\n          1279,\n        ],\n      },\n      otherFixedAssets: {\n        title: 'Övriga materiella anläggningstillgångar',\n        accountRange: [\n          1290,\n          1299,\n        ],\n      },\n    },\n  },\n  financialFixedAssets: {\n    title: 'Finansiella Anläggningstillgångar',\n    sumTitle: 'Summa Finansiella Anläggningstillgångar',\n    children: {\n      groupStocks: {\n        title: 'Andelar i koncernföretag',\n        accountRange: [\n          1310,\n          1319,\n        ],\n      },\n      claimGroupCompany: {\n        title: 'Fordringar hos koncernföretag',\n        accountRange: [\n          1320,\n          1329,\n        ],\n      },\n      stockCompanyOfInterest: {\n        title: 'Andelar i intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          1330,\n          1335,\n        ],\n      },\n      interetsInOtherCompanies: {\n        title: 'Ägarintressen i övriga företag',\n        accountRange: [\n          1336,\n          1337,\n        ],\n      },\n      stocksCompanyOfInterest2: {\n        title: 'Andelar i intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          1338,\n          1339,\n        ],\n      },\n      claimInteretsCompany: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          1340,\n          1345,\n        ],\n      },\n      claimOtherCompaniesOfInterest: {\n        title: 'Fordringar hos övriga företag som det finns ett ägarintresse',\n        accountRange: [\n          1346,\n          1347,\n        ],\n      },\n      claimInteretsCompany2: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          1348,\n          1349,\n        ],\n      },\n      otherLongSecurities: {\n        title: 'Andra långfristiga värdepappersinnehav',\n        accountRange: [\n          1350,\n          1359,\n        ],\n      },\n      loanToOwner: {\n        title: 'Lån till delägare eller närstående',\n        accountRange: [\n          1360,\n          1369,\n        ],\n      },\n      otherLongClaims: {\n        title: 'Andra långfristiga fordringar',\n        accountRange: [\n          1380,\n          1389,\n        ],\n      },\n    },\n  },\n  fixedAssets: {\n    title: undefined,\n    sumTitle: 'Totalt anläggningstillgångar',\n    children: {},\n  },\n  productStock: {\n    title: 'Lager, produkter i arbete och pågående arbeten',\n    sumTitle: 'Summa tillgångar, lagerförändringar m.m.',\n    children: {\n      rawMaterials: {\n        title: 'Råvaror och förnödenheter',\n        accountRange: [\n          1410,\n          1431,\n        ],\n      },\n      materialsUnderManufacturing: {\n        title: 'Varor under tillverkning',\n        accountRange: [\n          1432,\n          1437,\n        ],\n      },\n      rawMaterials2: {\n        title: 'Råvaror och förnödenheter',\n        accountRange: [\n          1438,\n          1438,\n        ],\n      },\n      materialsUnderManufacturing2: {\n        title: 'Varor under tillverkning',\n        accountRange: [\n          1439,\n          1449,\n        ],\n      },\n      doneMaterials: {\n        title: 'Färdiga varor och handelsvaror',\n        accountRange: [\n          1450,\n          1469,\n        ],\n      },\n      activeWorkForOthers: {\n        title: 'Pågående arbete för annans räkning',\n        accountRange: [\n          1470,\n          1479,\n        ],\n      },\n      prepaidInvoice: {\n        title: 'Förskott till leverantörer',\n        accountRange: [\n          1480,\n          1489,\n        ],\n      },\n      otherStockAssets: {\n        title: 'Övriga lagertillgångar',\n        accountRange: [\n          1490,\n          1499,\n        ],\n      },\n    },\n  },\n\n  accountsReceivable: {\n    title: 'Kundfordringar',\n    sumTitle: 'Summa kundfordringar',\n    children: {\n      accountsReceivable: {\n        title: 'Kundfordringar',\n        accountRange: [\n          1500,\n          1559,\n        ],\n      },\n      claimGroupCompany: {\n        title: 'Fordringar hos koncernföretag',\n        accountRange: [\n          1560,\n          1569,\n        ],\n      },\n      claimGroupCompany2: {\n        title: 'Fordringar hos koncernföretag',\n        accountRange: [\n          1660,\n          1669,\n        ],\n      },\n      claimCompanyOfInterest: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          1570,\n          1572,\n        ],\n      },\n      claimCompanyOfInterest2: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          1670,\n          1672,\n        ],\n      },\n      claimOtherCompanies: {\n        title: 'Fordringar hos övriga företag som det finns ett ägarintresse i',\n        accountRange: [\n          1573,\n          1573,\n        ],\n      },\n      claimOtherCompanies2: {\n        title: 'Fordringar hos övriga företag som det finns ett ägarintresse i',\n        accountRange: [\n          1673,\n          1673,\n        ],\n      },\n      claimCompanyOfInterest3: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          1574,\n          1579,\n        ],\n      },\n      claimCompanyOfInterest4: {\n        title: 'Fordringar hos intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          1674,\n          1679,\n        ],\n      },\n      OtherClaims: {\n        title: 'Övriga fordringar',\n        accountRange: [\n          1590,\n          1619,\n        ],\n      },\n      OtherClaims2: {\n        title: 'Övriga fordringar',\n        accountRange: [\n          1630,\n          1659,\n        ],\n      },\n      OtherClaims3: {\n        title: 'Övriga fordringar',\n        accountRange: [\n          1680,\n          1689,\n        ],\n      },\n    },\n  },\n  otherShortClaims: {\n    title: 'Förutbetalda kostnader och upplupna intäkter',\n    sumTitle: 'Summa Förutbetalda kostnader och upplupna intäkter',\n    children: {\n      NotYetInvoiced: {\n        title: 'Upparbetad men ej fakturerad intäkt',\n        accountRange: [\n          1620,\n          1629,\n        ],\n      },\n      tenancy: {\n        title: 'Tecknat men ej inbetalat kapital',\n        accountRange: [\n          1690,\n          1699,\n        ],\n      },\n    },\n  },\n  prepaidCostsAndDelayedIncome: {\n    title: 'Övriga kortfristiga fordringar',\n    sumTitle: 'Summa Övriga kortfristiga fordringar',\n    children: {\n      prepaidCostsAndDelayedIncome: {\n        title: 'Förutbetalda kostnader och upplupna intäkter',\n        accountRange: [\n          1700,\n          1799,\n        ],\n      },\n\n    },\n  },\n  shortPlacements: {\n    title: 'Kortfristiga placeringar',\n    sumTitle: 'Summa Kortfristiga placeringar',\n    children: {\n      otherShortSecurities: {\n        title: 'Övriga kortfristiga placeringar',\n        accountRange: [\n          1800,\n          1859,\n        ],\n      },\n      stocksGroupCompany: {\n        title: 'Andelar i koncernföretag',\n        accountRange: [\n          1860,\n          1869,\n        ],\n      },\n      otherShortSecurities2: {\n        title: 'Övriga kortfristiga placeringar',\n        accountRange: [\n          1870,\n          1899,\n        ],\n      },\n\n    },\n\n  },\n  CashAndBankBalances: {\n    title: 'Kassa och bank',\n    sumTitle: 'Summa Kassa och bank',\n    children: {\n      cashAndBank: {\n        title: 'Kassa och bank',\n        accountRange: [\n          1900,\n          1989,\n        ],\n      },\n      tenancy: {\n        title: 'Redovisningsmedel',\n        accountRange: [\n          1990,\n          1999,\n        ],\n      },\n\n    },\n  },\n  currentAssets: {\n    title: undefined,\n    sumTitle: 'Totalt Omsättningstillgångar',\n    children: {},\n  },\n  totalAssts: {\n    title: undefined,\n    sumTitle: 'Totalt tillgångar',\n    children: {},\n  },\n  equity: {\n    title: 'Eget kapital',\n    sumTitle: 'Summa eget kapital',\n    children: {\n      ShareCapital: {\n        title: 'Aktiekapital',\n        accountRange: [\n          2081,\n          2081,\n        ],\n      },\n      unRegistredShareCapital: {\n        title: 'Ej registrerat aktiekapital',\n        accountRange: [\n          2082,\n          2082,\n        ],\n      },\n      ShareCapital2: {\n        title: 'Aktiekapital',\n        accountRange: [\n          2083,\n          2084,\n        ],\n      },\n      revalueFond: {\n        title: 'Uppskrivningsfond',\n        accountRange: [\n          2085,\n          2085,\n        ],\n      },\n      reserveFond: {\n        title: 'Reservfond',\n        accountRange: [\n          2086,\n          2086,\n        ],\n      },\n      fixedOverFond: {\n        title: 'Bunden överkursfond',\n        accountRange: [\n          2087,\n          2087,\n        ],\n      },\n      balancedResult: {\n        title: 'Balanserat resultat',\n        accountRange: [\n          2090,\n          2091,\n        ],\n      },\n      balancedResult2: {\n        title: 'Balanserat resultat',\n        accountRange: [\n          2093,\n          2095,\n        ],\n      },\n      balancedResult3: {\n        title: 'Balanserat resultat',\n        accountRange: [\n          2098,\n          2098,\n        ],\n      },\n      freeUpFond: {\n        title: 'Balanserat resultat',\n        accountRange: [\n          2097,\n          2097,\n        ],\n      },\n      periodFond: {\n        title: 'Periodiseringsfonder',\n        accountRange: [\n          2110,\n          2149,\n        ],\n      },\n      ackumilatedWriteOffs: {\n        title: 'Ackumulerade överavskrivningar',\n        accountRange: [\n          2150,\n          2159,\n        ],\n      },\n      untaxedReserves: {\n        title: 'Övriga obeskattade reserver',\n        accountRange: [\n          2160,\n          2199,\n        ],\n      },\n      pensions: {\n        title: 'Avsättningar för pensioner och liknande förpliktelser enligt lagen (1967:531) om tryggande av pensionsutfästelse m.m.',\n        accountRange: [\n          2210,\n          2219,\n        ],\n      },\n      otherSavings: {\n        title: 'Övriga avsättningar',\n        accountRange: [\n          2220,\n          2229,\n        ],\n      },\n      otherPensions: {\n        title: 'Övriga avsättningar för pensioner och liknande förpliktelser',\n        accountRange: [\n          2220,\n          2229,\n        ],\n      },\n      otherSavings2: {\n        title: 'Övriga avsättningar',\n        accountRange: [\n          2230,\n          2239,\n        ],\n      },\n    },\n  },\n  liabilities: {\n    title: 'Skulder',\n    sumTitle: 'Summa skulder',\n    children: {\n      obligationLoan: {\n        title: 'Obligationslån',\n        accountRange: [\n          2310,\n          2329,\n        ],\n      },\n      checkCredit: {\n        title: 'Checkräkningskredit',\n        accountRange: [\n          2330,\n          2339,\n        ],\n      },\n      otherDebtToInstitute: {\n        title: 'Övriga skulder till kreditinstitut',\n        accountRange: [\n          2340,\n          2359,\n        ],\n      },\n      debtToGroupCompnay: {\n        title: 'Skulder till koncernföretag',\n        accountRange: [\n          2360,\n          2369,\n        ],\n      },\n      debtToCompanyOfInterest: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          2370,\n          2372,\n        ],\n      },\n      debtToOtherCompaniesOfInterest: {\n        title: 'Skulder till övriga företag som det finns ett ägarintresse i',\n        accountRange: [\n          2373,\n          2373,\n        ],\n      },\n      debtToCompanyOfInterest2: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          2374,\n          2379,\n        ],\n      },\n      otherDebts: {\n        title: 'Övriga skulder',\n        accountRange: [\n          2390,\n          2399,\n        ],\n      },\n      otherDebtToInstitutes: {\n        title: 'Övriga skulder till kreditinstitut',\n        accountRange: [\n          2410,\n          2419,\n        ],\n      },\n      prepaidCustomerInvoice: {\n        title: 'Förskott från kunder',\n        accountRange: [\n          2420,\n          2429,\n        ],\n      },\n      onGoingWorkForOther: {\n        title: 'Pågående arbete för annans räkning',\n        accountRange: [\n          2430,\n          2439,\n        ],\n      },\n      accountsPayable: {\n        title: 'Leverantörsskulder',\n        accountRange: [\n          2440,\n          2449,\n        ],\n      },\n      invoicedNotYetWorked: {\n        title: 'Fakturerad men ej upparbetad intäkt',\n        accountRange: [\n          2450,\n          2459,\n        ],\n      },\n      debtGroupCompany: {\n        title: 'Skulder till koncernföretag',\n        accountRange: [\n          2460,\n          2469,\n        ],\n      },\n      debtCompanyOfInterest: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          2470,\n          2472,\n        ],\n      },\n      debtOtherCompanyOfInterest: {\n        title: 'Skulder till övriga företag som det finns ett ägarintresse i',\n        accountRange: [\n          2473,\n          2473,\n        ],\n      },\n      debtCompanyOfInterest2: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          2474,\n          2479,\n        ],\n      },\n      checkCreditCount: {\n        title: 'Checkräkningskredit',\n        accountRange: [\n          2480,\n          2489,\n        ],\n      },\n      otherDebt: {\n        title: 'Övriga skulder',\n        accountRange: [\n          2490,\n          2491,\n        ],\n      },\n      changeDebt: {\n        title: 'Växelskulder',\n        accountRange: [\n          2492,\n          2492,\n        ],\n      },\n      otherDebt2: {\n        title: 'Övriga skulder',\n        accountRange: [\n          2493,\n          2499,\n        ],\n      },\n      taxDebt: {\n        title: 'Skatteskulder',\n        accountRange: [\n          2500,\n          2599,\n        ],\n      },\n      otherDebt3: {\n        title: 'Övriga skulder',\n        accountRange: [\n          2600,\n          2799,\n        ],\n      },\n      otherDebt4: {\n        title: 'Övriga skulder',\n        accountRange: [\n          2810,\n          2859,\n        ],\n      },\n      debtGroupCompany2: {\n        title: 'Skulder till koncernföretag',\n        accountRange: [\n          2860,\n          2869,\n        ],\n      },\n      debtCompanyOfInterest3: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          2870,\n          2872,\n        ],\n      },\n      debtOtherCompanyOfInterest2: {\n        title: 'Skulder till övriga företag som det finns ett ägarintresse i',\n        accountRange: [\n          2873,\n          2873,\n        ],\n      },\n      debtCompanyOfInterest4: {\n        title: 'Skulder till intresseföretag och gemensamt styrda företag',\n        accountRange: [\n          2874,\n          2879,\n        ],\n      },\n      otherDebt5: {\n        title: 'Övriga skulder',\n        accountRange: [\n          2880,\n          2899,\n        ],\n      },\n      preiodCostAndIncome: {\n        title: 'Upplupna kostnader och förutbetalda intäkter',\n        accountRange: [\n          2900,\n          2999,\n        ],\n      },\n    },\n  },\n  estimatedResult: {\n    title: undefined,\n    sumTitle: 'Beräknat resultat',\n    children: {},\n  },\n\n};\n\nexport type { BalanceSectionInterface, BalanceSectionsInterface };\n\nexport default balanceSections;\n","import balanceSections, { BalanceSectionsInterface } from '../info/balanceSectionsData';\nimport type { Accounts, Result, Sum } from './interfaces';\n\nfunction sumSection(\n  accounts: Accounts,\n  section: keyof BalanceSectionsInterface,\n): Sum {\n  return Object.entries(accounts)\n    .reduce((sum, [accountId, account]) => {\n      const accountNumber = Number(accountId);\n      const balanceRow = Object.entries(balanceSections[section].children)\n        .find(([, { accountRange: [min, max] }]) => {\n          if (accountNumber >= min && accountNumber <= max) return true;\n          return false;\n        });\n      if (!balanceRow) return sum;\n\n      const balanceRowIdentifier = balanceRow[0];\n      const resultRowReference = sum.children[balanceRowIdentifier];\n      return {\n        current: sum.current + account.currentBalance,\n        previous: sum.previous + account.previousBalance,\n        children: {\n          ...sum.children,\n          [balanceRowIdentifier]: {\n            current: resultRowReference.current + account.currentBalance,\n            previous: resultRowReference.previous + account.previousBalance,\n          },\n        },\n      };\n    }, {\n      current: 0,\n      previous: 0,\n      children: Object.fromEntries(Object.keys(balanceSections[section].children)\n        .map((title) => [title, { current: 0, previous: 0 }])),\n    });\n}\n\nfunction sumSums(sums: Sum[]): Sum {\n  return sums.reduce((sum, { current, previous }) => ({\n    current: current + sum.current,\n    previous: previous + sum.previous,\n    children: {},\n  }));\n}\n\nfunction calculateBalanceAssets(accounts: Accounts): Result {\n  const CashAndBankBalances = sumSection(accounts, 'CashAndBankBalances');\n  const accountsReceivable = sumSection(accounts, 'accountsReceivable');\n  const financialFixedAssets = sumSection(accounts, 'financialFixedAssets');\n  const ipFixedAssets = sumSection(accounts, 'ipFixedAssets');\n  const materialFixedAssets = sumSection(accounts, 'materialFixedAssets');\n  const otherShortClaims = sumSection(accounts, 'otherShortClaims');\n  const prepaidCostsAndDelayedIncome = sumSection(accounts, 'prepaidCostsAndDelayedIncome');\n  const productStock = sumSection(accounts, 'productStock');\n  const shortPlacements = sumSection(accounts, 'shortPlacements');\n\n  const fixedAssets = sumSums([financialFixedAssets, ipFixedAssets, materialFixedAssets]);\n\n  const currentAssets = sumSums([CashAndBankBalances,\n    accountsReceivable, otherShortClaims,\n    prepaidCostsAndDelayedIncome,\n    productStock, shortPlacements]);\n\n  const totalAssts = sumSums([fixedAssets, currentAssets]);\n\n  return {\n    fixedAssets,\n    currentAssets,\n    shortPlacements,\n    productStock,\n    prepaidCostsAndDelayedIncome,\n    otherShortClaims,\n    materialFixedAssets,\n    ipFixedAssets,\n    financialFixedAssets,\n    accountsReceivable,\n    CashAndBankBalances,\n    totalAssts,\n  };\n}\n\nfunction calculateBalanceEquity(accounts: Accounts): Result {\n  const liabilities = sumSection(accounts, 'liabilities');\n  const equity = sumSection(accounts, 'equity');\n\n  return {\n    liabilities,\n    equity,\n  };\n}\n\nexport { calculateBalanceEquity, calculateBalanceAssets as default };\n","import { observer } from 'mobx-react-lite';\nimport Dropzone from 'react-dropzone';\nimport styled from 'styled-components';\nimport useStore from '../hooks/useStore';\nimport fileReader from '../functions/fileReader';\nimport extractCompanyFromSie from '../functions/extractCompanyFromSie';\nimport calculateResults from '../functions/calculateResults';\nimport calculateBalanceAssets, { calculateBalanceEquity } from '../functions/calculateBalances';\n\nconst DropArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30vh;\n  text-align: center;\n  background-color:#918686;\n  border-radius: 8px;\n`;\n\nconst DropFile = observer(() => {\n  const { companyStore } = useStore();\n  const handleOnDrop = async (acceptedFiles: File[]) => {\n    const sieText = await fileReader(acceptedFiles[0]);\n    const company = extractCompanyFromSie(sieText);\n    company.result = calculateResults(company.accounts);\n    company.balance.assets = calculateBalanceAssets(company.accounts);\n    company.balance.equity = calculateBalanceEquity(company.accounts);\n    companyStore.hydrate(company);\n    localStorage.setItem('companyInfo', JSON.stringify(company));\n  };\n\n  return (\n    <Dropzone onDrop={handleOnDrop}>\n      {({ getRootProps, getInputProps }) => (\n\n        <DropArea {...getRootProps()}>\n          <input {...getInputProps()} />\n          <p>Släpp din SIE-fil här för att ladda upp filen.</p>\n        </DropArea>\n\n      )}\n    </Dropzone>\n\n  );\n});\n\nexport default DropFile;\n","import { Card, styled, Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { observer } from 'mobx-react-lite';\nimport DropArea from '../../components/DropArea';\nimport Page from '../../components/Page';\nimport StyledNavLink from '../../components/StyledNavLink';\nimport useStore from '../../hooks/useStore';\n\nconst StyledCard = styled(Card)`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nflex-direction: column;\ngap: 2rem;\nmargin-top: 2rem;\npadding:6rem;\n`;\n\nconst LoadSie = observer(() => {\n  const { companyStore } = useStore();\n\n  return (\n    <Page>\n      <DropArea />\n\n      <StyledCard>\n        {companyStore.isReady && (\n          <>\n            <Typography variant=\"h3\">\n              {companyStore.company.info.name}\n            </Typography>\n            <Typography variant=\"h4\">\n              {companyStore.company.info.registrationNumber}\n            </Typography>\n          </>\n        )}\n        <StyledNavLink disabled={!companyStore.isReady} to=\"/fiscal-year\">\n          <Button disabled={!companyStore.isReady} variant=\"contained\">Fortsätt</Button>\n        </StyledNavLink>\n      </StyledCard>\n    </Page>\n  );\n});\n\nexport default LoadSie;\n","import { Card as MuiCard, CardProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst Card = styled(MuiCard)<CardProps>(() => ({\n  padding: '32px',\n}));\n\nexport default Card;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { FieldAttributes } from 'formik';\n\ntype Props ={\n  subTitle:string\n  isBold?:boolean\n  isSum?:boolean\n  isBig?:boolean\n  isNoBorder?:boolean\n  current?:FieldAttributes<any> | string\n  previous?:FieldAttributes<any> | string\n}\n\nconst MultiRow:React.FC<Props> = ({\n  subTitle, isBold, isSum, isNoBorder, current, previous, isBig, children,\n}) => (\n  <Grid mb={12} container columnGap={50}>\n    <Grid pt={4} pl={!isSum && 12} xs={3} item alignSelf=\"center\">\n      {isBig ? <Typography variant=\"h6\" alignSelf=\"center\" fontWeight={isBold && 900}>{subTitle}</Typography> : <Typography alignSelf=\"center\" fontWeight={isBold && 900}>{subTitle}</Typography>}\n    </Grid>\n\n    <Grid pt={8} alignSelf=\"center\" item xs={3} borderTop={isSum && !isNoBorder && '1px solid gray'} container>\n      {current || children }\n    </Grid>\n    {previous\n    && (\n    <Grid pt={8} item xs={3} borderTop={isSum && !isNoBorder && '1px solid gray'} container>\n      {previous}\n    </Grid>\n    )}\n\n  </Grid>\n);\n\nexport default MultiRow;\n","import { Paper, Switch, Typography } from '@mui/material';\n\ntype Props = {\n  title:string,\n  isActive?:boolean\n  onClick?:(e:any) => void\n}\n\nconst Note:React.FC<Props> = ({\n  title, isActive = false, onClick, children,\n}) => (\n  <Paper elevation={5} style={{ padding: '24px', backgroundColor: '#f3f0f0', marginTop: '24px' }}>\n    {isActive ? (\n      <>\n        <Typography variant=\"h5\">{title}</Typography>\n        {children}\n      </>\n    ) : (\n      <div style={{ display: 'flex', gap: '120px', alignItems: 'center' }}>\n        <div>{title}</div>\n        <Switch name={title} onClick={onClick} />\n      </div>\n\n    )}\n  </Paper>\n);\n\nexport default Note;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ntype Props = {\n  subTitle:string\n  current?:string\n  previous?:string\n}\n\nconst SubTitle:React.FC<Props> = ({\n  subTitle, children, current, previous,\n}) => (\n\n  <Grid mb={12} container columnGap={50}>\n    <Grid pt={12} xs={3} item alignSelf=\"center\">\n      <Typography variant=\"h4\">{subTitle}</Typography>\n    </Grid>\n    <Grid pt={12} item xs={3} container>\n      <Typography variant=\"h5\">{current || children}</Typography>\n    </Grid>\n    {previous && (\n    <Grid pt={12} item xs={3} container>\n      <Typography variant=\"h5\">{previous}</Typography>\n    </Grid>\n    )}\n\n  </Grid>\n);\n\nexport default SubTitle;\n","import {\n  Button, Switch, TextareaAutosize, TextField,\n} from '@mui/material';\nimport { observer } from 'mobx-react-lite';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Card from '../../components/Card';\nimport MultiRow from '../../components/MultiRow';\nimport Note from '../../components/Notes';\nimport Page from '../../components/Page';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\n\nconst NotesPage = observer(() => {\n  const { companyStore } = useStore();\n\n  const [activeNotes, setActiveNotes] = useState(new Set());\n\n  const onClick = (e: any) => {\n    setActiveNotes((previousState) => new Set([...previousState, e.target.name]));\n  };\n\n  return (\n    <Page>\n      <Card>\n        <SubTitle subTitle=\"Noter\" />\n        <Note isActive title=\"Redovisningsprinciper\">\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Regelverk\" current={<TextareaAutosize cols={50} minRows={5} minLength={200} />} />\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Tjänste- och entreprenaduppdrag\" />\n          <MultiRow isBold isSum isNoBorder subTitle=\"Utför företaget tjänste- och/eller entreprenaduppdrag till fast pris?\" current={<Switch />} />\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Egentillverkade varor\" />\n          <MultiRow isBold isSum isNoBorder subTitle=\"Tillverkar företaget egna varor?\" current={<Switch />} />\n        </Note>\n        <Note isActive title=\"Medelantal anställda\">\n          <MultiRow subTitle=\"\" current={`${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)}`} />\n          <MultiRow\n            subTitle=\"Medelantal anställda under året\"\n            current={(\n              <TextField label=\"Måste anges\" />\n)}\n          />\n        </Note>\n        <Note onClick={(e) => onClick(e)} isActive={activeNotes.has('Ställda säkerheter')} title=\"Ställda säkerheter\">\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Regelverk\" current={<TextareaAutosize cols={50} minRows={5} minLength={200} />} />\n\n        </Note>\n        <Note onClick={(e) => onClick(e)} isActive={activeNotes.has('Eventualförpliktelser')} title=\"Eventualförpliktelser\">\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Regelverk\" current={<TextareaAutosize cols={50} minRows={5} minLength={200} />} />\n\n        </Note>\n        <Note onClick={(e) => onClick(e)} isActive={activeNotes.has('Exceptionella intäkter och kostnder')} title=\"Exceptionella intäkter och kostnder\">\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Regelverk\" current={<TextareaAutosize cols={50} minRows={5} minLength={200} />} />\n\n        </Note>\n        <Note onClick={(e) => onClick(e)} isActive={activeNotes.has('Tillgångar, Avsättningar och Skulder som avser flera poster')} title=\"Tillgångar, Avsättningar och Skulder som avser flera poster\">\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Regelverk\" current={<TextareaAutosize cols={50} minRows={5} minLength={200} />} />\n\n        </Note>\n        <Note onClick={(e) => onClick(e)} isActive={activeNotes.has('Ekonomiska arrangemang som inte redovisas i balansräkningen')} title=\"Ekonomiska arrangemang som inte redovisas i balansräkningen\">\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Regelverk\" current={<TextareaAutosize cols={50} minRows={5} minLength={200} />} />\n\n        </Note>\n        <Note onClick={(e) => onClick(e)} isActive={activeNotes.has('Övriga kommentarer')} title=\"Övriga kommentarer\">\n          <MultiRow isBig isBold isSum isNoBorder subTitle=\"Regelverk\" current={<TextareaAutosize cols={50} minRows={5} minLength={200} />} />\n\n        </Note>\n\n        <NavLink to=\"/year-story\">\n          <div style={{ display: 'grid', justifyContent: 'center', marginTop: 12 }}>\n            <Button variant=\"contained\">Fortsätt</Button>\n          </div>\n        </NavLink>\n      </Card>\n    </Page>\n  );\n});\nexport default NotesPage;\n","export default __webpack_public_path__ + \"static/media/Comfortaa-Light.a5389d8a.ttf\";","export default __webpack_public_path__ + \"static/media/Comfortaa-Bold.c7cb6106.ttf\";","import {\n  Text, StyleSheet,\n} from '@react-pdf/renderer';\n\ninterface Props {\n  areaOne?:any;\n  areaTwo?:any;\n  areaThree?:any;\n  areaFour?:any;\n  areaFive?:any;\n  border?:boolean\n}\n\nconst styles = StyleSheet.create({\n  areaOne: {\n    minWidth: '40%',\n    textAlign: 'left',\n    fontSize: '10px',\n\n  },\n  areaTwo: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaThree: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\nconst Line:React.FC<Props> = (p: Props) => {\n  const { border } = p;\n  const { areaOne } = p;\n  const { areaTwo } = p;\n  const { areaThree } = p;\n  const { areaFour } = p;\n  const { areaFive } = p;\n  return (\n    <div style={{\n      display: 'flex', flexDirection: 'row', marginTop: '8px', padding: '2px 0px', borderBottom: border && '1px black solid',\n    }}\n    >\n      <Text style={styles.areaOne}>{areaOne}</Text>\n      <Text style={styles.areaTwo}>{areaTwo}</Text>\n      <Text style={styles.areaThree}>{areaThree}</Text>\n      <Text style={styles.areaFour}>\n        {areaFour}\n      </Text>\n      <Text style={styles.areaFive}>\n        {areaFive}\n      </Text>\n    </div>\n  );\n};\n\nexport default Line;\n","import {\n  Text, StyleSheet,\n} from '@react-pdf/renderer';\n\ninterface Props {\n  areaOne?:any;\n  areaTwo?:any;\n  areaThree?:any;\n  areaFour?:any;\n  areaFive?:any;\n  border?:boolean\n}\n\nconst styles = StyleSheet.create({\n  areaOne: {\n    fontFamily: 'ComfortaaBold',\n    minWidth: '55%',\n    textAlign: 'left',\n    fontSize: '10px',\n  },\n  areaThree: {\n    width: '13%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '16%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '16%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\nconst resultLine:React.FC<Props> = (p) => (\n  <div style={{\n    display: 'flex', flexDirection: 'row', marginTop: '8px', borderBottom: p.border && '1px black solid',\n  }}\n  >\n    <Text style={styles.areaOne}>{p.areaOne}</Text>\n    <Text style={styles.areaThree}>{p.areaThree}</Text>\n    <Text style={styles.areaFour}>\n      {p.areaFour}\n    </Text>\n    <Text style={styles.areaFive}>\n      {p.areaFive}\n    </Text>\n  </div>\n);\n\nexport default resultLine;\n","import { FC, ReactElement } from 'react';\nimport { formatCurrency } from '../../functions/formatting';\nimport type { Result as CompanyResult } from '../../functions/interfaces';\nimport resultSectionsData from '../../info/resultSectionsData';\nimport ResultLine from '../components/resultLine';\n\ninterface ResultProps {\n  result: CompanyResult\n}\n\n// eslint-disable-next-line\nconst entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\nconst Result: FC<ResultProps> = ({ result }): ReactElement => (\n  <>\n    {Object.entries(resultSectionsData).map(([section, sectionData]) => (\n      <ResultLine\n        key={section}\n        areaOne={sectionData.title}\n        areaFour={formatCurrency(result[section].current.toFixed(2))}\n        areaFive={formatCurrency(result[section].previous.toFixed(2))}\n      />\n    ))}\n  </>\n);\n\nexport default Result;\n","import { FC, ReactElement } from 'react';\nimport { formatCurrency } from '../../functions/formatting';\nimport type { Balance as CompanyBalance } from '../../functions/interfaces';\nimport balanceSectionsData from '../../info/balanceSectionsData';\nimport ResultLine from '../components/resultLine';\n\ninterface BalanceProps {\n  balance: CompanyBalance\n}\n\n// eslint-disable-next-line\nconst entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\nconst Balance: FC<BalanceProps> = ({ balance }): ReactElement => (\n  <>\n    {Object.entries(balanceSectionsData).map(([section, sectionData]) => (\n      balance[section]?.current || balance[section]?.previous ? (\n        <ResultLine\n          key={section}\n          areaOne={sectionData.title || sectionData.sumTitle}\n          areaFour={formatCurrency(balance[section]?.current?.toFixed(2))}\n          areaFive={formatCurrency(balance[section]?.previous?.toFixed(2))}\n        />\n      ) : null\n    ))}\n  </>\n);\nexport default Balance;\n","import {\n  Page, Text, View, Document, StyleSheet, Font,\n} from '@react-pdf/renderer';\nimport { observer } from 'mobx-react-lite';\nimport * as info from '../../info/info.json';\nimport fontRegular from '../../fonts/Comfortaa-Light.ttf';\nimport fontBold from '../../fonts/Comfortaa-Bold.ttf';\nimport type CompanyStore from '../../stores/CompanyStore';\nimport Line from '../components/Line';\nimport Result from './Result';\nimport { formatDate } from '../../functions/formatting';\nimport Balance from './Balance';\n\nFont.register({ family: 'ComfortaaRegular', src: fontRegular });\nFont.register({ family: 'ComfortaaBold', src: fontBold });\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#FFF',\n    justifyContent: 'center',\n    fontFamily: 'ComfortaaRegular',\n    color: '#191919',\n\n  },\n  section: {\n    marginTop: '10px',\n    padding: '10px 30px',\n    flexGrow: 1,\n    textAlign: 'left',\n    lineHeight: 1.4,\n  },\n  front: {\n    marginTop: '50px',\n    padding: '50px',\n    flexGrow: 1,\n    textAlign: 'center',\n    lineHeight: 1.4,\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignSelf: 'center',\n    height: '50px',\n    borderTop: '1px black solid',\n    width: '80%',\n    fontSize: '10px',\n    padding: '4px 0px',\n  },\n  h1: {\n    fontSize: '24px',\n  },\n  h2: {\n    fontSize: '18px',\n    marginTop: '18px',\n  },\n  h3: {\n    fontSize: '14px',\n    marginTop: '14px',\n  },\n  h4Bold: {\n    fontSize: '11px',\n    marginTop: '11px',\n    fontWeight: 'bolder',\n    fontFamily: 'ComfortaaBold',\n\n  },\n  h4: {\n    fontSize: '9px',\n    marginTop: '10px',\n    color: '#808080',\n  },\n\n  areaOne: {\n    minWidth: '40%',\n    textAlign: 'left',\n    fontSize: '10px',\n  },\n  areaTwo: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaThree: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFour: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n  areaFive: {\n    width: '15%',\n    textAlign: 'right',\n    fontSize: '8px',\n  },\n});\n\n// Create Document Component\nconst Pdf = observer(({ companyStore }: { companyStore: CompanyStore }) => {\n  const { company } = companyStore;\n\n  return (\n\n    <Document language=\"sv\">\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.front}>\n          <Text style={styles.h1}>{company.info.name}</Text>\n          <Text style={{ marginBottom: '50px', ...styles.h2 }}>{company?.info?.registrationNumber}</Text>\n          <Text style={styles.h2}>{info.fiscal_year_text}</Text>\n          <Text style={styles.h2}>{`${formatDate(company.fiscalYears.currentStart)} - ${formatDate(company.fiscalYears.currentEnd)}`}</Text>\n          <Text style={styles.h4}>{info.presentation_ceo_text}</Text>\n          <Text style={styles.h4}>{info.round_up_method}</Text>\n          <Text style={{ marginTop: '24px', ...styles.h4 }}>{info.confirmation_certificate}</Text>\n          <Text style={{ marginTop: '24px', ...styles.h4 }}>{info.director_approve_text}</Text>\n        </View>\n        <View break style={styles.section}>\n          <Text style={styles.h2}>Förvaltningsberättelse</Text>\n          <Text style={styles.h3}>Verksamheten</Text>\n          <Text style={styles.h4Bold}>Allmänt om verksamheten</Text>\n          <Text style={styles.h4}>{info.year_text}</Text>\n\n          {/* Flerårsöversikt */}\n          <Text style={styles.h3}>Flerårsöversikt</Text>\n          {/* Years */}\n          <Line\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n              -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          {/* Nettoomsättning */}\n          <Line areaOne=\"Nettoomsättning\" areaFour=\"123 123\" areaFive=\"0\" />\n\n          {/* resultat efter finansiella poster */}\n          <Line areaOne=\"Resultat efter finansiella poster\" areaFour=\"321 321\" areaFive=\"1 214\" />\n\n          {/* Soliditet */}\n          <Line areaOne=\"Soliditet (%)\" areaFour=\"38\" areaFive=\"7\" />\n\n          {/* Description changes year -1 to 0 */}\n          <Text style={styles.h4}>\n            {'Bolaget har under 2020 ingått ett uppdragsavtal avseende redovisningstjänster'\n            + 'vilket har påverkat omsättning starkt positivt.'}\n            Uppdragsavtalet motsvarar en heltidstjänst och fortlöpt under hela räkenskapsåret.\n          </Text>\n\n          {/* Förändring i egent kapital */}\n          <Text style={styles.h3}>Förändringar i eget kapital</Text>\n\n          {/* aktiekapital */}\n          <Line\n            areaTwo=\"Aktiekapital\"\n            areaThree={`Balanserat\n              resultat`}\n            areaFour={`Årets\n            resultat`}\n            areaFive=\"Totalt\"\n            border\n          />\n\n          {/* vid årets ingång */}\n          <Line\n            areaOne=\"Vid årets ingång\"\n            areaTwo=\"50 000\"\n            areaThree=\"0\"\n            areaFour=\"1 073\"\n            areaFive=\"51 073\"\n          />\n\n          {/* Balanseras i en ny räkning */}\n          <Line\n            areaOne=\"Balanseras i en ny räkning\"\n            areaThree=\"1 073\"\n            areaFour=\"-1 073\"\n            areaFive=\"0\"\n          />\n\n          {/* Årets resultat */}\n          <Line\n            areaOne=\"Årets resultat\"\n            areaFour=\"485 281\"\n            areaFive=\"485 281\"\n          />\n          {/* Vid årets utgång */}\n          <Line\n            areaOne=\"Vid årets ingång\"\n            areaTwo=\"50 000\"\n            areaThree=\"0\"\n            areaFour=\"485 281\"\n            areaFive=\"485 281\"\n          />\n\n          {/* Resultatdispotions */}\n          <Text style={styles.h3}>Resultatdispotion</Text>\n\n          {/* Stående medel */}\n          <Line\n            areaOne=\"Styrelsen och VD föreslår att till förfogande stående medel\"\n          />\n\n          {/* Balanserat resultat */}\n          <Line\n            areaOne=\"Balanserat resultat\"\n            areaFive=\"1 073\"\n          />\n\n          {/* Årets resultat */}\n          <Line\n            areaOne=\"Årets resultat\"\n            areaFive=\"485 281\"\n          />\n\n          {/* Summa */}\n          <Line\n            areaOne=\"Summa\"\n            areaFive=\"486 354\"\n          />\n\n          {/* Disponeras */}\n          <Line\n            areaOne=\"Disponeras enligt följande\"\n          />\n\n          {/* Utdelas */}\n          <Line\n            areaOne=\"Utdelas till aktieägare\"\n            areaFive=\"177 100\"\n          />\n\n          {/* Balanseras i ny räkning */}\n          <Line\n            areaOne=\"Balanseras i ny räkning\"\n            areaFive=\"309 254\"\n          />\n\n          {/* Summa */}\n          <Line\n            areaOne=\"Summa\"\n            areaFive=\"486 354\"\n          />\n\n          {/* Text regelverk */}\n          <Text style={styles.h4}>\n            Med hänvisning till ovanstående och vad som i övrigt kommit till styrelsens kännedom\n            är det styrelsens bedömning att utdelningen är försvarbar (enligt ABL 17 kap 3 §) med\n            tanke på de krav som verksamhetens art och omfattning samt risker ställer på storleken\n            av bolagets egna kapital, konsolideringsbehov, likviditet och ställning i övrigt.\n          </Text>\n\n        </View>\n        <View break style={styles.section}>\n          {/* Resultaträkning */}\n          <Text style={styles.h2}>Resultaträkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          <Result result={company.result} />\n\n        </View>\n\n        <View break style={styles.section}>\n          {/* Balansräkning */}\n          <Text style={styles.h2}>Balansräkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          <Balance balance={company.balance?.assets} />\n\n        </View>\n        <View break style={styles.section}>\n          {/* Balansräkning */}\n          <Text style={styles.h2}>Balansräkning</Text>\n          <Line\n            areaThree={`not\n            1`}\n            areaFour={`${formatDate(company.fiscalYears.currentStart)}\n            -${formatDate(company.fiscalYears.currentEnd)}`}\n            areaFive={`${formatDate(company.fiscalYears.previousStart)}\n            -${formatDate(company.fiscalYears.previousEnd)}`}\n            border\n          />\n\n          {/* Eget kapital och skulder */}\n          <Balance balance={company.balance?.equity} />\n        </View>\n\n        <View break style={styles.section}>\n          {/* Noter */}\n          <Text style={styles.h2}>Noter</Text>\n          <Text style={styles.h3}>Not 1 - Redovisningsprinciper</Text>\n          <Text style={styles.h4}>\n            {`Årsredovisningen är upprättad i enlighet med årsredovisningslagen och Bokföringsnämndens allmänna\n            råd (BFNAR 2016:10) om årsredovisning i mindre företag.\n            Nyckeltalsdefinitioner\n            Nettoomsättning\n            Rörelsens huvudintäkter, fakturerade kostnader, sidointäkter samt intäktskorrigeringar.\n            Resultat efter finansiella poster\n            Resultat efter finansiella intäkter och kostnader men före bokslutsdispositioner och skatter.\n            Soliditet\n            Justerat eget kapital (eget kapital och obeskattade reserver med avdrag för uppskjuten skatt) i procent av balansomslutningen.`}\n          </Text>\n\n        </View>\n\n        <View break style={styles.section}>\n          {/* Underskrifter */}\n          <Text style={styles.h2}>Underskrifter</Text>\n          <Text style={styles.h4}>\n            {`\n            Årsredovisning för ${company.info.name}, ${company.info.registrationNumber}\n            Avseende räkenskapsåret ${formatDate(company.fiscalYears.currentEnd)} - ${formatDate(company.fiscalYears.currentEnd)}`}\n          </Text>\n\n        </View>\n\n        <View fixed style={styles.footer}>\n          <View style={{ display: 'flex', flexDirection: 'column' }}>\n            <Text>{company.info.name}</Text>\n            <Text>{company.info.registrationNumber}</Text>\n          </View>\n          <Text render={({ pageNumber, totalPages }) => (\n            `sida ${pageNumber} av ${totalPages}`\n          )}\n          />\n\n        </View>\n      </Page>\n    </Document>\n  );\n});\n\nexport default Pdf;\n","import {\n  Button, Grid, Switch, TextField,\n} from '@mui/material';\nimport { Field, Form, Formik } from 'formik';\nimport Card from '../../components/Card';\nimport MultiRow from '../../components/MultiRow';\nimport Page from '../../components/Page';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate } from '../../functions/formatting';\nimport { Company } from '../../functions/interfaces';\nimport useStore from '../../hooks/useStore';\n\nconst ResultDispositionPage = ():JSX.Element => {\n  const { companyStore } = useStore();\n\n  const handleSubmit = (e:Company) => {\n    console.log(e);\n  };\n  return (\n    <Formik\n      onSubmit={(e) => handleSubmit(e)}\n      initialValues={companyStore.company}\n    >\n      {() => (\n        <Form>\n          <Page>\n            <Card>\n              <Grid container direction=\"column\">\n                <SubTitle\n                  current={`${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)} `}\n                  previous={companyStore.company.fiscalYears.previousStart && `${formatDate(companyStore.company.fiscalYears.previousStart)} - ${formatDate(companyStore.company.fiscalYears.previousEnd)}`}\n                  subTitle=\"Resultatdisposition\"\n                />\n                <MultiRow\n                  isNoBorder\n                  isSum\n                  isBold\n                  subTitle=\"Förfogade medel\"\n                />\n                <MultiRow\n                  current={(\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n)}\n                  previous={(\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n)}\n                  subTitle=\"Balanserat resultat\"\n                />\n                <MultiRow\n                  current={(\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n)}\n                  previous={(\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n)}\n                  subTitle=\"Årest resultat\"\n                />\n                <MultiRow\n                  isSum\n                  isBold\n                  subTitle=\"Summa\"\n                  current=\"100kr\"\n                  previous=\"100kr\"\n                />\n                <MultiRow\n                  isNoBorder\n                  isSum\n                  isBold\n                  subTitle=\"Förslag till årstämma\"\n                />\n                <MultiRow\n                  subTitle=\"Utdelas till aktieägare\"\n                  current={(\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n)}\n                  previous={(\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n)}\n                />\n                <MultiRow\n                  subTitle=\"Återbetalning av aktieägartillskott\"\n                  current={(\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n)}\n                  previous={(\n                    <Field\n                      type=\"number\"\n                      name=\"\"\n                      as={TextField}\n                      setField\n                      fullWidth\n                    />\n)}\n                />\n                <MultiRow\n                  subTitle=\"Balanseras i en ny räkning\"\n                  current=\"100kr\"\n                  previous=\"100kr\"\n                  isSum\n                  isBold\n                />\n\n                <MultiRow subTitle=\"Förändringar i eget kapital\" isSum isBold isNoBorder current=\"Lämna kommentar om förändring av kapital?\" previous={<Switch />} />\n\n                <Grid item alignSelf=\"center\">\n                  <Button type=\"submit\" variant=\"contained\">Fortsätt</Button>\n                </Grid>\n              </Grid>\n            </Card>\n          </Page>\n        </Form>\n      )}\n\n    </Formik>\n  );\n};\n\nexport default ResultDispositionPage;\n","import { Company } from './interfaces';\n\nconst sumAreas = ['operatingProfit', 'profitBeforeTaxes', 'yearResult', 'financialProfit'];\n// reCalculate sections from inputs. Exlude sums.\nfunction calculateInputResults(company: Company): void {\n  return Object.entries(company.result)\n    .forEach(([section, data]) => {\n      if (sumAreas.includes(section)) return;\n      // eslint-disable-next-line no-param-reassign\n      company.result[section].current = Object.values(data.children)\n        .reduce((total, { current }) => total + current, 0);\n      // eslint-disable-next-line no-param-reassign\n      company.result[section].previous = Object.values(data.children)\n        .reduce((total, { previous }) => total + previous, 0);\n    });\n}\n// Just put in subSummed values to the sums.\nfunction sumInputResults(company: Company): void {\n  // eslint-disable-next-line no-param-reassign\n  company.result.operatingProfit.current = company.result.operatingIncome.current\n    + company.result.operatingCosts.current;\n  // eslint-disable-next-line no-param-reassign\n  company.result.financialProfit.current = company.result.operatingProfit.current\n    + company.result.financialPosts.current;\n  // eslint-disable-next-line no-param-reassign\n  company.result.profitBeforeTaxes.current = company.result.financialProfit.current\n    + company.result.yearEndDistribution.current;\n  // eslint-disable-next-line no-param-reassign\n  company.result.yearResult.current = company.result.profitBeforeTaxes.current\n    + company.result.taxes.current;\n  // eslint-disable-next-line no-param-reassign\n  company.result.operatingProfit.previous = company.result.operatingIncome.previous\n    + company.result.operatingCosts.previous;\n  // eslint-disable-next-line no-param-reassign\n  company.result.financialProfit.previous = company.result.operatingProfit.previous\n    + company.result.financialPosts.previous;\n  // eslint-disable-next-line no-param-reassign\n  company.result.profitBeforeTaxes.previous = company.result.financialProfit.previous\n    + company.result.yearEndDistribution.previous;\n  // eslint-disable-next-line no-param-reassign\n  company.result.yearResult.previous = company.result.profitBeforeTaxes.previous\n    + company.result.taxes.previous;\n}\n\nexport { calculateInputResults as default, sumInputResults };\n","import { FC, Fragment } from 'react';\nimport {\n  Button, Grid, TextField,\n} from '@mui/material';\nimport { observer } from 'mobx-react-lite';\nimport { FastField, Form, Formik } from 'formik';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport MultiRow from '../../components/MultiRow';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate, formatCurrency } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\nimport resultSectionsData from '../../info/resultSectionsData';\nimport { Company } from '../../functions/interfaces';\nimport calculateInputResults, { sumInputResults } from '../../functions/calculateInputResults';\nimport StyledNavLink from '../../components/StyledNavLink';\n\ninterface Child\n  {\n    [resultRowIdentifier: string]: {\n      title: string\n      accountRange: [number, number]\n    }\n  }\n\nconst ResultSheetPage:FC = observer(() => {\n  const { companyStore } = useStore();\n\n  const { result } = companyStore.company;\n\n  // eslint-disable-next-line\n  const entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\n  const handleSubmit = (company:Company) => {\n    calculateInputResults(company);\n    sumInputResults(company);\n    companyStore.hydrate(company);\n  };\n\n  return (\n    <>\n      <Formik\n        onSubmit={(e) => handleSubmit(e)}\n        initialValues={companyStore.company}\n      >\n        {() => (\n          <Form>\n            <Page>\n              <Card>\n                <Grid container direction=\"column\">\n                  <SubTitle\n                    current={`${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)} `}\n                    previous={companyStore.company.fiscalYears.previousStart && `${formatDate(companyStore.company.fiscalYears.previousStart)} - ${formatDate(companyStore.company.fiscalYears.previousEnd)}`}\n                    subTitle=\"Resultaträkning\"\n                  />\n                  {Object.entries(resultSectionsData).map(([section, sectionData], i) => (\n                    <Fragment key={i}>\n                      {Object.entries(sectionData.children as Child)\n                        .map(([child, childData], id) => (\n                          <MultiRow\n                            current={(\n                              <FastField\n                                type=\"number\"\n                                label={childData?.title}\n                                name={`result.${[section]}.children.${[child]}.current`}\n                                as={TextField}\n                                setField\n                                fullWidth\n                              />\n)}\n                            previous={\n                          companyStore.company.fiscalYears.previousStart && (\n                          <FastField\n                            type=\"number\"\n                            label={childData?.title}\n                            name={`result.${[section]}.children.${[child]}.previous`}\n                            as={TextField}\n                            setField\n                            fullWidth\n                          />\n                          )\n}\n                            key={id}\n                            subTitle={childData?.title}\n                          />\n                        ))}\n\n                      <MultiRow\n                        current={formatCurrency(result[section]?.current?.toFixed(2), true)}\n                        previous={companyStore.company.fiscalYears.previousStart\n                          && formatCurrency(result[section]?.previous?.toFixed(2), true)}\n                        isSum\n                        isBold\n                        subTitle={sectionData.sumTitle || sectionData.title}\n                      />\n                    </Fragment>\n                  ))}\n\n                  <Grid item alignSelf=\"center\">\n                    <Button type=\"submit\" variant=\"contained\">spara</Button>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Page>\n          </Form>\n        )}\n\n      </Formik>\n      <StyledNavLink disabled={!companyStore.isReady} to=\"/balance-sheet\">\n        <Button disabled={!companyStore.isReady} variant=\"contained\">Fortsätt</Button>\n      </StyledNavLink>\n    </>\n  );\n});\n\nexport default ResultSheetPage;\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\ntype Props = {\n  first?:string\n  second?: React.ReactNode\n  third?: React.ReactNode\n  fourth?:React.ReactNode\n  fifth?: React.ReactNode\n}\n\nconst SignRow:React.FC<Props> = ({\n  first, second, third, fourth, fifth,\n\n}) => (\n\n  <Grid xs={12} mb={12} flexDirection=\"row\" container gap={50}>\n    <Typography alignSelf=\"center\" variant=\"h6\">{first}</Typography>\n    {second}\n    {third}\n    {fourth}\n    {fifth}\n\n  </Grid>\n);\n\nexport default SignRow;\n","// import { NavLink } from 'react-router-dom';\nimport { Grid, TextField, Typography } from '@mui/material';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { useState } from 'react';\nimport Card from '../../components/Card';\nimport MultiRow from '../../components/MultiRow';\nimport Page from '../../components/Page';\nimport SubTitle from '../../components/SubTitle';\nimport SignRow from './components/SignRow';\n\nconst SignPage = () => {\n  const [value, setValue] = useState<Date | null>(new Date());\n  return (\n    <Page>\n      <Card>\n\n        <SubTitle subTitle=\"Befattningshavare\" />\n        <Typography variant=\"h5\">Styrelseledamöter och vd</Typography>\n        <Typography>\n          <p style={{ marginTop: 8, marginBottom: 1 }}>\n            Observera att endast ordinarie styrelseledamöter\n            ska anges tillsammans med en eventuell VD.\n          </p>\n          <p style={{ marginTop: 1, marginBottom: 1 }}>\n            Suppleanter ska bara tas med om\n            de ska ersätta en ordinarie ledamot vid underskrift av årsredovisning.\n          </p>\n          <p style={{ marginTop: 1, marginBottom: 1 }}>\n            Om du vill ha en annan rollbeskrivning än någon av de förvalda\n            går det att skriva en egen beskrivning direkt i fältet.\n          </p>\n        </Typography>\n        <Grid xs={12} container flexDirection=\"row\" mt={12} ml={105} gap={50}>\n          <Typography width=\"172px\">Förnman</Typography>\n          <Typography width=\"172px\">Efternamn</Typography>\n          <Typography width=\"172px\">Personnummer</Typography>\n          <Typography width=\"172px\">Roll</Typography>\n        </Grid>\n        <SignRow first=\"Företrädare 1\" second={<TextField name=\"\" />} third={<TextField name=\"\" />} fourth={<TextField name=\"\" />} fifth={<TextField name=\"\" />} />\n\n        <Typography variant=\"h5\">Ort och datum för underskrift av årsredovisning</Typography>\n        <Typography mb={12}>\n          <p style={{ marginTop: 8, marginBottom: 1 }}>\n            Här kan du fylla i när och var årsredovisningen skrivs under\n            och då fylls det i automatiskt i årsredovisningen.\n          </p>\n\n        </Typography>\n        <MultiRow\n          isBold\n          subTitle=\"Datum då årsredovisningen skrivs under\"\n          current={(\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DesktopDatePicker\n                label=\"For desktop\"\n                value={value}\n                minDate={new Date()}\n                onChange={(newValue) => {\n                  setValue(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider>\n)}\n        />\n        <MultiRow isBold subTitle=\"Ort där årsredovisningen skrivs under\" current={<TextField name=\"\" />} />\n      </Card>\n\n    </Page>\n  );\n};\n\nexport default SignPage;\n","import { Button, TextareaAutosize, Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport SubTitle from '../../components/SubTitle';\n\nconst YearStoryPage = () => (\n  <Page>\n    <Card>\n      <SubTitle subTitle=\"Förvaltningsberättelse\" />\n      <Typography mb={12} variant=\"h5\"> Allmänt om verksamheten</Typography>\n      <TextareaAutosize cols={100} minRows={20} />\n      <Typography mb={12} mt={12} variant=\"h5\"> Väsentliga händelser under räkenskapsårets</Typography>\n      <TextareaAutosize cols={100} minRows={20} />\n      <Typography mb={12} mt={12} variant=\"h5\"> Väsentliga händelser efter räkenskapsårets slut</Typography>\n      <TextareaAutosize cols={100} minRows={20} />\n    </Card>\n    <NavLink to=\"/sign\">\n      <div style={{ display: 'grid', justifyContent: 'center', marginTop: 12 }}>\n        <Button variant=\"contained\">Fortsätt</Button>\n      </div>\n    </NavLink>\n  </Page>\n);\nexport default YearStoryPage;\n","import { FC, Fragment } from 'react';\nimport {\n  Button, Grid, TextField,\n} from '@mui/material';\nimport {\n  FastField, Form, Formik,\n} from 'formik';\nimport Card from '../../components/Card';\nimport Page from '../../components/Page';\nimport MultiRow from '../../components/MultiRow';\nimport SubTitle from '../../components/SubTitle';\nimport { formatDate, formatCurrency } from '../../functions/formatting';\nimport useStore from '../../hooks/useStore';\nimport { Company } from '../../functions/interfaces';\nimport calculateInputResults from '../../functions/calculateInputResults';\nimport balanceSections from '../../info/balanceSectionsData';\n\ninterface Child\n  {\n    [resultRowIdentifier: string]: {\n      title: string\n      accountRange: [number, number]\n      current?:number\n      previous?:number\n    }\n  }\n\nconst BalanceSheetPage:FC = () => {\n  const { companyStore } = useStore();\n\n  const { balance } = companyStore.company;\n\n  // eslint-disable-next-line\n  const entries = Object.entries as <T>(o: T) => [Extract<keyof T, string>, T[keyof T]][];\n\n  const handleSubmit = (company:Company) => {\n    calculateInputResults(company);\n    companyStore.hydrate(company);\n  };\n\n  return (\n    <Formik\n      onSubmit={(e) => handleSubmit(e)}\n      initialValues={companyStore.company}\n    >\n      {() => (\n        <Form>\n          <Page>\n            <Card>\n              <Grid container direction=\"column\">\n                <SubTitle\n                  current={`${formatDate(companyStore.company.fiscalYears.currentStart)} - ${formatDate(companyStore.company.fiscalYears.currentEnd)} `}\n                  previous={companyStore.company.fiscalYears.previousStart && `${formatDate(companyStore.company.fiscalYears.previousStart)} - ${formatDate(companyStore.company.fiscalYears.previousEnd)}`}\n                  subTitle=\"Balansräkning\"\n                />\n                {Object.entries(balanceSections).map(([section, sectionData], i) => (\n                  <Fragment key={i}>\n                    {sectionData.title && (\n                    <MultiRow\n                      isNoBorder\n                      isSum\n                      isBold\n                      subTitle={sectionData.title}\n                    />\n                    )}\n                    {Object.entries(sectionData.children as Child)\n                      .filter(([child]) => balance[section].children[child].current > 0 || balance[section].children[child].previous > 0)\n                      .map(([child, childData], id) => (\n                        <MultiRow\n                          current={(\n                            <FastField\n                              type=\"number\"\n                              label={childData?.title}\n                              name={`balance.${[section]}.children.${[child]}.current`}\n                              as={TextField}\n                              setField\n                              fullWidth\n                            />\n)}\n                          previous={(\n                          companyStore.company.fiscalYears.previousStart && (\n                          <FastField\n                            type=\"number\"\n                            label={childData?.title}\n                            name={`balance.${[section]}.children.${[child]}.previous`}\n                            as={TextField}\n                            setField\n                            fullWidth\n                          />\n                          )\n)}\n                          key={id}\n                          subTitle={childData?.title}\n                        />\n                      ))}\n\n                    <MultiRow\n                      current={formatCurrency(balance[section]?.current?.toFixed(2), true)}\n                      previous={companyStore.company.fiscalYears.previousStart\n                        && formatCurrency(balance[section]?.previous?.toFixed(2), true)}\n                      isSum\n                      isBold\n                      subTitle={sectionData.sumTitle || sectionData.title}\n                    />\n                  </Fragment>\n                ))}\n\n                <Grid item alignSelf=\"center\">\n                  <Button type=\"submit\" variant=\"contained\">Fortsätt</Button>\n                </Grid>\n              </Grid>\n            </Card>\n          </Page>\n        </Form>\n      )}\n\n    </Formik>\n  );\n};\n\nexport default BalanceSheetPage;\n","import Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { useState } from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport TimeLine from '../components/TimeLine';\nimport useStore from '../hooks/useStore';\nimport CompanyInfoPage from '../pages/CompanyInfoPage/CompanyInfoPage';\nimport FiscalYearPage from '../pages/FiscalYearPage/FiscalYearPage';\nimport LoadSie from '../pages/LoadSiePage/LoadSiePage';\nimport NotesPage from '../pages/NotesPage/NotesPage';\nimport Pdf from '../pages/PDF/pdf';\nimport ResultDispositionPage from '../pages/ResultDispositionPage/ResultDispositionPage';\nimport ResultSheetPage from '../pages/ResultSheetPage/ResultSheetPage';\nimport SignPage from '../pages/SignPage/SignPage';\nimport YearStoryPage from '../pages/YearStoryPage/YearStoryPage';\nimport BalanceSheetPage from '../pages/BalanceSheetPage/BalanceSheetPage';\n\nconst Navigation = () => {\n  const { companyStore } = useStore();\n  const companyInfo = JSON.parse(localStorage.getItem('companyInfo'));\n  if (companyInfo) companyStore.hydrate(companyInfo);\n\n  const [isGeneratePdf, setIsGeneratePdf] = useState(false);\n\n  if (isGeneratePdf) {\n    return (\n      <div style={{ height: '100vh' }}>\n        <Grid\n          container\n          justifyContent=\"flex-end\"\n          position=\"absolute\"\n          top={70}\n          right={25}\n        >\n          <Button onClick={() => setIsGeneratePdf(!isGeneratePdf)} disabled={!companyStore.isReady} variant=\"contained\">Avbryt</Button>\n        </Grid>\n        <PDFViewer width=\"100%\" height=\"100%\">\n          <Pdf companyStore={companyStore} />\n        </PDFViewer>\n      </div>\n    );\n  } return (\n    <BrowserRouter>\n      <Grid\n        container\n        justifyContent=\"flex-end\"\n      >\n        <Button onClick={() => setIsGeneratePdf(!isGeneratePdf)} variant=\"contained\">Förhandsgranska</Button>\n      </Grid>\n      <TimeLine />\n      <Routes>\n        {/* Siefil */}\n        <Route path=\"/Arsredovisning\" element={<LoadSie />} />\n        {/* Välj räkenskapsår */}\n        <Route path=\"/fiscal-year\" element={<FiscalYearPage />} />\n        {/* Företagsuppgifter */}\n        <Route path=\"/company-info\" element={<CompanyInfoPage />} />\n        {/* Resultaträkning */}\n        <Route path=\"/result-sheet\" element={<ResultSheetPage />} />\n        {/* Balansräkning */}\n        <Route path=\"/balance-sheet\" element={<BalanceSheetPage />} />\n        {/* Resultatdisposition */}\n        <Route path=\"/result-disposition\" element={<ResultDispositionPage />} />\n        {/* Noter */}\n        <Route path=\"/notes\" element={<NotesPage />} />\n        {/* Förvaltningsberättelse */}\n        <Route path=\"/year-story\" element={<YearStoryPage />} />\n        {/* Befattningshavare */}\n        <Route path=\"/sign\" element={<SignPage />} />\n\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Navigation;\n","import { createTheme, GlobalStyles, ThemeProvider } from '@mui/material';\nimport './App.css';\nimport { StoreProvider } from './hooks/useStore';\nimport Navigation from './navigation/navigation';\n\nconst theme = createTheme({\n  spacing: 2,\n  palette: {\n    primary: {\n      main: '#6f12cd',\n    },\n  },\n  typography: {\n    fontFamily: 'Comfortaa',\n    fontSize: 11,\n  },\n  components: {\n    MuiCard: {\n      defaultProps: {\n        elevation: 5,\n      },\n\n    },\n\n    MuiButton: {\n      styleOverrides: {\n        contained: {\n          minWidth: '64px',\n          minHeight: '36px',\n          padding: '8px 16px',\n          lineHeight: 0.5,\n        },\n      },\n    },\n  },\n});\n\nfunction App():JSX.Element {\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles\n          styles={{\n            body: { backgroundColor: '#dae9cc5c' },\n          }}\n        />\n        <Navigation />\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}